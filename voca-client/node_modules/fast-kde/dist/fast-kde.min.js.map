{"version":3,"file":"fast-kde.min.js","sources":["../src/accessor.js","../src/deriche.js","../src/extent.js","../src/nrd.js","../src/heatmap.js","../src/density2d.js","../src/density1d.js","../src/bin1d.js","../src/bin2d.js"],"sourcesContent":["export function accessor(x, fallback) {\n  return x == null ? fallback\n    : typeof x === 'function' ? x\n    : d => d[x];\n}\n","// Deriche's approximation of Gaussian smoothing\n// Adapted from Getreuer's C implementation (BSD license)\n// https://www.ipol.im/pub/art/2013/87/gaussian_20131215.tgz\n// http://dev.ipol.im/~getreuer/code/doc/gaussian_20131215_doc/gaussian__conv__deriche_8c.html\n\nexport function dericheConfig(sigma, negative = false) {\n  // compute causal filter coefficients\n  const a = new Float64Array(5);\n  const bc = new Float64Array(4);\n  dericheCausalCoeff(a, bc, sigma);\n\n  // numerator coefficients of the anticausal filter\n  const ba = Float64Array.of(\n    0,\n    bc[1] - a[1] * bc[0],\n    bc[2] - a[2] * bc[0],\n    bc[3] - a[3] * bc[0],\n    -a[4] * bc[0]\n  );\n\n  // impulse response sums\n  const accum_denom = 1.0 + a[1] + a[2] + a[3] + a[4];\n  const sum_causal = (bc[0] + bc[1] + bc[2] + bc[3]) / accum_denom;\n  const sum_anticausal = (ba[1] + ba[2] + ba[3] + ba[4]) / accum_denom;\n\n  // coefficients object\n  return {\n    sigma,\n    negative,\n    a,\n    b_causal: bc,\n    b_anticausal: ba,\n    sum_causal,\n    sum_anticausal\n  };\n}\n\nfunction dericheCausalCoeff(a_out, b_out, sigma) {\n  const K = 4;\n\n  const alpha = Float64Array.of(\n    0.84, 1.8675,\n    0.84, -1.8675,\n    -0.34015, -0.1299,\n    -0.34015, 0.1299\n  );\n\n  const x1 = Math.exp(-1.783 / sigma);\n  const x2 = Math.exp(-1.723 / sigma);\n  const y1 = 0.6318 / sigma;\n  const y2 = 1.997 / sigma;\n  const beta = Float64Array.of(\n    -x1 * Math.cos( y1), x1 * Math.sin( y1),\n    -x1 * Math.cos(-y1), x1 * Math.sin(-y1),\n    -x2 * Math.cos( y2), x2 * Math.sin( y2),\n    -x2 * Math.cos(-y2), x2 * Math.sin(-y2)\n  );\n\n  const denom = sigma * 2.5066282746310007;\n\n  // initialize b/a = alpha[0] / (1 + beta[0] z^-1)\n  const b = Float64Array.of(alpha[0], alpha[1], 0, 0, 0, 0, 0, 0);\n  const a = Float64Array.of(1, 0, beta[0], beta[1], 0, 0, 0, 0, 0, 0);\n\n  let j, k;\n\n  for (k = 2; k < 8; k += 2) {\n    // add kth term, b/a += alpha[k] / (1 + beta[k] z^-1)\n    b[k]     = beta[k] * b[k - 2] - beta[k + 1] * b[k - 1];\n    b[k + 1] = beta[k] * b[k - 1] + beta[k + 1] * b[k - 2];\n    for (j = k - 2; j > 0; j -= 2) {\n      b[j]     += beta[k] * b[j - 2] - beta[k + 1] * b[j - 1];\n      b[j + 1] += beta[k] * b[j - 1] + beta[k + 1] * b[j - 2];\n    }\n    for (j = 0; j <= k; j += 2) {\n      b[j]     += alpha[k] * a[j]     - alpha[k + 1] * a[j + 1];\n      b[j + 1] += alpha[k] * a[j + 1] + alpha[k + 1] * a[j];\n    }\n\n    a[k + 2] = beta[k] * a[k]     - beta[k + 1] * a[k + 1];\n    a[k + 3] = beta[k] * a[k + 1] + beta[k + 1] * a[k];\n    for (j = k; j > 0; j -= 2) {\n      a[j]     += beta[k] * a[j - 2] - beta[k + 1] * a[j - 1];\n      a[j + 1] += beta[k] * a[j - 1] + beta[k + 1] * a[j - 2];\n    }\n  }\n\n  for (k = 0; k < K; ++k) {\n    j = k << 1;\n    b_out[k] = b[j] / denom;\n    a_out[k + 1] = a[j + 2];\n  }\n}\n\nexport function dericheConv2d(cx, cy, grid, [nx, ny]) {\n  // allocate buffers\n  const yc = new Float64Array(Math.max(nx, ny)); // causal\n  const ya = new Float64Array(Math.max(nx, ny)); // anticausal\n  const h = new Float64Array(5);\n  const d = new Float64Array(grid.length);\n\n  // convolve rows\n  for (let row = 0, r0 = 0; row < ny; ++row, r0 += nx) {\n    const dx = d.subarray(r0);\n    dericheConv1d(cx, grid.subarray(r0), nx, 1, yc, ya, h, dx);\n  }\n\n  // convolve columns\n  for (let c0 = 0; c0 < nx; ++c0) {\n    const dy = d.subarray(c0);\n    dericheConv1d(cy, dy, ny, nx, yc, ya, h, dy);\n  }\n\n  return d;\n}\n\nexport function dericheConv1d(\n  c, src, N,\n  stride = 1,\n  y_causal = new Float64Array(N),\n  y_anticausal = new Float64Array(N),\n  h = new Float64Array(5),\n  d = y_causal,\n  init = dericheInitZeroPad\n) {\n  const stride_2 = stride * 2;\n  const stride_3 = stride * 3;\n  const stride_4 = stride * 4;\n  const stride_N = stride * N;\n  let i, n;\n\n  // initialize causal filter on the left boundary\n  init(\n    y_causal, src, N, stride,\n    c.b_causal, 3, c.a, 4, c.sum_causal, h, c.sigma\n  );\n\n  // filter the interior samples using a 4th order filter. Implements:\n  // for n = K, ..., N - 1,\n  //   y^+(n) = \\sum_{k=0}^{K-1} b^+_k src(n - k)\n  //          - \\sum_{k=1}^K a_k y^+(n - k)\n  // variable i tracks the offset to the nth sample of src, it is\n  // updated together with n such that i = stride * n.\n  for (n = 4, i = stride_4; n < N; ++n, i += stride) {\n    y_causal[n] = c.b_causal[0] * src[i]\n      + c.b_causal[1] * src[i - stride]\n      + c.b_causal[2] * src[i - stride_2]\n      + c.b_causal[3] * src[i - stride_3]\n      - c.a[1] * y_causal[n - 1]\n      - c.a[2] * y_causal[n - 2]\n      - c.a[3] * y_causal[n - 3]\n      - c.a[4] * y_causal[n - 4];\n  }\n\n  // initialize the anticausal filter on the right boundary\n  init(\n    y_anticausal, src, N, -stride,\n    c.b_anticausal, 4, c.a, 4, c.sum_anticausal, h, c.sigma\n  );\n\n  // similar to the causal filter above, the following implements:\n  // for n = K, ..., N - 1,\n  //   y^-(n) = \\sum_{k=1}^K b^-_k src(N - n - 1 - k)\n  //          - \\sum_{k=1}^K a_k y^-(n - k)\n  // variable i is updated such that i = stride * (N - n - 1).\n  for (n = 4, i = stride_N - stride * 5; n < N; ++n, i -= stride) {\n    y_anticausal[n] = c.b_anticausal[1] * src[i + stride]\n      + c.b_anticausal[2] * src[i + stride_2]\n      + c.b_anticausal[3] * src[i + stride_3]\n      + c.b_anticausal[4] * src[i + stride_4]\n      - c.a[1] * y_anticausal[n - 1]\n      - c.a[2] * y_anticausal[n - 2]\n      - c.a[3] * y_anticausal[n - 3]\n      - c.a[4] * y_anticausal[n - 4];\n  }\n\n  // sum the causal and anticausal responses to obtain the final result\n  if (c.negative) {\n    // do not threshold if the input grid includes negatively weighted values\n    for (n = 0, i = 0; n < N; ++n, i += stride) {\n      d[i] = y_causal[n] + y_anticausal[N - n - 1];\n    }\n  } else {\n    // threshold to prevent small negative values due to floating point error\n    for (n = 0, i = 0; n < N; ++n, i += stride) {\n      d[i] = Math.max(0, y_causal[n] + y_anticausal[N - n - 1]);\n    }\n  }\n\n  return d;\n}\n\nexport function dericheInitZeroPad(\n  dest, src, N, stride, b, p, a, q,\n  sum, h, sigma, tol = 0.5\n) {\n  const stride_N = Math.abs(stride) * N;\n  const off = stride < 0 ? stride_N + stride : 0;\n  let i, n, m;\n\n  // compute the first q taps of the impulse response, h_0, ..., h_{q-1}\n  for (n = 0; n < q; ++n) {\n    h[n] = (n <= p) ? b[n] : 0;\n    for (m = 1; m <= q && m <= n; ++m) {\n      h[n] -= a[m] * h[n - m];\n    }\n  }\n\n  // compute dest_m = sum_{n=1}^m h_{m-n} src_n, m = 0, ..., q-1\n  // note: q == 4\n  for (m = 0; m < q; ++m) {\n    for (dest[m] = 0, n = 1; n <= m; ++n) {\n      i = off + stride * n;\n      if (i >= 0 && i < stride_N) {\n        dest[m] += h[m - n] * src[i];\n      }\n    }\n  }\n\n  const cur = src[off];\n  const max_iter = Math.ceil(sigma * 10);\n  for (n = 0; n < max_iter; ++n) {\n    /* dest_m = dest_m + h_{n+m} src_{-n} */\n    for (m = 0; m < q; ++m) {\n      dest[m] += h[m] * cur;\n    }\n\n    sum -= Math.abs(h[0]);\n    if (sum <= tol) break;\n\n    /* Compute the next impulse response tap, h_{n+q} */\n    h[q] = (n + q <= p) ? b[n + q] : 0;\n    for (m = 1; m <= q; ++m) {\n      h[q] -= a[m] * h[q - m];\n    }\n\n    /* Shift the h array for the next iteration */\n    for (m = 0; m < q; ++m) {\n      h[m] = h[m + 1];\n    }\n  }\n\n  return;\n}\n","export function extent(data, x, pad = 0) {\n  const n = data.length;\n  let lo;\n  let hi;\n  for (let i = 0; i < n; ++i) {\n    const v = x(data[i], i, data);\n    if (v != null) {\n      if (lo === undefined) {\n        if (v >= v) lo = hi = v;\n      } else {\n        if (v < lo) lo = v;\n        if (v > hi) hi = v;\n      }\n    }\n  }\n  return [lo - pad, hi + pad];\n}\n","// Scott, D. W. (1992) Multivariate Density Estimation:\n// Theory, Practice, and Visualization. Wiley.\nexport function nrd(data, x) {\n  const values = data.map(x).filter(v => v != null && v >= v);\n  values.sort((a, b) => a - b);\n  const sd = stdev(values);\n  const q1 = quantile(values, 0.25);\n  const q3 = quantile(values, 0.75);\n\n  const n = values.length,\n        h = (q3 - q1) / 1.34,\n        v = Math.min(sd, h) || sd || Math.abs(q1) || 1;\n\n  return 1.06 * v * Math.pow(n, -0.2);\n}\n\nfunction stdev(values) {\n  const n = values.length;\n  let count = 0;\n  let delta;\n  let mean = 0;\n  let sum = 0;\n  for (let i = 0; i < n; ++i) {\n    const value = values[i];\n    delta = value - mean;\n    mean += delta / ++count;\n    sum += delta * (value - mean);\n  }\n  return count > 1 ? Math.sqrt(sum / (count - 1)) : NaN;\n}\n\nfunction quantile(values, p) {\n  const n = values.length;\n\n  if (!n) return NaN;\n  if ((p = +p) <= 0 || n < 2) return values[0];\n  if (p >= 1) return values[n - 1];\n\n  const i = (n - 1) * p;\n  const i0 = Math.floor(i);\n  const v0 = values[i0];\n  return v0 + (values[i0 + 1] - v0) * (i - i0);\n}\n","import { rgb } from 'd3-color';\n\nexport function heatmap(\n  grid,\n  w,\n  h,\n  color = opacityMap(0, 0, 0),\n  [lo, hi] = [min(grid, 0), max(grid, 0)],\n  canvas = createCanvas(w, h),\n  paletteSize = 256\n) {\n  const norm = 1 / (hi - lo);\n  const ctx = canvas.getContext('2d');\n  const img = ctx.getImageData(0, 0, w, h);\n  const pix = img.data;\n  const size = paletteSize - 1;\n  const palette = buildPalette(size, color);\n\n  for (let j = 0, k = 0; j < h; ++j) {\n    for (let i = 0, row = (h - j - 1) * w; i < w; ++i, k += 4) {\n      const v = Math.min(1, Math.max(grid[i + row] - lo, 0) * norm);\n      const c = (size * v) << 2;\n      pix[k + 0] = palette[c + 0];\n      pix[k + 1] = palette[c + 1];\n      pix[k + 2] = palette[c + 2];\n      pix[k + 3] = palette[c + 3];\n    }\n  }\n\n  ctx.putImageData(img, 0, 0);\n  return canvas;\n}\n\nfunction buildPalette(size, interp) {\n  const p = new Uint8ClampedArray(4 * (size + 1));\n  for (let i = 0; i <= size; ++i) {\n    const v = interp(i / size);\n    const {r, g, b, opacity = 1} = typeof v === 'string' ? rgb(v) : v;\n    const k = i << 2;\n    p[k + 0] = r;\n    p[k + 1] = g;\n    p[k + 2] = b;\n    p[k + 3] = (255 * opacity) | 0;\n  }\n  return p;\n}\n\nfunction createCanvas(w, h) {\n  if (typeof document !== 'undefined') {\n    // eslint-disable-next-line no-undef\n    const c = document.createElement('canvas');\n    c.setAttribute('width', w);\n    c.setAttribute('height', h);\n    return c;\n  }\n  throw 'Can not create a canvas instance, provide a canvas as a parameter.';\n}\n\nfunction max(array, v) {\n  const n = array.length;\n  for (let i = 0; i < n; ++i) {\n    if (array[i] > v) v = array[i];\n  }\n  return v;\n}\n\nfunction min(array, v) {\n  const n = array.length;\n  for (let i = 0; i < n; ++i) {\n    if (array[i] < v) v = array[i];\n  }\n  return v;\n}\n\nexport function opacityMap(r, g, b) {\n  return opacity => ({ r, g, b, opacity });\n}\n","import { accessor } from './accessor.js';\nimport { bin2d } from './bin2d.js';\nimport { dericheConfig, dericheConv2d } from './deriche.js';\nimport { extent as densityExtent } from './extent.js';\nimport { heatmap } from './heatmap.js';\nimport { nrd } from './nrd.js';\n\nexport function density2d(data, options = {}) {\n  const { adjust = 1, pad = 3, bins = [256, 256] } = options;\n  const x = accessor(options.x, d => d[0]);\n  const y = accessor(options.y, d => d[1]);\n  const w = accessor(options.weight, () => 1 / data.length);\n\n  let [\n    bwX = adjust * nrd(data, x),\n    bwY = adjust * nrd(data, y)\n  ] = number2(options.bandwidth);\n\n  const [\n    [x0, x1] = densityExtent(data, x, pad * bwX),\n    [y0, y1] = densityExtent(data, y, pad * bwY)\n  ] = number2_2(options.extent);\n\n  const [binsX, binsY] = number2(bins);\n\n  const grid = bin2d(data, x, y, w, x0, x1, binsX, y0, y1, binsY);\n  const deltaX = (x1 - x0) / (binsX - 1);\n  const deltaY = (y1 - y0) / (binsY - 1);\n  const neg = grid.some(v => v < 0);\n\n  let configX = dericheConfig(bwX / deltaX, neg);\n  let configY = dericheConfig(bwY / deltaY, neg);\n  let result;\n\n  function* points(x = 'x', y = 'y', z = 'z') {\n    const result = estimator.grid();\n    const scale = 1 / (deltaX * deltaY);\n    for (let k = 0, j = 0; j < binsY; ++j) {\n      for (let i = 0; i < binsX; ++i, ++k) {\n        yield {\n          [x]: x0 + i * deltaX,\n          [y]: y0 + j * deltaY,\n          [z]: result[k] * scale\n        };\n      }\n    }\n  }\n\n  const estimator = {\n    [Symbol.iterator]: points,\n    points,\n    grid: () => result || (result = dericheConv2d(configX, configY, grid, [binsX, binsY])),\n    extent: () => [ [x0, x1], [y0, y1] ],\n    heatmap: ({ color, clamp, canvas, maxColors } = {}) =>\n      heatmap(estimator.grid(), binsX, binsY, color, clamp, canvas, maxColors),\n    bandwidth(_) {\n      if (arguments.length) {\n        const [_0, _1] = number2(_);\n        if (_0 !== bwX) {\n          result = null;\n          configX = dericheConfig((bwX = _0) / deltaX, neg);\n        }\n        if (_1 !== bwY) {\n          result = null;\n          configY = dericheConfig((bwY = _1) / deltaY, neg);\n        }\n        return estimator;\n      } else {\n        return [bwX, bwY];\n      }\n    }\n  };\n\n  return estimator;\n}\n\nfunction number2(_) {\n  return _ == null ? [undefined, undefined]\n    : typeof _ === 'number' ? [_, _]\n    : _;\n}\n\nfunction number2_2(_) {\n  return _ == null ? [undefined, undefined]\n    : typeof _[0] === 'number' ? [_, _]\n    : _;\n}\n","import { accessor } from './accessor.js';\nimport { bin1d } from './bin1d.js';\nimport { dericheConfig, dericheConv1d } from './deriche.js';\nimport { extent as densityExtent } from './extent.js';\nimport { nrd } from './nrd.js';\n\nexport function density1d(data, options = {}) {\n  const { adjust = 1, pad = 3, bins = 512 } = options;\n  const x = accessor(options.x, x => x);\n  const w = accessor(options.weight, () => 1 / data.length);\n\n  let bandwidth = options.bandwidth ?? adjust * nrd(data, x);\n\n  const [lo, hi] = options.extent ?? densityExtent(data, x, pad * bandwidth);\n  const grid = bin1d(data, x, w, lo, hi, bins);\n  const delta = (hi - lo) / (bins - 1);\n  const neg = grid.some(v => v < 0);\n\n  let config = dericheConfig(bandwidth / delta, neg);\n  let result;\n\n  function* points(x = 'x', y = 'y') {\n    const result = estimator.grid();\n    const scale = 1 / delta;\n    for (let i = 0; i < bins; ++i) {\n      yield {\n        [x]: lo + i * delta,\n        [y]: result[i] * scale\n      };\n    }\n  }\n\n  const estimator = {\n    [Symbol.iterator]: points,\n    points,\n    grid: () => result || (result = dericheConv1d(config, grid, bins)),\n    extent: () => [lo, hi],\n    bandwidth(_) {\n      if (arguments.length) {\n        if (_ !== bandwidth) {\n          bandwidth = _;\n          result = null;\n          config = dericheConfig(bandwidth / delta, neg);\n        }\n        return estimator;\n      } else {\n        return bandwidth;\n      }\n    }\n  };\n\n  return estimator;\n}\n","export function bin1d(data, x, weight, lo, hi, n) {\n  const grid = new Float64Array(n);\n  const delta = (n - 1) / (hi - lo);\n\n  for (let i = 0; i < data.length; ++i) {\n    const d = data[i];\n    const xi = x(d, i, data);\n    const wi = weight(d, i, data);\n\n    // skip NaN and Infinite values\n    if (!(Number.isFinite(xi) && Number.isFinite(wi))) {\n      continue;\n    }\n\n    const p = (xi - lo) * delta;\n    const u = Math.floor(p);\n    const v = u + 1;\n\n    if (0 <= u && v < n) {\n      grid[u] += (v - p) * wi;\n      grid[v] += (p - u) * wi;\n    } else if (u === -1) {\n      grid[v] += (p - u) * wi;\n    } else if (v === n) {\n      grid[u] += (v - p) * wi;\n    }\n  }\n\n  return grid;\n}\n","export function bin2d(data, x, y, w, x0, x1, xn, y0, y1, yn) {\n  const grid = new Float64Array(xn * yn);\n  const xdelta = (xn - 1) / (x1 - x0);\n  const ydelta = (yn - 1) / (y1 - y0);\n\n  for (let i = 0; i < data.length; ++i) {\n    const d = data[i];\n    const xi = x(d, i, data);\n    const yi = y(d, i, data);\n    const wi = w(d, i, data);\n\n    // skip NaN and Infinite values\n    if (!(Number.isFinite(xi) && Number.isFinite(yi) && Number.isFinite(wi))) {\n      continue;\n    }\n\n    const xp = (xi - x0) * xdelta;\n    const xu = Math.floor(xp);\n    const xv = xu + 1;\n    const yp = (yi - y0) * ydelta;\n    const yu = Math.floor(yp);\n    const yv = yu + 1;\n\n    if (0 <= xu && xv < xn) {\n      if (0 <= yu && yv < yn) {\n        grid[xu + yu * xn] += (xv - xp) * (yv - yp) * wi;\n        grid[xu + yv * xn] += (xv - xp) * (yp - yu) * wi;\n        grid[xv + yu * xn] += (xp - xu) * (yv - yp) * wi;\n        grid[xv + yv * xn] += (xp - xu) * (yp - yu) * wi;\n      } else if (yu === -1) {\n        grid[xu + yv * xn] += (xv - xp) * (yp - yu) * wi;\n        grid[xv + yv * xn] += (xp - xu) * (yp - yu) * wi;\n      } else if (yv === yn) {\n        grid[xv + yu * xn] += (xp - xu) * (yv - yp) * wi;\n        grid[xu + yu * xn] += (xv - xp) * (yv - yp) * wi;\n      }\n    } else if (xu === -1) {\n      if (0 <= yu && yv < yn) {\n        grid[xv + yu * xn] += (xp - xu) * (yv - yp) * wi;\n        grid[xv + yv * xn] += (xp - xu) * (yp - yu) * wi;\n      } else if (yu === -1) {\n        grid[xv + yv * xn] += (xp - xu) * (yp - yu) * wi;\n      } else if (yv === yn) {\n        grid[xv + yu * xn] += (xp - xu) * (yv - yp) * wi;\n      }\n    } else if (xv === xn) {\n      if (0 <= yu && yv < yn) {\n        grid[xu + yu * xn] += (xv - xp) * (yv - yp) * wi;\n        grid[xu + yv * xn] += (xv - xp) * (yp - yu) * wi;\n      } else if (yu === -1) {\n        grid[xu + yv * xn] += (xv - xp) * (yp - yu) * wi;\n      } else if (yv === yn) {\n        grid[xu + yu * xn] += (xv - xp) * (yv - yp) * wi;\n      }\n    }\n  }\n\n  return grid;\n}\n"],"names":["accessor","x","fallback","d","dericheConfig","sigma","negative","a","Float64Array","bc","a_out","b_out","K","alpha","of","x1","Math","exp","x2","y1","y2","beta","cos","sin","denom","b","j","k","dericheCausalCoeff","ba","accum_denom","b_causal","b_anticausal","sum_causal","sum_anticausal","dericheConv1d","c","src","N","stride","y_causal","y_anticausal","h","init","dericheInitZeroPad","stride_2","stride_3","stride_4","stride_N","i","n","max","dest","p","q","sum","tol","abs","off","m","cur","max_iter","ceil","extent","data","pad","length","lo","hi","v","undefined","nrd","values","map","filter","sort","sd","delta","count","mean","value","sqrt","NaN","stdev","q1","quantile","q3","min","pow","i0","floor","v0","heatmap","grid","w","color","opacityMap","canvas","document","createElement","setAttribute","createCanvas","paletteSize","norm","ctx","getContext","img","getImageData","pix","size","palette","interp","Uint8ClampedArray","r","g","opacity","rgb","buildPalette","row","putImageData","array","number2","_","options","adjust","bins","weight","bandwidth","densityExtent","xi","wi","Number","isFinite","u","bin1d","neg","some","result","config","points","y","estimator","scale","Symbol","iterator","arguments","bwX","bwY","x0","y0","binsX","binsY","xn","yn","xdelta","ydelta","yi","xp","xu","xv","yp","yu","yv","bin2d","deltaX","deltaY","configX","configY","z","cx","cy","nx","ny","yc","ya","r0","dx","subarray","c0","dy","dericheConv2d","clamp","maxColors","_0","_1"],"mappings":"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"}