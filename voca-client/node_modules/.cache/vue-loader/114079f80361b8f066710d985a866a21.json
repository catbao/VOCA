{"remainingRequest":"/Users/bao/Downloads/VOCA/voca-client/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/bao/Downloads/VOCA/voca-client/src/components/LeftSideDataControlPanel.vue?vue&type=template&id=5e9b4a3f&scoped=true","dependencies":[{"path":"/Users/bao/Downloads/VOCA/voca-client/src/components/LeftSideDataControlPanel.vue","mtime":1737974883303},{"path":"/Users/bao/Downloads/VOCA/voca-client/node_modules/cache-loader/dist/cjs.js","mtime":1732627998000},{"path":"/Users/bao/Downloads/VOCA/voca-client/node_modules/babel-loader/lib/index.js","mtime":1732627998000},{"path":"/Users/bao/Downloads/VOCA/voca-client/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1732627997000},{"path":"/Users/bao/Downloads/VOCA/voca-client/node_modules/cache-loader/dist/cjs.js","mtime":1732627998000},{"path":"/Users/bao/Downloads/VOCA/voca-client/node_modules/vue-loader-v16/dist/index.js","mtime":1732627996000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/bao/Downloads/VOCA/voca-client/src/components/LeftSideDataControlPanel.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEpC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACxF,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;MAC3F,CAAC,CAAC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MACtlD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC,CAAC,CAAC;;;IAGL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1E,CAAC,CAAC,CAAC,CAAC;QACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAChC,CAAC,CAAC,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrhF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACtpF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjzG,CAAC,CAAC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9E,CAAC,CAAC,CAAC,CAAC;QACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC3D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtC,CAAC,CAAC,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACjlE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACzG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACxG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACpF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;YAC/F,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cAC9B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBAChF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;cAC9E,CAAC,CAAC,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACf,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cAC/D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACbxG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACvF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACxG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC1E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACpF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;YAC/F,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cAC9B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBAChF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;cAC9E,CAAC,CAAC,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACf,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cAC7E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;MAEb,CAAC,CAAC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MAChE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;;IAET,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAChF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrhhH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACbnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC/D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACvjH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjnH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxpH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CAAC,CAAC,CAAC;;;IAGL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5H,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CAAC,CAAC,CAAC;;;IAGL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAC7D,CAAC,CAAC,CAAC,CAAC,CAAC;;;;;IAKL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MACzzG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;;;;;;;IAOT,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9G,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CAAC,CAAC,CAAC;;;IAGL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjzF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACbrxF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;;;;;IAKT,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;;IAET,CAAC,CAAC,CAAC,CAAC;MACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1J,CAAC,CAAC,CAAC,CAAC,CAAC;MACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACV,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACV,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;;IAET,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzJ,CAAC,CAAC,EAAE,CAAC,CAAC;MACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACV,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;;;EAGX,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/bao/Downloads/VOCA/voca-client/src/components/LeftSideDataControlPanel.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"data-control-panel radius\">\n\n    <div class=\"d-flex ms-2\" marginTop=\"10px\">\n        <input type=\"number\" class=\"form-control form-control-sm dim-input\" v-model=\"widthRef\" />\n        <span style=\"line-height: 31px\">×</span>\n        <input type=\"number\" class=\"form-control form-control-sm dim-input\" v-model=\"heightRef\" />\n      </div>  \n    <div class=\"choose_container choose_mode_container ms-1\">\n      <el-radio-group v-model=\"chooseMode\" size=\"medium\" @change=\"handleModeChange\">\n        <el-radio-button label=\"Default\"></el-radio-button>\n        <el-radio-button label=\"Custom\"></el-radio-button>\n      </el-radio-group>\n    </div>\n\n\n    <div class=\"dbsetting-control-container mt-2\" v-if=\"chooseMode === 'Custom'\">\n      <div>\n        <el-switch v-model=\"isOpenDbSetup\" name=\"DB Setup\" />\n        <label>{{ \"DB Setup\" }}</label>\n      </div>\n      <div class=\"mt-2 \" v-if=\"isOpenDbSetup\">\n        <el-input v-model=\"customDBHostName\" type=\"string\" placeholder=\"DB Host Name\" />\n        <el-input v-model=\"customUserName\" type=\"string\" placeholder=\"User Name\" />\n        <el-input v-model=\"customDBPassword\" type=\"password\" placeholder=\"DB Password\" />\n        <el-input v-model=\"customDBName\" type=\"string\" placeholder=\"DB Name\" />\n        <div><el-button class=\"btn mt-2\" v-on:click=\"handleTestConn\" type=\"primary\">{{ testConnectResult }}</el-button>\n        </div>\n        <div><el-button class=\"btn mt-2 \" v-on:click=\"createCustomDBConn\" type=\"primary\">{{ createDBConn }}</el-button>\n        </div>\n        <div><el-button class=\"btn mt-2\" v-on:click=\"initOM3DBEnv\" type=\"primary\">{{ initOm3DB }}</el-button></div>\n        <div>\n          <el-popconfirm title=\"This will clear all om3 table, are you sure you want to do this?\"\n            @confirm=\"clearOM3DBEnv\">\n            <template #reference>\n              <el-button class=\"btn mt-2\" type=\"primary\">{{ clearOm3DB }}</el-button>\n            </template>\n          </el-popconfirm>\n        </div>\n        <div><el-button class=\"btn mt-2\" v-on:click=\"clearIndexFlag\" type=\"primary\">Clear Flag</el-button></div>\n      </div>\n    </div>\n\n    <div class=\"om3-transform-control-container mt-2\" v-if=\"chooseMode === 'Custom'\">\n      <div>\n        <el-switch v-model=\"isOpenTransform\" name=\"OM3 Transform\" />\n        <label>{{ \"Data Transform\" }}</label>\n      </div>\n      <div class=\"mt-2 \" v-if=\"isOpenTransform\">\n\n        <div><el-button class=\"btn mt-2\" text @click=\"dialogFormVisible = true\" type=\"primary\"\n            v-if=\"chooseLineType === 'Single'\">Choose Data</el-button>\n        </div>\n        <el-dialog v-model=\"dialogFormVisible\" title=\"Single Line Transform\">\n          <label>Please choose a table,which inclues two columns(t interger,v double precision)(t should be a positive\n            integer starting from zero)</label>\n          <el-form>\n            <el-form-item label=\"Table\">\n              <el-select v-model=\"singleLineTableName\" placeholder=\"Please select a table for transform\">\n                <el-option v-for=\"(item, idx) in allCustomDBTables\" :key=\"idx\" :label=\"item\" :value=\"item\"></el-option>\n              </el-select>\n            </el-form-item>\n            <label>Please select a date and time, which will be linearly mapped to t during visualization </label>\n            <el-form-item label=\"Date Range\">\n              <el-date-picker v-model=\"lineDateRange\" type=\"daterange\" start-placeholder=\"Start Date\"\n                end-placeholder=\"End Date\" :default-value=\"[new Date(2010, 9, 1), new Date(2010, 10, 1)]\" />\n            </el-form-item>\n            <el-form-item label=\"Time Range\">\n              <div class=\"example-basic\">\n                <el-time-picker v-model=\"lineStartTime\" arrow-control placeholder=\"Start Time\" />\n                <el-time-picker v-model=\"lineEndTime\" arrow-control placeholder=\"End Time\" />\n              </div>\n            </el-form-item>\n          </el-form>\n          <template #footer>\n            <span class=\"dialog-footer\">\n              <el-button @click=\"dialogFormVisible = false\">Cancel</el-button>\n              <el-button type=\"primary\" v-loading.fullscreen.lock=\"fullscreenLoading\"\n                v-on:click=\"performTransformForSingeLine\">\n                Confirm\n              </el-button>\n            </span>\n          </template>\n        </el-dialog>\n\n\n        <div><el-button class=\"btn mt-2\" text @click=\"multiLineTransformDialogVisible = true\" type=\"primary\"\n            v-if=\"chooseLineType === 'Multi'\">Choose Data</el-button>\n        </div>\n        <el-dialog v-model=\"multiLineTransformDialogVisible\" title=\"Multi Line Transform\">\n\n          <label>Please choose tables,which inclues two columns(t interger,v double precision)(t should be a positive\n            integer starting from zero). All the data you choose should be the same length</label>\n          <el-form>\n            <el-form-item label=\"Table\">\n              <el-select class=\"multi-line-select\" v-model=\"multiLineTableNames\" multiple\n                placeholder=\"Please select table for transform\">\n                <el-option v-for=\"(item, idx) in allCustomDBTables\" :key=\"idx\" :label=\"item\" :value=\"item\"></el-option>\n              </el-select>\n            </el-form-item>\n            <el-input class=\"mb-4\" v-model=\"customMultiLineClassName\"\n              placeholder=\"Please define a group for the lines you select\" clearable />\n            <label>Please select a date and time, which will be linearly mapped to t during visualization </label>\n            <el-form-item label=\"Date Range\">\n              <el-date-picker v-model=\"lineDateRange\" type=\"daterange\" start-placeholder=\"Start Date\"\n                end-placeholder=\"End Date\" :default-value=\"[new Date(2010, 9, 1), new Date(2010, 10, 1)]\" />\n            </el-form-item>\n            <el-form-item label=\"Time Range\">\n              <div class=\"example-basic\">\n                <el-time-picker v-model=\"lineStartTime\" arrow-control placeholder=\"Start Time\" />\n                <el-time-picker v-model=\"lineEndTime\" arrow-control placeholder=\"End Time\" />\n              </div>\n            </el-form-item>\n          </el-form>\n          <template #footer>\n            <span class=\"dialog-footer\">\n              <el-button @click=\"multiLineTransformDialogVisible = false\">Cancel</el-button>\n              <el-button type=\"primary\" v-loading.fullscreen.lock=\"fullscreenLoading\"\n                v-on:click=\"perfromTransformForMulitLine\">\n                Confirm\n              </el-button>\n            </span>\n          </template>\n        </el-dialog>\n\n      </div>\n    </div>\n\n    <!-- <div class=\"choose_container choose_line_type_container ms-1\">\n      <el-radio-group v-model=\"chooseLineType\" size=\"medium\" @change=\"handleLineTypeChange\">\n        <el-radio-button label=\"Single\"></el-radio-button>\n        <el-radio-button label=\"Multi\"></el-radio-button>\n      </el-radio-group>\n    </div> -->\n\n    <!-- <div class=\"progressive-container ms-1 mt-2\" v-if=\"chooseLineType==='Single'\">\n      <span>Progressive</span>\n        <el-switch v-model=\"progressive\" name=\"Progressive\"  @change=\"handleProgressiveChange\"/>\n    </div> -->\n\n\n\n    <div class=\"class-choose-container mt-2 ms-1\" >\n      <el-select v-model=\"currentMultiClass\" placeholder=\"Select\" size=\"medium\" @change=\"handleMultiLineClassChange\"\n      @focus=\"onFocus\">\n      <el-option v-for=\"(item, idx) in multiLineClassAndLinesMap.get('tables')\" :key=\"idx\" :label=\"item\" :value=\"item\">\n      </el-option>\n      </el-select>\n    </div>\n\n    <div class=\"class-choose-container2 mt-2 ms-1\">\n      <el-select v-model=\"currentMultiClassLines\" multiple\n      placeholder=\"Select\" size=\"medium\" @change=\"handleColumnsChange\"\n      @focus=\"onFocusColumns\">\n      <el-option v-for=\"(item, idx) in multiLineClassAndLinesMap.get('columns')\" :key=\"idx\" :label=\"item\" :value=\"item\">\n      </el-option>\n      </el-select>   \n    </div>\n\n    <div class=\"compute-line-container mt-2 ms-1\">\n      <el-select v-model=\"selectedOption\" placeholder=\"Operator\" @change=\"handleSelectedOption\" @focus=\"onFocusFunctions\">\n        <el-option v-for=\"(item, idx) in multiLineClassAndLinesMap.get('functions')\" :key=\"idx\" :label=\"item\" :value=\"item\">\n        </el-option>\n      </el-select>\n    </div>\n\n    <div class=\"compute-line-container mt-2 ms-1\">\n      <el-select v-model=\"selectedAggregate\" placeholder=\"Aggregate\" @change=\"handleSelectedAggregate\" @focus=\"onFocusAggregate\">\n        <el-option v-for=\"(item, idx) in multiLineClassAndLinesMap.get('aggregates')\" :key=\"idx\" :label=\"item\" :value=\"item\">\n        </el-option>\n      </el-select>\n    </div>\n\n\n    <div class=\"mt-2 mb-1\">\n      <el-select v-model=\"selectedExperiment\" placeholder=\"Experiment\" @change=\"handleSelectedExperiment\" @focus=\"onFocusExperiment\">\n        <el-option v-for=\"(item, idx) in multiLineClassAndLinesMap.get('experiments')\" :key=\"idx\" :label=\"item\" :value=\"item\">\n        </el-option>\n      </el-select>\n    </div>\n\n\n    <div class=\"mt-2 mb-1\">\n        <el-input v-model=\"errorBound\" placeholder=\"errorBound\" />\n    </div>\n\n\n\n\n    <!-- <div class=\"mt-2 mb-1\">\n      <el-select v-model=\"selectedComputeOrShow\" placeholder=\"Compute/Show\" @change=\"handleSelectedComputeOrShow\">\n        <el-option label=\"compute\" value=\"compute\"></el-option>\n        <el-option label=\"show\" value=\"show\"></el-option>\n      </el-select>\n    </div> -->\n\n\n\n\n\n\n    <div class=\"class-choose-container2 mt-2 ms-1\">\n      <el-select v-model=\"currentMultiClassALine\" placeholder=\"Select\" size=\"medium\" @change=\"handleMultiLineClassALineChange\"\n        v-if=\"chooseMode === 'Custom'\">\n        <el-option v-for=\"(item, idx) in multiLineClassAndLinesMap.get('mock')\" :key=\"idx\" :label=\"item\" :value=\"item\">\n        </el-option>\n      </el-select>   \n    </div>\n\n\n    <!-- <div class=\"table-choose-container mt-2 ms-1\">\n      <el-select v-model=\"currentTable\" placeholder=\"Select\" size=\"medium\" v-if=\"chooseMode === 'Default'\"\n        @change=\"handleTableChange\">\n        <el-option v-for=\"(item, idx) in allDefaultTables\" :key=\"idx\" :label=\"item\" :value=\"item\">\n        </el-option>\n      </el-select>\n      <el-select v-model=\"currentTable\" placeholder=\"Select\" size=\"medium\" v-on:click=\"loadCustomTableAndInfo\"\n        v-if=\"chooseMode === 'Custom'\" @change=\"handleTableChange\">\n        <el-option v-for=\"(item, idx) in allCustomTables\" :key=\"idx\" :label=\"item\" :value=\"item\">\n        </el-option>\n      </el-select>\n    </div> -->\n\n\n\n\n    <!-- <div class=\"mt-2 mb-1\" v-if=\"chooseLineType == 'Multi'\">\n        <el-switch v-model=\"isStopEarly\" name=\"OM3 StopEarly\" />\n        <label>{{ \"Stop Early\" }}</label>\n    </div> -->\n\n    <div>\n      <button id=\"create_panel_btn\" type=\"button\" class=\"btn btn-secondary ms-2 mt-2 ml-4\" style=\"width: 100px; height: 40px;\" @click.prevent=\"handleComputePanel\">\n        create\n      </button>\n    </div>\n\n    <!-- <div>\n      <button id=\"create_panel_btn2\" type=\"button\" class=\"btn btn-secondary ms-2 mt-2 ml-4\" style=\"width: 100px; height: 40px;\" @click.prevent=\"handleExperiment\">\n        Experiment\n      </button>\n    </div> -->\n\n    <!-- <div>\n      <button id=\"create_panel_btn2\" type=\"button\" class=\"btn btn-secondary ms-2 mt-2 ml-4\" style=\"width: 100px; height: 40px;\" @click.prevent=\"handleAddAverage\">\n        add Ave\n      </button>\n    </div> -->\n\n\n  </div>\n</template>\n<script>\nimport store from \"@/store\";\nimport { defineComponent, ref, computed, watch, reactive } from \"vue\";\nimport { ElLoading } from 'element-plus'\nimport { ElNotification } from 'element-plus'\nimport { clearFlagDB } from \"@/indexdb\";\nimport axios from \"axios\";\n\nasync function get(url) {\n  url = 'postgres' + url;\n  //const loading = openLoading();\n  const { data } = await axios.get(url);\n  //loading.close();\n  return data;\n}\n\nexport default defineComponent({\n  data() {\n    return {\n      testConnectResult: \"Test Connection\",\n      createDBConn: \"Create Connection\",\n      initOm3DB: \"Init OM3 DB\",\n      clearOm3DB: \"Clear OM3 DB\",\n      customDBHostName: \"\",\n      customDBPassword: '',\n      customDBName: '',\n      customUserName: \"\",\n      isOpenDbSetup: false,\n      isOpenTransform: false,\n      isStopEarly: false,\n      lineDateRange: [new Date(2010, 9, 1), new Date(2010, 10, 1)],\n      lineStartTime: new Date(2010, 9, 1),\n      lineEndTime: new Date(2010, 10, 1),\n      fullscreenLoading: false,\n      singleLineTableName: \"\",\n      multiLineTableNames: [],\n      customMultiLineClassName: \"\",\n    }\n\n  },\n  components: {\n\n  },\n  methods: {\n    onFocus(){\n      this.$store.dispatch(\"gettables\");\n    },\n\n    onFocusColumns(){\n      this.$store.dispatch(\"getcolumns\");\n    },\n\n    onFocusFunctions(){\n      this.$store.dispatch(\"getfunctions\");\n    },\n\n    onFocusAggregate(){\n      this.$store.dispatch(\"getaggregates\");\n    },\n\n    onFocusExperiment(){\n      this.$store.dispatch(\"getexperiment\");\n    },\n\n    updateTestConnRes(res) {\n      this.testConnectResult = res\n    },\n    updateDBCreateConn(res) {\n      this.createDBConn = res;\n    },\n    updateInitDB(res) {\n      this.initOm3DB = res\n    },\n    updateClearDB(res) {\n      this.clearOm3DB = res;\n    },\n    openFullScreenLoading() {\n      this.fullscreenLoading = true;\n    },\n    closeFullScreenLoading() {\n      this.fullscreenLoading = false;\n    },\n    openNotification(title, msg, type) {\n      ElNotification({\n        title: title,\n        message: msg,\n        type: type,\n      })\n    },\n    handleTestConn() {\n      store.dispatch(\"testCustomDBConn\", { hostName: this.customDBHostName, possword: this.customDBPassword, dbName: this.customDBName, userName: this.customUserName }).then((res) => {\n        const result = res.data['data']['result'];\n        if (result === 'success') {\n          this.storeDBConfig()\n          this.updateTestConnRes(\"Test Success\")\n          this.openNotification(\"Test Connection\", \"Test Connection Success\", \"success\")\n        } else {\n\n          console.error(res.data['msg'])\n          this.updateTestConnRes(\"Test Fail\")\n          this.openNotification(\"Test Connection\", res.data['msg'], \"error\")\n        }\n      })\n    },\n    storeDBConfig() {\n      localStorage.setItem(\"customDBHostName\", this.customDBHostName)\n      localStorage.setItem(\"customDBPassword\", this.customDBPassword)\n      localStorage.setItem(\"customDBName\", this.customDBName)\n      localStorage.setItem(\"customUserName\", this.customUserName)\n    },\n    restoreDBConfig() {\n      const customDBHostName = localStorage.getItem(\"customDBHostName\")\n      const customDBPassword = localStorage.getItem(\"customDBPassword\");\n      const customDBName = localStorage.getItem(\"customDBName\");\n      const customUserName = localStorage.getItem(\"customUserName\");\n      if (customDBHostName) {\n        this.customDBHostName = customDBHostName;\n      }\n      if (customDBPassword) {\n        this.customDBPassword = customDBPassword;\n      }\n      if (customDBName) {\n        this.customDBName = customDBName;\n      }\n      if (customUserName) {\n        this.customUserName = customUserName;\n      }\n    },\n    createCustomDBConn() {\n      store.dispatch(\"createCustomDBConn\", { hostName: this.customDBHostName, possword: this.customDBPassword, dbName: this.customDBName, userName: this.customUserName }).then((res) => {\n        const result = res.data['data']['result'];\n        if (result === 'success') {\n          this.updateDBCreateConn(\"Create Success\")\n          this.openNotification(\"Create Connection\", \"Create Connection Success\", \"success\")\n        } else {\n\n          console.error(res.data['msg'])\n          this.updateDBCreateConn(\"Create Fail\")\n          this.openNotification(\"Create Connection\", res.data['msg'], \"error\")\n        }\n      })\n    },\n    initOM3DBEnv() {\n      store.dispatch(\"initOM3DB\").then((res) => {\n        console.log(res)\n        const result = res.data['result'];\n        if (result === 'success') {\n          this.updateInitDB(\"Init Success\")\n          this.openNotification(\"Init OM3 ENV\", \"Init OM3 ENV Success\", \"success\")\n        } else {\n\n          console.error(res.data['msg'])\n          this.updateInitDB(\"Init Fail\")\n          this.openNotification(\"Init OM3 ENV\", res.data['msg'], \"error\")\n        }\n      })\n    },\n    clearOM3DBEnv() {\n      console.log(\"clear om3 env\")\n      store.dispatch(\"clearOM3Table\").then((res) => {\n        console.log(res)\n        const result = res.data['result'];\n        if (result === 'success') {\n          this.updateClearDB(\"Clear Success\")\n          this.openNotification(\"Clear OM3 ENV\", \"Clear OM3 ENV Success\", \"success\")\n        } else {\n\n          console.error(res.data['msg'])\n          this.updateClearDB(\"Clear Fail\")\n          this.openNotification(\"Clear OM3 ENV\", res.data['msg'], \"error\")\n        }\n      })\n    },\n    performTransformForSingeLine() {\n      let startDateStr = this.lineDateRange[0].toISOString().split(\"T\")[0];\n      let endDateStr = this.lineDateRange[1].toISOString().split(\"T\")[0];\n      let startTimeStr = this.lineStartTime.toISOString().split(\"T\")[1].split('Z')[0];\n      let endTimeStr = this.lineEndTime.toISOString().split(\"T\")[1].split('Z')[0];\n      const startFullTime = startDateStr + \" \" + startTimeStr;\n      const endFullTime = endDateStr + \" \" + endTimeStr;\n      this.openFullScreenLoading();\n      store.dispatch(\"performTransformForSingeLine\", { startTime: startFullTime, endTime: endFullTime, tableName: this.singleLineTableName }).then((res) => {\n        console.log(\"res:\"+res.data);\n        if (res.data['code'] === 200) {\n          console.log(\"single line transform success\")\n          //  add tishi\n        } else {\n          console.error(res.data['msg'])\n        }\n        this.closeFullScreenLoading()\n        this.dialogFormVisible = false;\n      })\n    },\n    perfromTransformForMulitLine() {\n      let startDateStr = this.lineDateRange[0].toISOString().split(\"T\")[0];\n      let endDateStr = this.lineDateRange[1].toISOString().split(\"T\")[0];\n      let startTimeStr = this.lineStartTime.toISOString().split(\"T\")[1].split('Z')[0];\n      let endTimeStr = this.lineEndTime.toISOString().split(\"T\")[1].split('Z')[0];\n      const startFullTime = startDateStr + \" \" + startTimeStr;\n      const endFullTime = endDateStr + \" \" + endTimeStr;\n      this.openFullScreenLoading()\n      store.dispatch(\"performTransformForMultiLine\", { startTime: startFullTime, endTime: endFullTime, tableNames: Array.from(this.multiLineTableNames.values()), multiLineClassName: this.customMultiLineClassName }).then((res) => {\n        if (res['code'] === 200) {\n          console.log(\"multi line transform success\")\n          //  add tishi\n        } else {\n          console.error(res['msg'])\n        }\n        this.closeFullScreenLoading()\n        this.multiLineTransformDialogVisible = false;\n      });\n      store.commit(\"setAllMultiLineClassAndLinesMap\",{\n        key: this.customMultiLineClassName,\n        value: Array.from(this.multiLineTableNames.values())\n      });\n      // console.log(\"computeAllMultiLineClassAndLinesMap:\", store.state.allMultiLineClassAndLinesMap['bao'])\n      // console.log(\"computeAllMultiLineClassAndLinesMap:\", store.state.allMultiLineClassAndLinesMap['bao'])\n      console.log(startFullTime, endFullTime, this.customMultiLineClassName, Array.from(this.multiLineTableNames.values()))\n    }\n  },\n\n  watch: {\n    isOpenDbSetup(newV, oldV) {\n      if (newV) {\n        this.restoreDBConfig()\n      } else {\n        this.updateDBCreateConn(\"Create Connection\")\n        this.updateTestConnRes(\"Test Connection\")\n      }\n    },\n    isOpenTransform(newV, oldV) {\n      if (newV) {\n        store.dispatch(\"getAllCustomTables\").then((res) => {\n          if (res['code'] === 200) {\n            this.allCustomDBTables = res['data']['result'];\n          } else {\n            console.error(res['msg'])\n          }\n        })\n      }\n    },\n    isStopEarly(newV, oldV){\n      if(oldV === true){\n        store.commit(\"alterNoStopEarly\", false);\n        // console.log(\"store.state.controlParams.StopEarly:\", store.state.controlParams.StopEarly);\n      }\n      else if(newV){\n        // console.log(\"newV:\", newV);\n        store.commit(\"alterStopEarly\", true);\n        // console.log(\"store.state.controlParams.StopEarly:\", store.state.controlParams.StopEarly);\n      }\n      // else{\n      //   store.commit(\"alterStopEarly\", false);\n      // }\n    }\n  },\n  setup() {\n    // let tableArray = store.state.allMultiLineClassAndLinesMap.get('bao');\n    // console.log(\"computeAllMultiLineClassAndLinesMap:\", store.state.allMultiLineClassAndLinesMap);\n    const progressive = ref(store.state.controlParams.progressive);\n    const chooseMode = ref(\"Default\");\n    const chooseLineType = ref(\"Single\");\n    const dialogFormVisible = ref(false);\n\n    const multiLineTransformDialogVisible = ref(false)\n\n    const allAlgoritem = store.state.allAlgoritem;\n\n    const currentSampleAlgorithm = ref(\n      store.state.controlParams.currentSampleMethod\n    );\n\n    const currentTable = ref(store.state.controlParams.currentTable);\n\n    const currentCustomTable = ref(store.state.controlParams.currentCustomTable)\n    const currentMultiClass = ref(store.state.controlParams.currentMultiLineClass);\n    const currentMultiClassALine = ref(store.state.controlParams.currentMultiLineClassALine);\n    const currentMultiClassLines = ref(store.state.controlParams.currentMultiLineClassLines);\n    const selectedOption = ref(store.state.controlParams.transform_symbol);\n    const selectedExperiment = ref(store.state.controlParams.experiment);\n    const selectedAggregate = ref(store.state.controlParams.aggregate);\n    const selectedComputeOrShow = ref(store.state.controlParams.computeOrShow);\n    // const multiLineClassAndLinesMap = ref(store.state.allMultiLineClassAndLinesMap);\n\n    const widthRef = ref(600);\n    const heightRef = ref(600);\n    const errorBound = ref(0.05);\n    const currentDB = computed(() => {\n      return store.state.controlParams.currentDB;\n    });\n\n    const handleExperiment = () => {\n      // console.log(\"currentMultiClassALine:\",currentMultiClassALine.value);\n      // console.log(Array.from(currentMultiClassLines.value));\n      const payload = {\n          width: widthRef.value,\n          height: heightRef.value,\n      };\n      store.dispatch(\"Experiment\", [currentMultiClass.value, Array.from(currentMultiClassLines.value), selectedOption.value, selectedExperiment.value, payload, errorBound, selectedComputeOrShow.value, selectedAggregate.value]);\n    }\n\n    const handleAddAverage = () => {\n      // console.log(\"currentMultiClassALine:\",currentMultiClassALine.value);\n      // console.log(Array.from(currentMultiClassLines.value));\n      const payload = {\n          width: widthRef.value,\n          height: heightRef.value,\n      };\n      store.dispatch(\"computeLineTransform\", [currentMultiClass.value, Array.from(currentMultiClassLines.value), selectedOption.value,selectedExperiment.value, payload, errorBound, 'compute', selectedAggregate.value]);\n    }\n\n\n    const handleComputePanel = () => {\n      // console.log(\"currentMultiClassALine:\",currentMultiClassALine.value);\n      // console.log(Array.from(currentMultiClassLines.value));\n      const payload = {\n          width: widthRef.value,\n          height: heightRef.value,\n      };\n      store.dispatch(\"computeLineTransform\", [currentMultiClass.value, Array.from(currentMultiClassLines.value), selectedOption.value,selectedExperiment.value, payload, errorBound, 'compute', selectedAggregate.value, store.state.controlParams.startTime, store.state.controlParams.endTime]);\n    }\n\n    const allSampleAlgoritem = store.state.controlParams.sampleMethods;\n\n    let allTables = computed(() => {\n      return store.state.allTables;\n    });\n    const allCustomTables = computed(() => {\n      return store.state.allCustomTables;\n    })\n\n    const allDefaultTables = computed(() => {\n      return store.state.allDefaultTables;\n    })\n\n    let allMultLineClass = computed(() => {\n      return store.state.allMultiLineClassInfoMap\n    })\n\n    let allCustomMultiLineClass = computed(() => {\n      return store.state.allCustomMultiLineClassInfoMap\n    })\n\n    let multiLineClassAndLinesMap = computed(() => {\n      // console.log(\"computeAllMultiLineClassAndLinesMap:\", store.state.allMultiLineClassAndLinesMap)\n      // const tableArray = store.state.allMultiLineClassAndLinesMap.get(\"bao\");\n      // console.log(Array.from(tableArray));\n      // return tableArray;\n      return store.state.allMultiLineClassAndLinesMap;\n    })\n\n    const handleSampleMethodChange = () => {\n      store.commit(\"alterSampleMethod\", currentSampleAlgorithm.value);\n    };\n\n    const handleSelectedOption = () => {\n      console.log(\"Current Symbol:\", selectedOption.value);\n      store.commit(\"alterSelectedOption\", selectedOption.value);\n    }\n\n    const handleSelectedExperiment = () => {\n      store.commit(\"alterSelectedExperiment\", selectedExperiment.value);\n    }\n\n    const handleSelectedAggregate = () => {\n      store.commit(\"alterSelectedAggregate\", selectedAggregate.value);\n    }\n\n    const handleSelectedComputeOrShow = () => {\n      store.commit(\"alterSelectedComputeOrShow\", selectedComputeOrShow.value);\n    }\n\n    const handleModeChange = () => {\n      store.commit(\"alterMode\", chooseMode.value);\n      chooseLineType.value = \"Single\"\n      store.commit(\"alterLineType\", chooseLineType.value);\n    }\n    const handleLineTypeChange = () => {\n      store.commit(\"alterLineType\", chooseLineType.value)\n      // store.dispatch(\"getAllMultiLineClassInfo\");\n      // store.dispatch(\"getAllMultiLineClassAndLinesInfo\");\n      // console.log(\"computeAllMultiLineClassInfo:\", store.state.allMultiLineClassInfoMap);\n      // console.log(\"computeAllMultiLineClassAndLinesMap:\", store.state.allMultiLineClassAndLinesMap.get(\"bao\"));\n      // const arr = Array.from(store.state.allMultiLineClassAndLinesMap.get(\"bao\"));\n      // console.log(arr);\n    }\n    const handleMultiLineClassChange = () => {\n      console.log(currentMultiClass.value)\n      store.commit(\"alterCurrentMulitLineClass\", currentMultiClass.value)\n\n      const combinedUrl2 = `/line_chart/getcolumns?table_name=${store.state.controlParams.currentMultiLineClass}`;\n      console.log(\"combinedUrl2\", combinedUrl2);\n      const data2 = get(combinedUrl2);\n      data2.then(res => {\n          console.log(\"getcolumns\", res['columns']);\n          const columns = res['columns'];\n          const array = ref([...columns])\n          console.log(\"columns:\", array);\n          store.commit(\"ColumnsChange\", array);\n          currentMultiClassLines.value = res['columns'];\n      });\n      \n    }\n\n    const handleColumnsChange = () => {\n      console.log(\"handleColumnsChange\",currentMultiClassLines.value)\n      // if(currentMultiClassLines.value == 'all'){\n      //   const newValue = multiLineClassAndLinesMap.get('columns')\n      //   store.commit(\"ColumnsChange\", newValue)\n      // }\n      // else\n      store.commit(\"ColumnsChange\", currentMultiClassLines.value)\n      // if(currentMultiClassLines.value == 'all'){\n      //   store.commit(\"ColumnsChange\", state.allMultiLineClassAndLinesMap);\n      // }\n    }\n\n    const handleMultiLineClassALineChange = () => {\n      store.commit(\"alterCurrentMulitLineClassALine\", currentMultiClassALine.value)\n    }\n    const handleMultiLineClassLinesChange = () => {\n\n      console.log(\"handleMultiLineClassLinesChange\",currentMultiClassLines.value)\n      store.commit(\"alterCurrentMulitLineClassLines\", currentMultiClassLines.value)\n    }\n\n    const handleTableChange = () => {\n      store.commit(\"alterTable\", currentTable);\n    };\n\n    const handleCustomTableChange = () => {\n      store.commit(\"alterCustomTable\", currentCustomTable.value)\n    }\n\n    const loadCustomTableAndInfo = () => {\n      store.dispatch(\"loadCustomTableAndInfo\");\n    }\n\n    const handleProgressiveChange = () => {\n      store.commit(\"alterProgressive\", progressive.value);\n    }\n\n    const clearIndexFlag=()=>{\n      clearFlagDB()\n    }\n\n\n\n    return {\n      allAlgoritem,\n      chooseMode,\n      chooseLineType,\n      handleModeChange,\n      currentSampleAlgorithm,\n      allSampleAlgoritem,\n      handleSampleMethodChange,\n      currentTable,\n      allTables,\n      allDefaultTables,\n      handleTableChange,\n      handleLineTypeChange,\n      allMultLineClass,\n      currentMultiClass,\n      currentMultiClassALine,\n      currentMultiClassLines,\n      handleMultiLineClassChange,\n      handleColumnsChange,\n      handleAddAverage,\n      handleMultiLineClassALineChange,\n      dialogFormVisible,\n      handleCustomTableChange,\n      loadCustomTableAndInfo,\n      allCustomTables,\n      allCustomMultiLineClass,\n      multiLineClassAndLinesMap,\n      multiLineTransformDialogVisible,\n      progressive,\n      handleProgressiveChange,\n      clearIndexFlag,\n      handleComputePanel,\n      handleExperiment,\n      selectedOption,\n      handleSelectedOption,\n      selectedExperiment,\n      handleSelectedExperiment,\n      selectedAggregate,\n      handleSelectedAggregate,\n      selectedComputeOrShow,\n      handleSelectedComputeOrShow,\n      widthRef,\n      heightRef,\n      errorBound\n    };\n  },\n});\n</script>\n<style scoped>\n.data-control-panel {\n  min-width: 200px;\n  max-width: 210px;\n  flex-grow: 0.15;\n}\n\n.choose_container {\n  margin-top: 10px;\n}\n\n.btn {\n  width: 100%;\n  margin-left: 0px;\n}\n\n.multi-line-select {\n  width: 100%;\n}\n\n.device-control-panel {\n  min-height: 25px;\n  background-color: #fff;\n}\n\n.device-dimensions-menu-show {\n  position: absolute;\n  inset: 0px auto auto 0px;\n  margin: 0px;\n  transform: translate(0px, 40px);\n}\n\n.dim-input {\n  max-width: 4rem;\n}\n</style>"]}]}