{"remainingRequest":"/Users/bao/Downloads/om3-extend/om3-client/node_modules/babel-loader/lib/index.js!/Users/bao/Downloads/om3-extend/om3-client/node_modules/ts-loader/index.js??ref--15-2!/Users/bao/Downloads/om3-extend/om3-client/node_modules/eslint-loader/index.js??ref--14-0!/Users/bao/Downloads/om3-extend/om3-client/src/store/actions.ts","dependencies":[{"path":"/Users/bao/Downloads/om3-extend/om3-client/src/store/actions.ts","mtime":1737814786826},{"path":"/Users/bao/Downloads/om3-extend/om3-client/babel.config.js","mtime":1732546288000},{"path":"/Users/bao/Downloads/om3-extend/om3-client/node_modules/cache-loader/dist/cjs.js","mtime":1732627998000},{"path":"/Users/bao/Downloads/om3-extend/om3-client/node_modules/babel-loader/lib/index.js","mtime":1732627998000},{"path":"/Users/bao/Downloads/om3-extend/om3-client/node_modules/ts-loader/index.js","mtime":1732627997000},{"path":"/Users/bao/Downloads/om3-extend/om3-client/node_modules/eslint-loader/index.js","mtime":1732627997000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["store","axios","v4","uuidv4","arrayBufferToBase64","base64ToArrayBuffer","openLoading","drawViewChangeLineChart","indexGetData","indexPutData","initIndexDB","get","state","url","data","getBuffer","timeGetCache","Date","getTime","cacheFlag","undefined","flagBuffer","err","console","error","responseType","log","loadViewChangeQueryWSMinMaxMissDataInitData","context","payload","maxLevel","currentTable","controlParams","lineInfo","currentMode","defaultTableMap","customTableMap","Error","startTimeStamp","start_time","endTimeStamp","end_time","timeInterval","interval","mode","width","type","combinedUrl","then","tempRes","viewChangeQueryObj","id","height","x","Math","random","y","timeRange","startTime","endTime","minV","maxV","currentLevel","ceil","log2","isPow","nonUniformColObjs","maxLen","dataMaxLen","drawer","loadMultiTimeSeriesInitData","realDataRowNum","currentMulitLineClass","currentMultiLineClass","lineClassInfo","allMultiLineClassInfoMap","allCustomMultiLineClassInfoMap","res","commit","className","name","lineAmount","amount","timeIntervalMs","columnInfos","algorithm","pow","minv","maxv","Experiment","params","functions","experiments","dataset","widths","count","sumNetTime","sumDrawTime","i","length","j","symbol","experiment","table_name","columns","parallel","errorBound","interact_type","start_getserver","performance","now","end_getserver","et","start_draw","end_draw","server_time","draw_time","totaltime","computetime","nettime","meanArray","min","max","computeLineTransform","_value","aggregate","timestamp","push","columnsColor","line1","getAllTables","allTables","map","v","split","tables","getAllFlagsFunc","lineType","isLoading","combinedUrl1","allFlagNames","flagMap","loading","combinedUrl2","tempFlagInfo","Buffer","from","close","getAllFlags","catch","currentLineType","flags","getAllMultiLineClassInfo","info","getAllMultiLineClassAndLinesInfo","gettables","getcolumns","getaggregates","getfunctions","getexperiment","testCustomDBConn","post","host_name","hostName","user_name","userName","password","possword","db_name","dbName","createCustomDBConn","initOM3DB","clearOM3Table","getAllCustomTables","performTransformForSingeLine","tableName","performTransformForMultiLine","tableNames","multiLineClassName","loadCustomTableAndInfo","customTables","customTableInfo","loadDefaultTableAndInfo","tableInfo"],"sources":["/Users/bao/Downloads/om3-extend/om3-client/node_modules/eslint-loader/index.js??ref--14-0!/Users/bao/Downloads/om3-extend/om3-client/src/store/actions.ts"],"sourcesContent":["import store, { emitter, getAvgTime, GlobalState, MultiTimeSeriesObj, ViewChangeLineChartObj, ws } from \".\";\nimport { Commit, ActionContext, ActionHandler } from 'vuex'\nimport axios from \"axios\";\n// import { constructMinMaxMissTrendTree, constructTrendTree } from '../helper/wavlet-decoder';\nimport { constructMinMaxMissTrendTree, constructMinMaxMissTrendTreeMulti} from '../helper/wavlet-decoder';\nimport { v4 as uuidv4 } from 'uuid';\nimport * as d3 from \"d3\";\nimport LevelDataManager from \"@/model/level-data-manager\";\nimport  NoUniformColObj  from \"@/model/non-uniform-col-obj\";\nimport { formatToRenderDataForTrend, getGlobalMinMaxInfo } from \"@/helper/format-data\";\nimport md5 from \"md5\"\nimport { arrayBufferToBase64, base64ToArrayBuffer, getLevelData, openLoading } from \"@/helper/util\";\nimport { ElButtonGroup, ElLoading } from 'element-plus'\nimport { drawViewChangeLineChart } from \"@/application/line-interaction\";\nimport { indexGetData, indexPutData, initIndexDB } from \"@/indexdb\";\n\nasync function get(state: GlobalState, url: string) {\n\n    url = 'postgres' + url;\n\n    //const loading = openLoading();\n    const { data } = await axios.get(url);\n    //loading.close();\n    return data;\n}\n\nasync function getBuffer(state: GlobalState, url: string) {\n\n    url = 'postgres' + url;\n    // localStorage.removeItem(url)\n    try {\n        const timeGetCache = new Date().getTime()\n        const cacheFlag = await indexGetData(url)\n\n        if (cacheFlag && cacheFlag !== '' && cacheFlag !== undefined && cacheFlag !== null) {\n            //@ts-ignore\n            const flagBuffer = base64ToArrayBuffer(cacheFlag!);\n            // console.log(url, \"use flag cache:\", flagBuffer.byteLength);\n            return flagBuffer\n        }\n\n    } catch (err) {\n        console.error(err)\n    }\n\n\n    //const loading = openLoading();\n    const { data } = await axios.get(url, { responseType: 'arraybuffer' });\n    if (data) {\n        indexPutData(url, arrayBufferToBase64(data));\n        console.log(url, \" store in indexdb\")\n    }\n    // loading.close();\n    return data;\n}\n\nconst loadViewChangeQueryWSMinMaxMissDataInitData: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>, payload: { startTime: number, endTime: number, width: number, height: number }) => {\n    let maxLevel = 0\n    const currentTable = context.state.controlParams.currentTable;\n    let lineInfo: any = null\n    if (context.state.controlParams.currentMode === 'Default') {\n        lineInfo = context.state.defaultTableMap.get(currentTable);\n    } else {\n        lineInfo = context.state.customTableMap.get(currentTable);\n    }\n\n    if (lineInfo === undefined) {\n        throw new Error(\"cannot get class info\");\n    }\n    maxLevel = lineInfo['level'];\n    const startTimeStamp = new Date(lineInfo.start_time).getTime();\n    let endTimeStamp = 0\n    if (lineInfo.end_time !== '') {\n        endTimeStamp = new Date(lineInfo.end_time).getTime();\n    }\n    let timeInterval = 0;\n    if (lineInfo.interval !== 0) {\n        timeInterval = lineInfo.interval;\n    }\n    //@ts-ignore\n    let mode = \"single\";\n    let width = 600;\n    let type = null;\n    // const combinedUrl = `/line_chart/getDataForSingleLine?mode=${mode}&width=${width}&table_name=${currentTable}&startTime=${-1}&endTime=${-1}&nteract_type=${type}`;\n    const combinedUrl = `/line_chart/getDataForSingleLine?mode=${mode}&width=${width}&table_name=${currentTable}&startTime=${-1}&endTime=${-1}&nteract_type=${type}`;\n    const data = get(context.state, combinedUrl);\n    data.then(tempRes => {\n        const viewChangeQueryObj: ViewChangeLineChartObj = {\n            id: uuidv4(),\n            width: payload.width,\n            height: payload.height,\n            x: Math.random() * 60,\n            y: Math.random() * 60,\n            // root: trendTree,\n            // data: { powRenderData: [], noPowRenderData: [], minv: minv!, maxv: maxv! },\n            // timeRange: [0, lineInfo['max_len']],\n            // startTime: startTimeStamp,\n            // endTime: endTimeStamp,\n            timeRange: [0, 65536],\n            startTime: 0,\n            endTime: 65536,\n            // algorithm: \"\",\n            // dataManager: null,\n            // params: [0, 0],\n            minV: 0,\n            maxV: 0,\n            currentLevel: Math.ceil(Math.log2(payload.width)),\n            isPow: false,\n            nonUniformColObjs: [],\n            // maxLen: lineInfo['max_len']\n            maxLen: 65536,\n            dataMaxLen: 0\n        }\n        const drawer = drawViewChangeLineChart(viewChangeQueryObj, null)\n        drawer(tempRes);\n    });\n}\n\nconst loadMultiTimeSeriesInitData: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>, payload: { width: number, height: number, type: string }) => {\n    const currentLevel = Math.ceil(Math.log2(payload.width));\n    let maxLevel = 0;\n    let realDataRowNum = 65536;\n    const currentMulitLineClass = context.state.controlParams.currentMultiLineClass;\n    let lineClassInfo: any = null\n    if (context.state.controlParams.currentMode === 'Default') {\n        lineClassInfo = context.state.allMultiLineClassInfoMap.get(currentMulitLineClass);\n    } else {\n        lineClassInfo = context.state.allCustomMultiLineClassInfoMap.get(currentMulitLineClass);\n    }\n\n    if (lineClassInfo === undefined) {\n        throw new Error(\"cannot get class info\");\n    }\n    maxLevel = lineClassInfo['level'];\n\n    const combinedUrl = `/line_chart/getDataForMultiLines?width=${2 ** currentLevel}&class_name=${currentMulitLineClass}&mode=${context.state.controlParams.currentMode}`;\n    const data = get(context.state, combinedUrl);\n\n    data.then(res => {\n        const startTimeStamp = new Date(lineClassInfo.start_time).getTime();\n        let endTimeStamp = 0\n        if (lineClassInfo.end_time !== '') {\n            endTimeStamp = new Date(lineClassInfo.end_time).getTime();\n        }\n        let timeInterval = 0;\n        if (lineClassInfo.interval !== 0) {\n            timeInterval = lineClassInfo.interval;\n        }\n        context.commit(\"addMultiTimeSeriesObj\", {\n            className: lineClassInfo.name,\n            lineAmount: lineClassInfo.amount,\n            startTimeStamp: startTimeStamp,\n            endTimeStamp: endTimeStamp,\n            timeIntervalMs: timeInterval,                \n            columnInfos: res, \n            startTime: 0, \n            endTime: realDataRowNum - 1, \n            algorithm: \"multitimeseries\", \n            width: payload.width, \n            height: payload.height, \n            pow: false, \n            minv: 0, \n            maxv: 0, \n            maxLevel\n        })\n    });\n}\n\n\nconst Experiment: ActionHandler<GlobalState, GlobalState> = async (context: ActionContext<GlobalState, GlobalState>, params:any) =>{\n\n    console.log(\"Experiment Start......\")\n\n    let functions= [\"func1\",\"boxcox_0\",\"boxcox_1_2\",\"boxcox_1\",\"boxcox_2\",\"+\", \"-\", \"*\", \"/\", \"func4\", \"mean\", \"variance\"]\n    let experiments=[\"ours\",\"case1\",\"case2\",\"case3\",\"case4\",\"case5\", \"case6\", \"case7\"]\n    let dataset = [\"stockdata\",\"traffic\",\"sensordata\",\"nycdata\",\"inteldata\",\"soccerdata\",\"synthetic_1m\",\"synthetic_2m\",\"synthetic_4m\",\"synthetic_8m\",\"synthetic_16m\",\"synthetic_32m\",\"synthetic_64m\",\"synthetic_128m\",\"synthetic_256m\"]\n    let widths=[200, 400, 600, 800, 1000, 1200]\n\n    let count = 0;\n    let sumNetTime = 0;\n    let sumDrawTime = 0\n\n    for(let i=0;i<widths.length;i++){\n        for(let j=0;j<dataset.length;j++){\n            //for(let k=0;k<functions.length;k++){\n            let symbol='plus'\n            let experiment = 'case6'\n\n            let width=widths[i]\n            let table_name = dataset[j]\n\n            let columns = ['v1', 'v2']\n            let height=600;\n            let mode = 'compute'\n            let parallel = 1;\n            let errorBound = 0.05\n            let startTime = 0;\n            let endTime = -1;\n            let interact_type = ''\n            let combinedUrl = `/line_chart/start?table_name=${table_name}&columns=${columns}&symbol=${symbol}&mode=${mode}&width=${width}&height=${height}&startTime=${startTime}&endTime=${endTime}&interact_type=${interact_type}&experiment=${experiment}&parallel=${parallel}&errorBound=${errorBound}`;\n            \n            let start_getserver = performance.now()/1000\n            const data = await get(context.state, combinedUrl);\n            let end_getserver = performance.now()/1000\n\n            if (mode == 'compute') {\n                const viewChangeQueryObj: ViewChangeLineChartObj = {\n                    id: uuidv4(),\n                    width: width,\n                    height: height,\n                    x: Math.random() * 60,\n                    y: Math.random() * 60,\n\n                    timeRange: [startTime, endTime],\n                    startTime: startTime,\n                    endTime: endTime,\n                    minV: data['min_values'][0],\n                    maxV: data['max_values'][0],\n                    currentLevel: Math.ceil(Math.log2(width)),\n                    isPow: false,\n                    nonUniformColObjs: [],\n                    // maxLen: lineInfo['max_len']\n                    maxLen: data['M4_arrays'][0][data['M4_arrays'][0].length - 1].et,\n                    dataMaxLen: 0\n                }\n\n                let start_draw = performance.now() / 1000\n                const drawer = drawViewChangeLineChart(viewChangeQueryObj, params)\n                await drawer(data['M4_arrays']);\n                let end_draw = performance.now() / 1000\n\n                let server_time = end_getserver - start_getserver\n                let draw_time = end_draw - start_draw\n                let totaltime = end_draw - start_getserver\n                let computetime = data['totaltime']\n                console.log('computetime:',data['totaltime'])\n                let nettime = server_time-computetime\n\n                count ++;\n                sumNetTime += nettime\n                sumDrawTime += draw_time\n\n                console.log(width, table_name, 'totaltime:', totaltime, 'server_time:', server_time,'nettime:',nettime, 'draw_time:', draw_time)\n\n\n            }\n            else {\n                console.log('error...')\n            }\n\n\n                // data.then(tempRes => {\n                    \n                // });\n\n\n\n\n\n            //}\n        }\n    }\n\n    console.log('count:',count,'avgNetTime:',sumNetTime/count,'avgDrawTime:',sumDrawTime/count)\n    console.log(\"Experiment End......\")\n\n\n   \n}\n\n\nlet meanArray:any;\nlet min:number;\nlet max:number;\nconst computeLineTransform: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>, params:any) =>{\n\n    let table_name = params[0];\n    let columns = params[1];\n    let symbol = params[2];\n    let experiment = params[3];\n    let width = params[4].width\n    let height = params[4].height\n    let mode = params[6]\n    let parallel = 1;\n    let errorBound = params[5]._value;\n    let startTime = params[8];\n    let endTime = params[9];\n    let interact_type = ''\n    let aggregate = params[7]\n\n    if(symbol == '+'){\n        symbol='plus'\n    }else if(symbol == '-'){\n        symbol='minus'\n    }else if(symbol == '*'){\n        symbol='multi'\n    }else if(symbol == '/'){\n        symbol='devide'\n    }\n\n\n    console.log(table_name,experiment,columns,symbol,'',width,height,mode,parallel,errorBound,startTime,endTime, interact_type)\n\n//http://10.16.13.21:35811/postgres/line_chart/start?table_name=testto&columns=v1,v2,v3,v4&symbol=+&mode=single&width=600&height=600&startTime=0&endTime=-1&interact_type=zoom&experiment=ours&parallel=0&errorBound=0.01\n    let combinedUrl \n    // if(symbol == '')\n        combinedUrl= `/line_chart/start?table_name=${table_name}&columns=${columns}&symbol=${symbol}&mode=${mode}&width=${width}&height=${height}&startTime=${startTime}&endTime=${endTime}&interact_type=${interact_type}&experiment=${experiment}&parallel=${parallel}&errorBound=${errorBound}&aggregate=${aggregate}`;\n    // else\n    //     combinedUrl= `/line_chart/start_progressive?table_name=${table_name}&columns=${columns}&symbol=${symbol}&mode=${mode}&width=${width}&height=${height}&startTime=${startTime}&endTime=${endTime}&interact_type=${interact_type}&experiment=${experiment}&parallel=${parallel}&errorBound=${errorBound}&aggregate=${aggregate}`;\n    \n    // store.state.controlParams.startTime = 0;\n    // store.state.controlParams.endTime = -1;\n\n    const data = get(context.state, combinedUrl);\n    console.log('start:',data)\n    const realDataRowNum = 65536; \n    const payload = params[4];\n    const currentLevel = Math.ceil(Math.log2(payload.width));\n    let maxLevel = 0\n    let type = '';\n\n    data.then(tempRes => {\n        console.log(tempRes);\n        if(symbol != ''){\n            let startTimeStamp = tempRes['M4_arrays'][0][0].timestamp;\n            let endTimeStamp = tempRes['M4_arrays'][0][tempRes['M4_arrays'][0].length-1].timestamp;\n            const viewChangeQueryObj: ViewChangeLineChartObj = {\n                id: uuidv4(),\n                width: payload.width,\n                height: payload.height,\n                x: Math.random() * 60,\n                y: Math.random() * 60,\n\n                timeRange: [startTime, tempRes['M4_arrays'][0][tempRes['M4_arrays'][0].length-1].et],\n                startTime: startTimeStamp*1000,\n                endTime: endTimeStamp*1000,\n                // algorithm: \"\",\n                // dataManager: null,\n                // params: [0, 0],\n                minV: tempRes['min_values'][0],\n                maxV: tempRes['max_values'][0],\n                currentLevel: Math.ceil(Math.log2(payload.width)),\n                isPow: false,\n                nonUniformColObjs: [],\n                // maxLen: lineInfo['max_len']\n                dataMaxLen: tempRes['dataMaxLen'],\n                maxLen: tempRes['M4_arrays'][0][tempRes['M4_arrays'][0].length-1].et,\n            }\n            // params.push(tempRes['colomns']);\n            const drawer = drawViewChangeLineChart(viewChangeQueryObj, params)\n            drawer(tempRes['M4_arrays']);\n        }\n        else{\n            const startTimeStamp = tempRes['M4_arrays'][0][0].timestamp;\n            let endTimeStamp = tempRes['M4_arrays'][0][tempRes['M4_arrays'][0].length-1].timestamp\n            let timeInterval = 0;\n\n            // if(symbol != 'mean'){\n            //     meanArray = [...tempRes['M4_arrays']];\n            //     min = tempRes['min_values'][0];\n            //     max = tempRes['max_values'][0];\n            // }\n            // else if(symbol == 'mean'){\n            //     tempRes['M4_arrays'].unshift(...meanArray);\n            //     tempRes['min_values'][0] = min;\n            //     tempRes['max_values'][0] = max;\n            // }\n            params.push(tempRes['columns'])\n            context.commit(\"addMultiTimeSeriesObj\", {\n                // className: lineClassInfo.name,\n                // lineAmount: lineClassInfo.amount,\n                className: \"lineClassInfo.name\",\n                lineAmount: 0,\n                startTimeStamp: startTimeStamp*1000,\n                endTimeStamp: endTimeStamp*1000,\n                timeIntervalMs: timeInterval,                \n                columnInfos: tempRes['M4_arrays'], \n                startTime: startTime, \n                endTime: tempRes['M4_arrays'][0][tempRes['M4_arrays'][0].length-1].et, \n                algorithm: \"multitimeseries\", \n                width: payload.width, \n                height: payload.height, \n                pow: false, \n                minv: tempRes['min_values'][0],\n                maxv: tempRes['max_values'][0],\n                maxLevel,\n                columnsColor: columns,\n                line1: params\n            })\n        }\n    });\n}\n\nconst getAllTables: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>) => {\n    const combinedUrl = `/line_chart/getAllTables`;\n    const data = get(context.state, combinedUrl);\n    data.then(res => {\n        const allTables = res.map((v: any) => v['table_fullname'].split(\".\")[1]);\n        context.commit(\"updateAllTables\", { tables: allTables });\n    })\n}\n\nasync function getAllFlagsFunc(context: ActionContext<GlobalState, GlobalState>, lineType: string, isLoading: boolean) {\n\n    const combinedUrl1 = `/line_chart/getAllFlagNames?line_type=${lineType}`;\n    const allFlagNames = await get(context.state, combinedUrl1);\n    const flagMap: any = {}\n\n    let loading = null;\n    if (isLoading) {\n        loading = openLoading(\"Loading Order Coefficients. First load may take a long time, Please Wait!\")\n    }\n    for (let i = 0; i < allFlagNames['data'].length; i++) {\n        const combinedUrl2 = `/line_chart/getSingleFlag?name=${allFlagNames['data'][i]}&line_type=${lineType}`\n        const tempFlagInfo = await getBuffer(context.state, combinedUrl2);\n        //@ts-ignore\n        flagMap[allFlagNames['data'][i].split(\".\")[0]] = Buffer.from(tempFlagInfo)\n    }\n    if (loading) {\n        loading.close()\n    }\n\n    return flagMap;\n}\n\nconst getAllFlags: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>) => {\n    initIndexDB().then(() => {\n        console.log(\"indexdb init success\");\n    }).catch(() => {\n        console.error(\"indexdb init error\");\n    })\n    const lineType = store.state.controlParams.currentLineType\n    getAllFlagsFunc(context, lineType, true).then(res => {\n        context.commit(\"updateAllFlags\", { flags: res });\n        getAllFlagsFunc(context, \"Multi\", false).then(res => {\n            context.commit(\"updateAllFlags\", { flags: res });\n        })\n    })\n\n\n}\n\nconst getAllMultiLineClassInfo: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>) => {\n    const combinedUrl = `/line_chart/getAllMultiLineClassInfo?mode=${store.state.controlParams.currentMode}`;\n    const data = get(context.state, combinedUrl);\n    data.then(res => {\n        // console.log(\"getAllMultiLineClassInfo\", res);\n        context.commit(\"updateMultiLineClassInfo\", { info: res });\n    });\n}\n\nconst getAllMultiLineClassAndLinesInfo: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>) => {\n    const combinedUrl = `/line_chart/getAllMultiLineClassAndLinesInfo?mode=${store.state.controlParams.currentMode}`;\n    const data = get(context.state, combinedUrl);\n    data.then(res => {\n        // console.log(\"getAllMultiLineClassAndLinesInfo\", res);\n        context.commit(\"updateMultiLineClassAndLinesInfo\", { info: res });\n    });\n}\n\n\nconst gettables: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>) => {\n    const combinedUrl = `/line_chart/gettables`;\n    const data = get(context.state, combinedUrl);\n    data.then(res => {\n        //console.log(\"gettables\", res);\n        context.commit(\"gettables\", { info: res });\n    });\n\n    \n}\n\nconst getcolumns: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>) => {\n    const combinedUrl = `/line_chart/getcolumns?table_name=${store.state.controlParams.currentMultiLineClass}`;\n    const data = get(context.state, combinedUrl);\n    data.then(res => {\n        //console.log(\"getcolumns\", res);\n        context.commit(\"getcolumns\", { info: res });\n    });\n}\n\nconst getaggregates: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>) => {\n    const combinedUrl = `/line_chart/getaggregates?table_name=${store.state.controlParams.currentMultiLineClass}`;\n    const data = get(context.state, combinedUrl);\n    data.then(res => {\n        context.commit(\"getaggregates\", { info: res });\n    });\n}\n\nconst getfunctions: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>) => {\n    const combinedUrl = `/line_chart/getfunctions?table_name=${store.state.controlParams.currentMultiLineClass}`;\n    const data = get(context.state, combinedUrl);\n    data.then(res => {\n        context.commit(\"getfunctions\", { info: res });\n    });\n}\n\nconst getexperiment: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>) => {\n    const combinedUrl = `/line_chart/getexperiment?table_name=${store.state.controlParams.currentMultiLineClass}`;\n    const data = get(context.state, combinedUrl);\n    data.then(res => {\n        context.commit(\"getexperiment\", { info: res });\n    });\n}\n\nconst testCustomDBConn: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>, payload: { hostName: string, possword: string, dbName: string, userName: string }) => {\n    return axios.post(\"postgres/line_chart/testDBConnection\", {\n        host_name: payload.hostName,\n        user_name: payload.userName,\n        password: payload.possword,\n        db_name: payload.dbName,\n    })\n}\n\nconst createCustomDBConn: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>, payload: { hostName: string, possword: string, dbName: string, userName: string }) => {\n    return axios.post(\"postgres/line_chart/createCustomDBConn\", {\n        host_name: payload.hostName,\n        user_name: payload.userName,\n        password: payload.possword,\n        db_name: payload.dbName,\n    })\n}\nconst initOM3DB: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>, payload: { hostName: string, possword: string, dbName: string, userName: string }) => {\n    return get(context.state, \"/line_chart/initOM3DBEnv\")\n}\nconst clearOM3Table: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>, payload: { hostName: string, possword: string, dbName: string, userName: string }) => {\n    return get(context.state, \"/line_chart/clearOM3Table\")\n}\n\nconst getAllCustomTables: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>) => {\n    const combinedUrl = `/line_chart/getAllCustomTables`;\n    return get(context.state, combinedUrl);\n}\n\nconst performTransformForSingeLine: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>, payload: { startTime: string, endTime: string, tableName: string }) => {\n    const combinedUrl = `/line_chart/performTransformForSingeLine?start_time=${payload.startTime}&end_time=${payload.endTime}&table_name=${payload.tableName}`;\n    return get(context.state, combinedUrl);\n}\nconst performTransformForMultiLine: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>, payload: { startTime: string, endTime: string, tableNames: Array<string>, multiLineClassName: string }) => {\n    const combinedUrl = `/line_chart/performTransformForMultiLine?start_time=${payload.startTime}&end_time=${payload.endTime}&table_name=${payload.tableNames}&line_class=${payload.multiLineClassName}`;\n    return get(context.state, combinedUrl);\n}\n\nconst loadCustomTableAndInfo: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>) => {\n    const combinedUrl = `/line_chart/getAllCustomTableAndInfo?mode=${context.state.controlParams.currentMode}`;\n    get(context.state, combinedUrl).then((res) => {\n        if (res['code'] === 200) {\n            context.commit(\"updateCustomTableAndInfo\", { customTables: res['data']['table_name'], customTableInfo: res['data']['table_info'] })\n        } else {\n            console.log(res['msg'])\n        }\n    })\n}\n\nconst loadDefaultTableAndInfo: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>) => {\n    const combinedUrl = `/line_chart/getAllDefaultTableAndInfo?mode=${context.state.controlParams.currentMode}`;\n    get(context.state, combinedUrl).then((res) => {\n        if (res['code'] === 200) {\n            context.commit(\"updateDefaultTableAndInfo\", { tables: res['data']['table_name'], tableInfo: res['data']['table_info'] })\n        } else {\n\n            console.log(res['msg'])\n        }\n    })\n}\n\n\n\nexport {\n    getAllTables,\n    getAllCustomTables,\n    getAllFlags,\n    loadMultiTimeSeriesInitData,\n    loadViewChangeQueryWSMinMaxMissDataInitData,//final method\n    getAllMultiLineClassInfo,\n    getAllMultiLineClassAndLinesInfo,\n    \n    gettables,\n    getcolumns,\n    getfunctions,\n    getaggregates,\n    getexperiment,\n\n    testCustomDBConn,\n    createCustomDBConn,\n    initOM3DB,\n    clearOM3Table,\n    performTransformForSingeLine,\n    loadCustomTableAndInfo,\n    performTransformForMultiLine,\n    loadDefaultTableAndInfo,\n    computeLineTransform,\n    Experiment,\n}\n\n\n\n"],"mappings":"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","ignoreList":[]}]}