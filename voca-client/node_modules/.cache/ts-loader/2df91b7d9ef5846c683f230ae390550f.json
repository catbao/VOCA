{"remainingRequest":"/Users/bao/Downloads/om3-extend/om3-client/node_modules/babel-loader/lib/index.js!/Users/bao/Downloads/om3-extend/om3-client/node_modules/ts-loader/index.js??ref--15-2!/Users/bao/Downloads/om3-extend/om3-client/node_modules/eslint-loader/index.js??ref--14-0!/Users/bao/Downloads/om3-extend/om3-client/src/model/level-index-obj.ts","dependencies":[{"path":"/Users/bao/Downloads/om3-extend/om3-client/src/model/level-index-obj.ts","mtime":1732546288000},{"path":"/Users/bao/Downloads/om3-extend/om3-client/babel.config.js","mtime":1732546288000},{"path":"/Users/bao/Downloads/om3-extend/om3-client/node_modules/cache-loader/dist/cjs.js","mtime":1732627998000},{"path":"/Users/bao/Downloads/om3-extend/om3-client/node_modules/babel-loader/lib/index.js","mtime":1732627998000},{"path":"/Users/bao/Downloads/om3-extend/om3-client/node_modules/ts-loader/index.js","mtime":1732627997000},{"path":"/Users/bao/Downloads/om3-extend/om3-client/node_modules/eslint-loader/index.js","mtime":1732627997000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["checkSetType","computeNeedLoadDataRange","isIntersect","LevelIndexObj","constructor","level","isFull","loadedDataRange","firstNodes","isSelfCheck","deleteLoadedDataRange","node","i","length","index","splice","nextSibling","previousSibling","addLoadedDataRange","firstNode","range","push","loadedDataRangeLen","isMerge","needCheckIndex","minHead","Math","min","p","Error","m","unshift","getDataByIndex","start","end","data","yArray","l","hasDataForRange","has","needDataRange","getTreeNodeStartIndex","root","reCheckIntersect","needCheckedNodeIndex","console","log","needDeleteNodeIndex","nextCheckNodeIndex","j","intersectRes","pos","lastNode","max","idx","selfCheck","timeBoxQuery","checkRange","minMax","hasType3","type"],"sources":["/Users/bao/Downloads/om3-extend/om3-client/node_modules/eslint-loader/index.js??ref--14-0!/Users/bao/Downloads/om3-extend/om3-client/src/model/level-index-obj.ts"],"sourcesContent":["import TrendTree from \"@/helper/tend-query-tree\";\nimport { checkSetType, computeNeedLoadDataRange, isIntersect } from \"../helper/util\"\nexport default class LevelIndexObj {\n    level: number;\n    isFull: boolean;\n    loadedDataRange: Array<Array<number>>;\n    firstNodes: Array<TrendTree>;\n    isSelfCheck: boolean;\n    constructor(level: number, isFull = false) {\n        this.level = level;\n        this.isFull = isFull;\n        this.loadedDataRange = [];\n\n        this.firstNodes = [];\n        this.isSelfCheck = false;\n    }\n\n    deleteLoadedDataRange(node: TrendTree) {\n        \n        if (this.isFull) {\n            this.isFull = false\n        }\n        for (let i = 0; i < this.loadedDataRange.length; i++) {\n            if (this.loadedDataRange[i][0] <= node.index && this.loadedDataRange[i][1] >= node.index) {\n                if (this.loadedDataRange[i][0] === this.loadedDataRange[i][1]) {\n                    this.loadedDataRange.splice(i, 1)\n                    this.firstNodes.splice(i, 1)\n                    break;\n                }\n                if (this.loadedDataRange[i][0] === node.index) {\n                    this.loadedDataRange[i][0] += 1;\n                    //@ts-ignore\n                    node.nextSibling.previousSibling=null\n                    if(node.nextSibling==null){\n                        debugger\n                    }\n                    this.firstNodes[i]=node.nextSibling!\n                    //this.firstNodes[i].nextSibling.previousSibling = null\n                    this.firstNodes[i] = node.nextSibling!;\n                    break;\n                }\n                if (this.loadedDataRange[i][1] === node.index) {\n                    this.loadedDataRange[i][1] -= 1;\n                    if(node.previousSibling!=null){\n                        node.previousSibling.nextSibling = null;\n                    }\n                   \n                    break;\n                }\n                this.firstNodes.splice(i + 1, 0, node.nextSibling!)\n                //@ts-ignore\n                node.previousSibling.nextSibling = null\n                this.loadedDataRange.splice(i + 1, 0, [node.index + 1, this.loadedDataRange[i][1]])\n                this.loadedDataRange[i][1] = node.index - 1;\n                break\n            }\n        }\n    }\n\n    addLoadedDataRange(firstNode: TrendTree, range: Array<number>) {\n        if (this.loadedDataRange.length === 0) {\n            this.loadedDataRange.push(range);\n            this.firstNodes.push(firstNode);\n            return\n        }\n        const loadedDataRangeLen = this.loadedDataRange.length;\n        let isMerge = false;\n        const needCheckIndex = [];\n        for (let i = 0; i < loadedDataRangeLen; i++) {\n            const minHead = Math.min(this.loadedDataRange[i][0], range[0]);\n            if (minHead === this.loadedDataRange[i][0] && (this.loadedDataRange[i][1] + 1 === range[0])) {\n                isMerge = true;\n                let p = this.firstNodes[i];\n                while (p.nextSibling) {\n                    p = p.nextSibling;\n                }\n                if (p.index !== firstNode.index - 1) {\n                    debugger\n                    throw new Error(\"index error\")\n                }\n                p.nextSibling = firstNode;\n                this.loadedDataRange[i][1] = range[1];\n                if (i < loadedDataRangeLen - 1) {\n                    if (range[1] + 1 === this.loadedDataRange[i + 1][0]) {\n                        this.loadedDataRange[i][1] = this.loadedDataRange[i + 1][1];\n                        let m = firstNode;\n                        while (m.nextSibling) {\n                            m = m.nextSibling\n                        }\n                        m.nextSibling = this.firstNodes[i + 1];\n                        this.firstNodes.splice(i + 1, 1);\n                        this.loadedDataRange.splice(i + 1, 1);\n                    } else if (range[1] >= this.loadedDataRange[i + 1][0]) {\n                        debugger\n                    }\n                }\n                break;\n            } else if (minHead === range[0] && (range[1] + 1 === this.loadedDataRange[i][0])) {\n                isMerge = true;\n                let p = firstNode;\n                while (p.nextSibling) {\n                    p = p.nextSibling;\n                }\n                p.nextSibling = this.firstNodes[i];\n                this.firstNodes[i] = firstNode;\n                this.loadedDataRange[i][0] = range[0];\n                break\n            } else {\n                if (i === 0 && range[1] < this.loadedDataRange[i][0] - 1) {\n                    this.loadedDataRange.unshift([range[0], range[1]]);\n                    this.firstNodes.unshift(firstNode);\n                    break;\n                } else if (i === loadedDataRangeLen - 1 && range[0] > this.loadedDataRange[i][1] + 1) {\n\n                    this.loadedDataRange.push([range[0], range[1]]);\n                    this.firstNodes.push(firstNode);\n                    break;\n\n                } else {\n                    if (range[0] > this.loadedDataRange[i][1] + 1 && range[1] < this.loadedDataRange[i + 1][0] - 1) {\n                        this.loadedDataRange.splice(i + 1, 0, [range[0], range[1]]);\n                        this.firstNodes.splice(i + 1, 0, firstNode);\n                        break;\n                    }\n\n                }\n\n            }\n        }\n        if (this.firstNodes.length === 1 && (this.loadedDataRange[0][1] - this.loadedDataRange[0][0] + 1) === 2 ** this.level) {\n            this.isFull = true;\n        }\n    }\n\n\n    getDataByIndex(start: number, end: number) {\n        const data: Array<Array<number>> = [];\n        for (let i = 0; i < this.firstNodes.length; i++) {\n            if (this.loadedDataRange[i][0] <= start && this.loadedDataRange[i][1] >= end) {\n                let p = this.firstNodes[i];\n                while (p) {\n                    if (p.index >= start && p.index <= end) {\n                        data.push(p.yArray);\n                    }\n                    if (p.index > end) {\n                        break;\n                    }\n                    //@ts-ignore\n                    p = p.nextSibling;\n                }\n            }\n        }\n        return { data, start, end, l: this.level };\n    }\n    hasDataForRange(start: number, end: number) {\n        if (this.isFull) {\n            return {\n                has: true,\n                range: [],\n            }\n        }\n        const needDataRange = computeNeedLoadDataRange([start, end], this.loadedDataRange);\n        if (needDataRange.length === 0) {\n            return {\n                has: true,\n                range: [],\n            }\n        } else {\n            return {\n                has: false,\n                range: needDataRange\n            }\n        }\n    }\n    // fillLevel(){\n    //     const needDataRes=this.hasDataForRange(0,2**this.level);\n    //     if(needDataRes.has){\n    //         return\n    //     }\n\n    // }\n    getTreeNodeStartIndex(start: number) {\n        for (let i = 0; i < this.firstNodes.length; i++) {\n            if (this.loadedDataRange[i][0] <= start && this.loadedDataRange[i][1] >= start) {\n                let root = this.firstNodes[i];\n                while (root) {\n\n                    if (root.index === start) {\n                        return root\n                    }\n                    //@ts-ignore\n                    root = root.nextSibling;\n                }\n            }\n        }\n        return null;\n    }\n\n    reCheckIntersect(needCheckedNodeIndex: Array<number>) {\n        if (needCheckedNodeIndex.length > 2) {\n            // throw new Error(\"check intersect error\");\n            console.log(\"..................................\");\n        }\n        let needDeleteNodeIndex = [];\n        while (needCheckedNodeIndex.length > 0) {\n            let nextCheckNodeIndex = [];\n            for (let i = 0; i < needCheckedNodeIndex.length; i++) {\n                for (let j = 0; j < this.loadedDataRange.length; j++) {\n                    if (needCheckedNodeIndex[i] === j) {\n                        continue;\n                    }\n                    const intersectRes = isIntersect(this.loadedDataRange[j], this.loadedDataRange[needCheckedNodeIndex[i]]);\n                    if (intersectRes.isIntersect) {\n                        if (j === needCheckedNodeIndex[needCheckedNodeIndex.length - 1]) {\n                            needCheckedNodeIndex.splice(needCheckedNodeIndex.length - 1, 1);\n                        }\n                        if (intersectRes.pos === 'second') {\n\n                            needDeleteNodeIndex.push(j);\n\n                            const lastNode = this.firstNodes[j];\n                            const firstNode = this.firstNodes[needCheckedNodeIndex[i]];\n                            let p = firstNode;\n\n                            while (p.nextSibling) {\n                                if (p.nextSibling.index === lastNode.index) {\n                                    p.nextSibling = lastNode;\n                                    break;\n                                }\n                                p = p.nextSibling;\n                            }\n\n                            this.loadedDataRange[needCheckedNodeIndex[i]][0] = Math.min(this.loadedDataRange[j][0], this.loadedDataRange[needCheckedNodeIndex[i]][0]);\n                            this.loadedDataRange[needCheckedNodeIndex[i]][1] = Math.max(this.loadedDataRange[j][1], this.loadedDataRange[needCheckedNodeIndex[i]][1]);\n                            nextCheckNodeIndex.push(needCheckedNodeIndex[i]);\n                        } else {\n\n                            needDeleteNodeIndex.push(needCheckedNodeIndex[i]);\n\n                            let p = this.firstNodes[j];\n                            while (p.nextSibling) {\n                                if (p.nextSibling.index === this.firstNodes[needCheckedNodeIndex[i]].index) {\n                                    p.nextSibling = this.firstNodes[needCheckedNodeIndex[i]];\n                                    break;\n                                }\n                                p = p.nextSibling;\n                            }\n                            this.loadedDataRange[j][0] = Math.min(this.loadedDataRange[j][0], this.loadedDataRange[needCheckedNodeIndex[i]][0]);\n                            this.loadedDataRange[j][1] = Math.max(this.loadedDataRange[j][1], this.loadedDataRange[needCheckedNodeIndex[i]][1]);\n                            nextCheckNodeIndex.push(j);\n                        }\n                    } else {\n\n                        const minHead = Math.min(this.loadedDataRange[j][0], this.loadedDataRange[needCheckedNodeIndex[i]][0]);\n                        if (minHead === this.loadedDataRange[j][0] && (this.loadedDataRange[j][1] + 1 === this.loadedDataRange[needCheckedNodeIndex[i]][0])) {\n                            needDeleteNodeIndex.push(needCheckedNodeIndex[i])\n                            let p = this.firstNodes[j];\n                            while (p.nextSibling) {\n                                p = p.nextSibling;\n                            }\n                            p.nextSibling = this.firstNodes[needCheckedNodeIndex[i]];\n\n                            this.loadedDataRange[j][1] = this.loadedDataRange[needCheckedNodeIndex[i]][1];\n                            nextCheckNodeIndex.push(j)\n                        } else if (minHead === this.loadedDataRange[needCheckedNodeIndex[i]][0] && (this.loadedDataRange[needCheckedNodeIndex[i]][1] + 1 === this.loadedDataRange[j][0])) {\n                            needDeleteNodeIndex.push(j);\n                            let p = this.firstNodes[needCheckedNodeIndex[i]];\n                            while (p.nextSibling) {\n                                p = p.nextSibling;\n                            }\n                            p.nextSibling = this.firstNodes[j];\n\n                            this.loadedDataRange[needCheckedNodeIndex[i]][1] = this.loadedDataRange[j][1];\n                            nextCheckNodeIndex.push(needCheckedNodeIndex[i]);\n                        }\n\n                    }\n\n\n                }\n            }\n            for (let i = 0; i < needDeleteNodeIndex.length; i++) {\n                const idx = needDeleteNodeIndex[i];\n                for (let j = 0; j < nextCheckNodeIndex.length; j++) {\n                    if (nextCheckNodeIndex[j] > idx) {\n                        nextCheckNodeIndex[j]--;\n                    }\n                }\n                this.loadedDataRange.splice(idx, 1);\n                this.firstNodes.splice(idx, 1);\n            }\n            needDeleteNodeIndex = [];\n            needCheckedNodeIndex = nextCheckNodeIndex;\n            nextCheckNodeIndex = [];\n        }\n    }\n\n    selfCheck() {\n        if (this.loadedDataRange.length != this.firstNodes.length) {\n            throw new Error(\"loadedDataRange len not match firtnodes\")\n        }\n        for (let i = 0; i < this.loadedDataRange.length; i++) {\n            if (this.loadedDataRange[i][0] !== this.firstNodes[i].index) {\n                console.log(this);\n                throw new Error(\"range not match node index\");\n            }\n        }\n        for (let i = 0; i < this.loadedDataRange.length; i++) {\n            let p = this.firstNodes[i];\n            let index = this.loadedDataRange[i][0];\n            while (p && index <= this.loadedDataRange[i][1]) {\n                if (p.index === index) {\n                    p = p.nextSibling!;\n                    index++;\n                } else {\n                    console.log(this);\n                    throw new Error(\"range not match node index\");\n                }\n            }\n        }\n    }\n\n    timeBoxQuery(checkRange: Array<number>, minMax: Array<number>) {\n        for (let i = 0; i < this.loadedDataRange.length; i++) {\n            if (this.loadedDataRange[i][0] <= checkRange[0] && this.loadedDataRange[i][1] >= checkRange[1]) {\n                let p = this.firstNodes[i];\n                let hasType3 = false;\n                while (p && p.index <= checkRange[1]) {\n                    if (p.index >= checkRange[0]) {\n                        const type = checkSetType(minMax, [p.yArray[1], p.yArray[2]])\n                        if (type === 3) {\n                            hasType3 = true;\n                        }\n                        if (type === 2) {\n                            return 2\n                        }\n                    }\n                    p = p.nextSibling as TrendTree;\n                }\n                if (hasType3) {\n                    return 3;\n                } else {\n                    return 1;\n                }\n            }\n        }\n        throw new Error(\"error\");\n    }\n}"],"mappings":"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","ignoreList":[]}]}