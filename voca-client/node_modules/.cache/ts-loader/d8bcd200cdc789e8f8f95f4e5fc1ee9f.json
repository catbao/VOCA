{"remainingRequest":"/ai/didi01/zhanglingyu/om3-extend/om3-client/node_modules/babel-loader/lib/index.js!/ai/didi01/zhanglingyu/om3-extend/om3-client/node_modules/ts-loader/index.js??ref--15-2!/ai/didi01/zhanglingyu/om3-extend/om3-client/node_modules/eslint-loader/index.js??ref--14-0!/ai/didi01/zhanglingyu/om3-extend/om3-client/src/model/haar-data-manager.ts","dependencies":[{"path":"/ai/didi01/zhanglingyu/om3-extend/om3-client/src/model/haar-data-manager.ts","mtime":1732546288000},{"path":"/ai/didi01/zhanglingyu/om3-extend/om3-client/babel.config.js","mtime":1732546288000},{"path":"/ai/didi01/zhanglingyu/om3-extend/om3-client/node_modules/cache-loader/dist/cjs.js","mtime":1732627998000},{"path":"/ai/didi01/zhanglingyu/om3-extend/om3-client/node_modules/babel-loader/lib/index.js","mtime":1732627998000},{"path":"/ai/didi01/zhanglingyu/om3-extend/om3-client/node_modules/ts-loader/index.js","mtime":1732627997000},{"path":"/ai/didi01/zhanglingyu/om3-extend/om3-client/node_modules/eslint-loader/index.js","mtime":1732627997000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZXJyb3IuY2F1c2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5wdXNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXNuZXh0Lml0ZXJhdG9yLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXNuZXh0Lml0ZXJhdG9yLmZvci1lYWNoLmpzIjsKaW1wb3J0IEhhYXJJbmRleE9iaiBmcm9tICIuL2hhYXItaW5kZXgtb2JqIjsKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IHN0b3JlIGZyb20gIkAvc3RvcmUiOwovLyBpbXBvcnQgeyBOb1VuaWZvcm1Db2xPYmogfSBmcm9tICIuL25vbi11bmlmb3JtLWNvbC1vYmoiOwppbXBvcnQgSGFhclRyZWUgZnJvbSAiQC9oZWxwZXIvaGFhci10cmVlIjsKZXhwb3J0IGRlZmF1bHQgY2xhc3MgSGFhckRhdGFNYW5hZ2VyIHsKICBjb25zdHJ1Y3RvcihoYWFySW5kZXhPYmpzLCBkYXRhTmFtZSwgbWF4TGV2ZWwpIHsKICAgIHRoaXMuaGFhckluZGV4T2JqcyA9IGhhYXJJbmRleE9ianM7CiAgICB0aGlzLm1heExldmVsID0gbWF4TGV2ZWwgPyBtYXhMZXZlbCA6IHN0b3JlLnN0YXRlLmNvbnRyb2xQYXJhbXMudGFibGVNYXhMZXZlbDsKICAgIHRoaXMucmVhbERhdGFSb3dOdW0gPSA3MTkzMjAwOwogICAgdGhpcy5kYXRhTmFtZSA9IGRhdGFOYW1lOwogIH0KICBhc3luYyBnZXREYXRhTW9ja1NlcnZlcihpbmZvKSB7CiAgICBjb25zdCBpbnRlcm5hbExldmVsID0gdGhpcy5tYXhMZXZlbCAtIGluZm8ubGV2ZWw7CiAgICBjb25zdCBvdXR0ZXJMZXZlbCA9IGluZm8ubGV2ZWw7CiAgICBjb25zdCBuZXh0TGV2ZWwgPSBpbnRlcm5hbExldmVsOwogICAgaWYgKG5leHRMZXZlbCA8IDEpIHsKICAgICAgdGhyb3cgbmV3IEVycm9yKCJsZXZlbCBvdXQgb2YgcmFuZ2UiKTsKICAgIH0KICAgIGNvbnN0IHdpZHRoID0gMiAqKiBNYXRoLmNlaWwoTWF0aC5sb2cyKGluZm8ud2lkdGgpKTsKICAgIGxldCBvZmZzZXQgPSBpbmZvLm9mZnNldDsKICAgIGxldCBlbmQgPSBpbmZvLmVuZDsKICAgIGxldCBzdGFydCA9IGluZm8uc3RhcnQ7CiAgICBsZXQgZm9jdXNQb2ludCA9IHN0YXJ0ICsgb2Zmc2V0OwogICAgbGV0IG5leHRTdGFydCA9IGZvY3VzUG9pbnQgLSB3aWR0aCAvIDQ7CiAgICBsZXQgbmV4dEVuZCA9IGZvY3VzUG9pbnQgKyB3aWR0aCAvIDQ7CiAgICBpZiAobmV4dFN0YXJ0IDw9IHN0YXJ0KSB7CiAgICAgIG5leHRTdGFydCA9IHN0YXJ0OwogICAgICBuZXh0RW5kID0gc3RhcnQgKyB3aWR0aCAvIDIgLSAxOwogICAgfQogICAgaWYgKG5leHRFbmQgPj0gZW5kKSB7CiAgICAgIG5leHRFbmQgPSBlbmQ7CiAgICAgIG5leHRTdGFydCA9IGVuZCAtIHdpZHRoIC8gMiArIDE7CiAgICB9CiAgICBjb25zdCBkYXRhID0gYXdhaXQgdGhpcy5nZXREYXRhKG91dHRlckxldmVsICsgMSwgbmV4dFN0YXJ0ICogMiwgbmV4dFN0YXJ0ICogMiArIHdpZHRoIC0gMSk7CiAgICByZXR1cm4gW1tvZmZzZXQsIDIgKiBuZXh0U3RhcnRdLCBkYXRhXTsKICB9CiAgYXN5bmMgZ2V0RGF0YShsZXZlbCwgc3RhcnQsIGVuZCwgbm9SZXQpIHsKICAgIGlmIChsZXZlbCA+IHRoaXMubWF4TGV2ZWwpIHsKICAgICAgcmV0dXJuIFtdOwogICAgfQogICAgbGV0IGxhc3RGdWxsTGV2ZWwgPSAyOwogICAgbGV0IG5leHRTdGFydCA9IHN0YXJ0OwogICAgbGV0IG5leHRFbmQgPSBlbmQ7CiAgICBmb3IgKGxldCBpID0gbGV2ZWwgLSAxOyBpID4gMjsgaS0tKSB7CiAgICAgIG5leHRTdGFydCA9IE1hdGguZmxvb3IobmV4dFN0YXJ0IC8gMik7CiAgICAgIG5leHRFbmQgPSBNYXRoLmZsb29yKG5leHRFbmQgLyAyKTsKICAgICAgaWYgKHRoaXMuaGFhckluZGV4T2Jqc1tpXSAmJiB0aGlzLmhhYXJJbmRleE9ianNbaV0uaXNGdWxsKSB7CiAgICAgICAgbGFzdEZ1bGxMZXZlbCA9IGk7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIH0KICAgIGZvciAobGV0IGkgPSBsYXN0RnVsbExldmVsICsgMTsgaSA8PSBsZXZlbDsgaSsrKSB7CiAgICAgIG5leHRTdGFydCA9IG5leHRTdGFydCAqIDI7CiAgICAgIG5leHRFbmQgPSBuZXh0RW5kICogMiArIDE7CiAgICAgIGNvbnN0IGxvc2VkRGF0YUluZm8gPSB0aGlzLmNoZWNrTG9hZGVkRGF0YUluU2luZ2FsTGV2ZWwoW1tpLCBuZXh0U3RhcnQsIG5leHRFbmRdXSk7CiAgICAgIGF3YWl0IHRoaXMuYmF0Y2hMb2FkRGF0YUZvclJhbmdlTGV2ZWwobG9zZWREYXRhSW5mbyk7CiAgICB9CiAgICBpZiAodGhpcy5oYWFySW5kZXhPYmpzW2xldmVsXSkgewogICAgICBpZiAobm9SZXQpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgZGF0YTogW10sCiAgICAgICAgICBzdGFydDogMCwKICAgICAgICAgIGVuZDogMCwKICAgICAgICAgIGw6IDAKICAgICAgICB9OwogICAgICB9IGVsc2UgewogICAgICAgIGlmICh0aGlzLmRhdGFOYW1lID09PSAnc2Vuc29yOCcpIHsKICAgICAgICAgIGNvbnN0IGV4dHJhRGF0YUxldmVsID0gTWF0aC5jZWlsKE1hdGgubG9nMigyICoqIHRoaXMubWF4TGV2ZWwgLSB0aGlzLnJlYWxEYXRhUm93TnVtKSk7CiAgICAgICAgICBpZiAobGV2ZWwgPj0gdGhpcy5tYXhMZXZlbCAtIGV4dHJhRGF0YUxldmVsKSB7CiAgICAgICAgICAgIGNvbnN0IGN1ckV4dHJhTGV2ZWwgPSBsZXZlbCAtICh0aGlzLm1heExldmVsIC0gZXh0cmFEYXRhTGV2ZWwpOwogICAgICAgICAgICBjb25zdCBmYWtlUm93TnVtID0gMiAqKiBjdXJFeHRyYUxldmVsOwogICAgICAgICAgICBpZiAoZW5kID49IDIgKiogbGV2ZWwgLSBmYWtlUm93TnVtKSB7CiAgICAgICAgICAgICAgZW5kID0gMiAqKiBsZXZlbCAtIGZha2VSb3dOdW0gLSAxOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgICBsZXQgbGFzdEluZGV4ID0gdGhpcy5yZWFsRGF0YVJvd051bSAtIDE7CiAgICAgICAgICBmb3IgKGxldCBpID0gdGhpcy5tYXhMZXZlbDsgaSA+PSBsZXZlbDsgaS0tKSB7CiAgICAgICAgICAgIGxhc3RJbmRleCA9IE1hdGguZmxvb3IobGFzdEluZGV4IC8gMik7CiAgICAgICAgICB9CiAgICAgICAgICBpZiAoZW5kIDwgc3RhcnQpIHsKICAgICAgICAgICAgcmV0dXJuIFtdOwogICAgICAgICAgfQogICAgICAgICAgcmV0dXJuIHRoaXMuaGFhckluZGV4T2Jqc1tsZXZlbF0uZ2V0RGF0YUJ5SW5kZXgoc3RhcnQsIGVuZCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJldHVybiB0aGlzLmhhYXJJbmRleE9ianNbbGV2ZWxdLmdldERhdGFCeUluZGV4KHN0YXJ0LCBlbmQpOwogICAgICAgIH0KICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBkYXRhOiBbXSwKICAgICAgICBzdGFydDogMCwKICAgICAgICBlbmQ6IDAsCiAgICAgICAgbDogMAogICAgICB9OwogICAgICAvL3Rocm93IG5ldyBFcnJvcigiY2Fubm90IGdldCBkYXRhIGZyb20gZGF0YSBtYW5hZ2VyIik7CiAgICB9CiAgfQogIGFzeW5jIGdldERhdGFWMShsZXZlbCwgc3RhcnQsIGVuZCwgbm9SZXQpIHsKICAgIGlmIChsZXZlbCA+IHRoaXMubWF4TGV2ZWwpIHsKICAgICAgcmV0dXJuIFtdOwogICAgfQogICAgaWYgKHRoaXMuaGFhckluZGV4T2Jqc1tsZXZlbF0pIHsKICAgICAgY29uc3QgaGFzRGF0YSA9IHRoaXMuaGFhckluZGV4T2Jqc1tsZXZlbF0uaGFzRGF0YUZvclJhbmdlKHN0YXJ0LCBlbmQpOwogICAgICBpZiAoaGFzRGF0YS5oYXMpIHsKICAgICAgICByZXR1cm4gdGhpcy5oYWFySW5kZXhPYmpzW2xldmVsXS5nZXREYXRhQnlJbmRleChzdGFydCwgZW5kKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zdCBsb3NlZFJhbmdlID0gaGFzRGF0YS5yYW5nZTsKICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxvc2VkUmFuZ2UubGVuZ3RoOyBpKyspIHsKICAgICAgICAgIGxldCBsID0gbGV2ZWwgLSAxOwogICAgICAgICAgY29uc3QgbG9zZWREYXRhT3RoZXJMZXZlbCA9IFtdOwogICAgICAgICAgZm9yICg7IGwgPj0gMDsgbC0tKSB7CiAgICAgICAgICAgIGlmICh0aGlzLmhhYXJJbmRleE9ianNbbF0uaXNGdWxsKSB7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgY29uc3QgbGV2ZWxIYXNEYXRhID0gdGhpcy5oYWFySW5kZXhPYmpzW2xdLmhhc0RhdGFGb3JSYW5nZShNYXRoLmZsb29yKGxvc2VkUmFuZ2VbaV1bMF0gLyAyICoqIChsZXZlbCAtIGwpKSwgTWF0aC5mbG9vcihsb3NlZFJhbmdlW2ldWzFdIC8gMiAqKiAobGV2ZWwgLSBsKSkpOwogICAgICAgICAgICBpZiAobGV2ZWxIYXNEYXRhLmhhcykgewogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGxvc2VkRGF0YU90aGVyTGV2ZWwucHVzaChbbCwgTWF0aC5mbG9vcihsb3NlZFJhbmdlW2ldWzBdIC8gMiAqKiAobGV2ZWwgLSBsKSksIE1hdGguZmxvb3IobG9zZWRSYW5nZVtpXVsxXSAvIDIgKiogKGxldmVsIC0gbCkpXSk7CiAgICAgICAgICB9CiAgICAgICAgICBhd2FpdCB0aGlzLmxvYWREYXRhRm9yUmFuZ2VMZXZlbChsb3NlZERhdGFPdGhlckxldmVsKTsKICAgICAgICB9CiAgICAgICAgbG9zZWRSYW5nZS5mb3JFYWNoKHJhbmdlID0+IHsKICAgICAgICAgIHJhbmdlLnVuc2hpZnQobGV2ZWwpOwogICAgICAgIH0pOwogICAgICAgIGF3YWl0IHRoaXMubG9hZERhdGFGb3JSYW5nZUxldmVsKGxvc2VkUmFuZ2UpOwogICAgICB9CiAgICB9IGVsc2UgewogICAgICBsZXQgbCA9IGxldmVsIC0gMTsKICAgICAgY29uc3QgbG9zZWREYXRhT3RoZXJMZXZlbCA9IFtdOwogICAgICBmb3IgKDsgbCA+PSAwOyBsLS0pIHsKICAgICAgICBpZiAodGhpcy5oYWFySW5kZXhPYmpzW2xdICYmIHRoaXMuaGFhckluZGV4T2Jqc1tsXS5pc0Z1bGwpIHsKICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgICBpZiAodGhpcy5oYWFySW5kZXhPYmpzW2xdKSB7CiAgICAgICAgICBjb25zdCBsZXZlbEhhc0RhdGEgPSB0aGlzLmhhYXJJbmRleE9ianNbbF0uaGFzRGF0YUZvclJhbmdlKE1hdGguZmxvb3Ioc3RhcnQgLyAyICoqIChsZXZlbCAtIGwpKSwgTWF0aC5mbG9vcihlbmQgLyAyICoqIChsZXZlbCAtIGwpKSk7CiAgICAgICAgICBpZiAobGV2ZWxIYXNEYXRhLmhhcykgewogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgbG9zZWREYXRhT3RoZXJMZXZlbC5wdXNoKFtsLCBNYXRoLmZsb29yKHN0YXJ0IC8gMiAqKiAobGV2ZWwgLSBsKSksIE1hdGguZmxvb3IoZW5kIC8gMiAqKiAobGV2ZWwgLSBsKSldKTsKICAgICAgfQogICAgICBsb3NlZERhdGFPdGhlckxldmVsLnVuc2hpZnQoW2xldmVsLCBzdGFydCwgZW5kXSk7CiAgICAgIGF3YWl0IHRoaXMubG9hZERhdGFGb3JSYW5nZUxldmVsKGxvc2VkRGF0YU90aGVyTGV2ZWwpOwogICAgfQogICAgaWYgKHRoaXMuaGFhckluZGV4T2Jqc1tsZXZlbF0pIHsKICAgICAgaWYgKG5vUmV0KSB7CiAgICAgICAgcmV0dXJuIFtdOwogICAgICB9IGVsc2UgewogICAgICAgIGlmICh0aGlzLmRhdGFOYW1lID09PSAnc2Vuc29yOCcpIHsKICAgICAgICAgIGNvbnN0IGV4dHJhRGF0YUxldmVsID0gTWF0aC5jZWlsKE1hdGgubG9nMigyICoqIHRoaXMubWF4TGV2ZWwgLSB0aGlzLnJlYWxEYXRhUm93TnVtKSk7CiAgICAgICAgICBpZiAobGV2ZWwgPj0gdGhpcy5tYXhMZXZlbCAtIGV4dHJhRGF0YUxldmVsKSB7CiAgICAgICAgICAgIGNvbnN0IGN1ckV4dHJhTGV2ZWwgPSBsZXZlbCAtICh0aGlzLm1heExldmVsIC0gZXh0cmFEYXRhTGV2ZWwpOwogICAgICAgICAgICBjb25zdCBmYWtlUm93TnVtID0gMiAqKiBjdXJFeHRyYUxldmVsOwogICAgICAgICAgICBpZiAoZW5kID49IDIgKiogbGV2ZWwgLSBmYWtlUm93TnVtKSB7CiAgICAgICAgICAgICAgZW5kID0gMiAqKiBsZXZlbCAtIGZha2VSb3dOdW0gLSAxOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgICBsZXQgbGFzdEluZGV4ID0gdGhpcy5yZWFsRGF0YVJvd051bSAtIDE7CiAgICAgICAgICBmb3IgKGxldCBpID0gdGhpcy5tYXhMZXZlbDsgaSA+PSBsZXZlbDsgaS0tKSB7CiAgICAgICAgICAgIGxhc3RJbmRleCA9IE1hdGguZmxvb3IobGFzdEluZGV4IC8gMik7CiAgICAgICAgICB9CiAgICAgICAgICBpZiAoZW5kIDwgc3RhcnQpIHsKICAgICAgICAgICAgcmV0dXJuIFtdOwogICAgICAgICAgfQogICAgICAgICAgcmV0dXJuIHRoaXMuaGFhckluZGV4T2Jqc1tsZXZlbF0uZ2V0RGF0YUJ5SW5kZXgoc3RhcnQsIGVuZCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJldHVybiB0aGlzLmhhYXJJbmRleE9ianNbbGV2ZWxdLmdldERhdGFCeUluZGV4KHN0YXJ0LCBlbmQpOwogICAgICAgIH0KICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgdGhyb3cgbmV3IEVycm9yKCJjYW5ub3QgZ2V0IGRhdGEgZnJvbSBkYXRhIG1hbmFnZXIiKTsKICAgIH0KICB9CiAgZ2V0TG9hZGVkRGF0YShsZXZlbCwgc3RhcnQsIGVuZCkgewogICAgaWYgKHRoaXMuaGFhckluZGV4T2Jqc1tsZXZlbF0pIHsKICAgICAgaWYgKHRoaXMuZGF0YU5hbWUgPT09ICdzZW5zb3I4JykgewogICAgICAgIGNvbnN0IGV4dHJhRGF0YUxldmVsID0gTWF0aC5jZWlsKE1hdGgubG9nMigyICoqIHRoaXMubWF4TGV2ZWwgLSB0aGlzLnJlYWxEYXRhUm93TnVtKSk7CiAgICAgICAgaWYgKGxldmVsID49IHRoaXMubWF4TGV2ZWwgLSBleHRyYURhdGFMZXZlbCkgewogICAgICAgICAgY29uc3QgY3VyRXh0cmFMZXZlbCA9IGxldmVsIC0gKHRoaXMubWF4TGV2ZWwgLSBleHRyYURhdGFMZXZlbCk7CiAgICAgICAgICBjb25zdCBmYWtlUm93TnVtID0gMiAqKiBjdXJFeHRyYUxldmVsOwogICAgICAgICAgaWYgKGVuZCA+PSAyICoqIGxldmVsIC0gZmFrZVJvd051bSkgewogICAgICAgICAgICBlbmQgPSAyICoqIGxldmVsIC0gZmFrZVJvd051bSAtIDE7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGlmIChlbmQgPCBzdGFydCkgewogICAgICAgICAgcmV0dXJuIFtdOwogICAgICAgIH0KICAgICAgICByZXR1cm4gdGhpcy5oYWFySW5kZXhPYmpzW2xldmVsXS5nZXREYXRhQnlJbmRleChzdGFydCwgZW5kKTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gdGhpcy5oYWFySW5kZXhPYmpzW2xldmVsXS5nZXREYXRhQnlJbmRleChzdGFydCwgZW5kKTsKICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgdGhyb3cgbmV3IEVycm9yKCJjYW5ub3QgZ2V0IGRhdGEgZnJvbSBkYXRhIG1hbmFnZXIiKTsKICAgIH0KICB9CiAgYXN5bmMgYmF0Y2hMb2FkRGF0YUZvclJhbmdlV2l0aENoZWNrKGxvc2VkUmFuZ2UpIHsKICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbG9zZWRSYW5nZS5sZW5ndGg7IGkrKykgewogICAgICBjb25zdCBjaGVja1JlcyA9IHRoaXMuY2hlY2tMb2FkZWREYXRhSW5TaW5nYWxMZXZlbChbW2xvc2VkUmFuZ2VbaV1bMF0gLSAxLCBNYXRoLmZsb29yKGxvc2VkUmFuZ2VbaV1bMV0gLyAyKSwgTWF0aC5mbG9vcihsb3NlZFJhbmdlW2ldWzJdIC8gMildXSk7CiAgICAgIGlmIChjaGVja1Jlcy5sZW5ndGggIT09IDApIHsKICAgICAgICBhd2FpdCB0aGlzLmdldERhdGEobG9zZWRSYW5nZVtpXVswXSAtIDEsIE1hdGguZmxvb3IobG9zZWRSYW5nZVtpXVsxXSAvIDIpLCBNYXRoLmZsb29yKGxvc2VkUmFuZ2VbaV1bMl0gLyAyKSk7CiAgICAgIH0KICAgIH0KICAgIGF3YWl0IHRoaXMuYmF0Y2hMb2FkRGF0YUZvclJhbmdlTGV2ZWwobG9zZWRSYW5nZSk7CiAgICByZXR1cm47CiAgfQogIGFzeW5jIGJhdGNoTG9hZERhdGFGb3JSYW5nZUxldmVsKGxvc2VkUmFuZ2UpIHsKICAgIGNvbnN0IGRpZlZhbHMgPSBhd2FpdCB0aGlzLmJhdGNoTG9hZERpZldpZHRoUG9zdChsb3NlZFJhbmdlKTsKICAgIGxldCBjb3VudCA9IDA7CiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxvc2VkUmFuZ2UubGVuZ3RoOyBpKyspIHsKICAgICAgY29uc3QgbGV2ZWxSYW5nZSA9IGxvc2VkUmFuZ2VbaV07CiAgICAgIGNvbnN0IHN0YXJ0Tm9kZSA9IHRoaXMuaGFhckluZGV4T2Jqc1tsb3NlZFJhbmdlW2ldWzBdIC0gMV0uZ2V0VHJlZU5vZGVTdGFydEluZGV4KE1hdGguZmxvb3IobG9zZWRSYW5nZVtpXVsxXSAvIDIpKTsKICAgICAgbGV0IHAgPSBzdGFydE5vZGU7CiAgICAgIGNvbnN0IG5ld1RyZWVOb2RlID0gW107CiAgICAgIGZvciAobGV0IGogPSBNYXRoLmZsb29yKGxvc2VkUmFuZ2VbaV1bMV0gLyAyKTsgaiA8PSBNYXRoLmZsb29yKGxvc2VkUmFuZ2VbaV1bMl0gLyAyKTsgaisrKSB7CiAgICAgICAgdmFyIF9wOwogICAgICAgIGlmICgoKF9wID0gcCkgPT09IG51bGwgfHwgX3AgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9wLmluZGV4KSA9PT0gaiAmJiBqID09PSBkaWZWYWxzW2NvdW50XS5pICYmIHAubGV2ZWwgPT09IGRpZlZhbHNbY291bnRdLmwpIHsKICAgICAgICAgIHAuZGlmZmVyZW5jZSA9IGRpZlZhbHNbY291bnRdLmRpZjsKICAgICAgICAgIGNvbnN0IGEgPSAoMiAqIHAudmFsdWUgKyBkaWZWYWxzW2NvdW50XS5kaWYpIC8gMjsKICAgICAgICAgIGNvbnN0IGIgPSAoMiAqIHAudmFsdWUgLSBkaWZWYWxzW2NvdW50XS5kaWYpIC8gMjsKICAgICAgICAgIGNvbnN0IGZpcnN0Tm9kZSA9IG5ldyBIYWFyVHJlZShwLCB0cnVlLCBwLmluZGV4LCBhKTsKICAgICAgICAgIGNvbnN0IHNlY29uZE5vZGUgPSBuZXcgSGFhclRyZWUocCwgZmFsc2UsIHAuaW5kZXgsIGIpOwogICAgICAgICAgbmV3VHJlZU5vZGUucHVzaChmaXJzdE5vZGUpOwogICAgICAgICAgbmV3VHJlZU5vZGUucHVzaChzZWNvbmROb2RlKTsKICAgICAgICAgIHAgPSBwLm5leHRTaWJsaW5nOwogICAgICAgICAgY291bnQrKzsKICAgICAgICAgIGlmIChwID09PSBudWxsIHx8IGNvdW50ID49IGRpZlZhbHMubGVuZ3RoKSB7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB2YXIgX3AyOwogICAgICAgICAgY29uc29sZS5sb2cobG9zZWRSYW5nZVtpXVswXSAtIDEsIE1hdGguZmxvb3IobG9zZWRSYW5nZVtpXVsxXSAvIDIpKTsKICAgICAgICAgIGNvbnNvbGUubG9nKCJsb3NlIHJhbmdlOiIsIGxvc2VkUmFuZ2UsIHAsIChfcDIgPSBwKSA9PT0gbnVsbCB8fCBfcDIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9wMi5pbmRleCwgaik7CiAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmhhYXJJbmRleE9ianMpOwogICAgICAgICAgZGVidWdnZXI7CiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoImRpZiBub3QgbWF0Y2ggbm9kZSIpOwogICAgICAgIH0KICAgICAgfQogICAgICBmb3IgKGxldCBqID0gMDsgaiA8IG5ld1RyZWVOb2RlLmxlbmd0aCAtIDE7IGorKykgewogICAgICAgIG5ld1RyZWVOb2RlW2pdLm5leHRTaWJsaW5nID0gbmV3VHJlZU5vZGVbaiArIDFdOwogICAgICAgIG5ld1RyZWVOb2RlW2ogKyAxXS5wcmV2aW91c1NpYmxpbmcgPSBuZXdUcmVlTm9kZVtqXTsKICAgICAgICBpZiAobmV3VHJlZU5vZGVbal0uaW5kZXggIT0gbmV3VHJlZU5vZGVbaiArIDFdLmluZGV4IC0gMSkgewogICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJzaWJsaW5nIGluZGV4IGVycm9yIik7CiAgICAgICAgfQogICAgICB9CiAgICAgIGlmICh0aGlzLmhhYXJJbmRleE9ianNbbG9zZWRSYW5nZVtpXVswXV0pIHsKICAgICAgICB0aGlzLmhhYXJJbmRleE9ianNbbG9zZWRSYW5nZVtpXVswXV0uYWRkTG9hZGVkRGF0YVJhbmdlKG5ld1RyZWVOb2RlWzBdLCBbbmV3VHJlZU5vZGVbMF0uaW5kZXgsIG5ld1RyZWVOb2RlW25ld1RyZWVOb2RlLmxlbmd0aCAtIDFdLmluZGV4XSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5oYWFySW5kZXhPYmpzW2xvc2VkUmFuZ2VbaV1bMF1dID0gbmV3IEhhYXJJbmRleE9iaihsb3NlZFJhbmdlW2ldWzBdLCBmYWxzZSk7CiAgICAgICAgdGhpcy5oYWFySW5kZXhPYmpzW2xvc2VkUmFuZ2VbaV1bMF1dLmFkZExvYWRlZERhdGFSYW5nZShuZXdUcmVlTm9kZVswXSwgW25ld1RyZWVOb2RlWzBdLmluZGV4LCBuZXdUcmVlTm9kZVtuZXdUcmVlTm9kZS5sZW5ndGggLSAxXS5pbmRleF0pOwogICAgICB9CiAgICB9CiAgfQogIGFzeW5jIGxvYWREYXRhRm9yUmFuZ2VMZXZlbChsb3NlZFJhbmdlKSB7CiAgICBpZiAobG9zZWRSYW5nZS5sZW5ndGggPD0gMCkgewogICAgICByZXR1cm47CiAgICB9CiAgICAvL2F3YWl0IHRoaXMuYmF0Y2hMb2FkRGF0YUZvclJhbmdlTGV2ZWwobG9zZWRSYW5nZSkKICAgIGZvciAobGV0IGkgPSBsb3NlZFJhbmdlLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7CiAgICAgIGNvbnN0IGxldmVsUmFuZ2UgPSBsb3NlZFJhbmdlW2ldOwogICAgICBjb25zdCBkaWZWYWwgPSBhd2FpdCB0aGlzLmxvYWREaWYobG9zZWRSYW5nZVtpXVswXSAtIDEsIE1hdGguZmxvb3IobG9zZWRSYW5nZVtpXVsxXSAvIDIpLCBNYXRoLmZsb29yKGxvc2VkUmFuZ2VbaV1bMl0gLyAyKSk7CiAgICAgIGNvbnN0IHN0YXJ0Tm9kZSA9IHRoaXMuaGFhckluZGV4T2Jqc1tsb3NlZFJhbmdlW2ldWzBdIC0gMV0uZ2V0VHJlZU5vZGVTdGFydEluZGV4KE1hdGguZmxvb3IobG9zZWRSYW5nZVtpXVsxXSAvIDIpKTsKICAgICAgbGV0IHAgPSBzdGFydE5vZGU7CiAgICAgIGNvbnN0IG5ld1RyZWVOb2RlID0gW107CiAgICAgIGxldCBjb3VudCA9IDA7CiAgICAgIGZvciAobGV0IGogPSBNYXRoLmZsb29yKGxvc2VkUmFuZ2VbaV1bMV0gLyAyKTsgaiA8PSBNYXRoLmZsb29yKGxvc2VkUmFuZ2VbaV1bMl0gLyAyKTsgaisrKSB7CiAgICAgICAgdmFyIF9wMzsKICAgICAgICBpZiAoKChfcDMgPSBwKSA9PT0gbnVsbCB8fCBfcDMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9wMy5pbmRleCkgPT09IGopIHsKICAgICAgICAgIC8vQHRzLWlnbm9yZQogICAgICAgICAgcC5kaWZmZXJlbmNlID0gZGlmVmFsW2NvdW50XS5kaWY7CiAgICAgICAgICBjb25zdCBhID0gKDIgKiBwLnZhbHVlICsgZGlmVmFsW2NvdW50XS5kaWYpIC8gMjsKICAgICAgICAgIGNvbnN0IGIgPSAoMiAqIHAudmFsdWUgLSBkaWZWYWxbY291bnRdLmRpZikgLyAyOwogICAgICAgICAgY29uc3QgZmlyc3ROb2RlID0gbmV3IEhhYXJUcmVlKHAsIHRydWUsIHAuaW5kZXgsIGEpOwogICAgICAgICAgY29uc3Qgc2Vjb25kTm9kZSA9IG5ldyBIYWFyVHJlZShwLCBmYWxzZSwgcC5pbmRleCwgYik7CiAgICAgICAgICBuZXdUcmVlTm9kZS5wdXNoKGZpcnN0Tm9kZSk7CiAgICAgICAgICBuZXdUcmVlTm9kZS5wdXNoKHNlY29uZE5vZGUpOwogICAgICAgICAgcCA9IHAubmV4dFNpYmxpbmc7CiAgICAgICAgICBpZiAocCA9PT0gbnVsbCkgewogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KICAgICAgICAgIGNvdW50Kys7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHZhciBfcDQ7CiAgICAgICAgICBjb25zb2xlLmxvZyhsb3NlZFJhbmdlW2ldWzBdIC0gMSwgTWF0aC5mbG9vcihsb3NlZFJhbmdlW2ldWzFdIC8gMikpOwogICAgICAgICAgY29uc29sZS5sb2coImxvc2UgcmFuZ2U6IiwgbG9zZWRSYW5nZSwgcCwgKF9wNCA9IHApID09PSBudWxsIHx8IF9wNCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3A0LmluZGV4LCBqKTsKICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuaGFhckluZGV4T2Jqcyk7CiAgICAgICAgICBkZWJ1Z2dlcjsKICAgICAgICAgIHRocm93IG5ldyBFcnJvcigiZGlmIG5vdCBtYXRjaCBub2RlIik7CiAgICAgICAgfQogICAgICB9CiAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgbmV3VHJlZU5vZGUubGVuZ3RoIC0gMTsgaisrKSB7CiAgICAgICAgbmV3VHJlZU5vZGVbal0ubmV4dFNpYmxpbmcgPSBuZXdUcmVlTm9kZVtqICsgMV07CiAgICAgICAgaWYgKG5ld1RyZWVOb2RlW2pdLmluZGV4ICE9IG5ld1RyZWVOb2RlW2ogKyAxXS5pbmRleCAtIDEpIHsKICAgICAgICAgIHRocm93IG5ldyBFcnJvcigic2libGluZyBpbmRleCBlcnJvciIpOwogICAgICAgIH0KICAgICAgICBuZXdUcmVlTm9kZVtqICsgMV0ucHJldmlvdXNTaWJsaW5nID0gbmV3VHJlZU5vZGVbal07CiAgICAgIH0KICAgICAgaWYgKHRoaXMuaGFhckluZGV4T2Jqc1tsb3NlZFJhbmdlW2ldWzBdXSkgewogICAgICAgIHRoaXMuaGFhckluZGV4T2Jqc1tsb3NlZFJhbmdlW2ldWzBdXS5hZGRMb2FkZWREYXRhUmFuZ2UobmV3VHJlZU5vZGVbMF0sIFtuZXdUcmVlTm9kZVswXS5pbmRleCwgbmV3VHJlZU5vZGVbbmV3VHJlZU5vZGUubGVuZ3RoIC0gMV0uaW5kZXhdKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmhhYXJJbmRleE9ianNbbG9zZWRSYW5nZVtpXVswXV0gPSBuZXcgSGFhckluZGV4T2JqKGxvc2VkUmFuZ2VbaV1bMF0sIGZhbHNlKTsKICAgICAgICB0aGlzLmhhYXJJbmRleE9ianNbbG9zZWRSYW5nZVtpXVswXV0uYWRkTG9hZGVkRGF0YVJhbmdlKG5ld1RyZWVOb2RlWzBdLCBbbmV3VHJlZU5vZGVbMF0uaW5kZXgsIG5ld1RyZWVOb2RlW25ld1RyZWVOb2RlLmxlbmd0aCAtIDFdLmluZGV4XSk7CiAgICAgIH0KICAgIH0KICB9CiAgYXN5bmMgYmF0Y2hMb2FkRGlmKGxvc2VkRGF0YUluZm8pIHsKICAgIGlmIChsb3NlZERhdGFJbmZvLmxlbmd0aCA9PT0gMCkgewogICAgICByZXR1cm4gW107CiAgICB9CiAgICBjb25zdCB7CiAgICAgIGRhdGEKICAgIH0gPSBhd2FpdCBheGlvcy5nZXQoYHBvc3RncmVzL2xpbmVfY2hhcnQvYmF0Y2hMZXZlbERhdGFQcm9ncmVzc2l2ZVdhdmVsZXQ/dGFibGVfbmFtZT0ke3N0b3JlLnN0YXRlLmNvbnRyb2xQYXJhbXMuY3VycmVudFRhYmxlfSZsb3NlZERhdGFJbmZvW109JHtsb3NlZERhdGFJbmZvfWApOwogICAgY29uc3QgcmVzdWx0ID0gZGF0YS5kYXRhOwogICAgY29uc3QgcmVzdWx0QXJyYXkgPSBbXTsKICAgIGlmIChyZXN1bHQgJiYgcmVzdWx0WzBdICYmIHJlc3VsdFswXS5sZW5ndGggPiAwKSB7CiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcmVzdWx0WzBdLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgcmVzdWx0QXJyYXkucHVzaCh7CiAgICAgICAgICBsOiB0aGlzLm1heExldmVsIC0gcmVzdWx0WzBdW2ldLAogICAgICAgICAgaTogcmVzdWx0WzFdW2ldLAogICAgICAgICAgZGlmOiBbcmVzdWx0WzJdW2ldLCByZXN1bHRbM11baV0sIHJlc3VsdFs0XVtpXSwgcmVzdWx0WzVdW2ldXQogICAgICAgIH0pOwogICAgICB9CiAgICB9CiAgICByZXR1cm4gcmVzdWx0QXJyYXk7CiAgfQogIGFzeW5jIGJhdGNoTG9hZERpZldpZHRoUG9zdChsb3NlZERhdGFJbmZvKSB7CiAgICBpZiAobG9zZWREYXRhSW5mby5sZW5ndGggPT09IDApIHsKICAgICAgcmV0dXJuIFtdOwogICAgfQogICAgY29uc3QgewogICAgICBkYXRhCiAgICB9ID0gYXdhaXQgYXhpb3MucG9zdChgcG9zdGdyZXMvbGluZV9jaGFydC9iYXRjaExldmVsRGF0YVByb2dyZXNzaXZlV2F2ZWxldGAsIHsKICAgICAgdGFibGVfbmFtZTogc3RvcmUuc3RhdGUuY29udHJvbFBhcmFtcy5jdXJyZW50VGFibGUsCiAgICAgIGxvc2VkRGF0YUluZm86IEpTT04uc3RyaW5naWZ5KHsKICAgICAgICBkYXRhOiBsb3NlZERhdGFJbmZvCiAgICAgIH0pCiAgICB9KTsKICAgIGNvbnN0IHJlc3VsdCA9IGRhdGEuZGF0YTsKICAgIGNvbnN0IHJlc3VsdEFycmF5ID0gW107CiAgICBpZiAocmVzdWx0ICYmIHJlc3VsdFswXSAmJiByZXN1bHRbMF0ubGVuZ3RoID4gMCkgewogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJlc3VsdFswXS5sZW5ndGg7IGkrKykgewogICAgICAgIHJlc3VsdEFycmF5LnB1c2goewogICAgICAgICAgbDogdGhpcy5tYXhMZXZlbCAtIHJlc3VsdFswXVtpXSwKICAgICAgICAgIGk6IHJlc3VsdFsxXVtpXSwKICAgICAgICAgIGRpZjogcmVzdWx0WzJdW2ldCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0KICAgIHJldHVybiByZXN1bHRBcnJheTsKICB9CiAgYXN5bmMgbG9hZERpZihsZXZlbCwgc3RhcnQsIGVuZCkgewogICAgLy9AdHMtaWdub3JlCiAgICBjb25zdCB7CiAgICAgIGRhdGEKICAgIH0gPSBhd2FpdCBheGlvcy5nZXQoYHBvc3RncmVzL2xpbmVfY2hhcnQvdHJlbmRRdWVyeVByb2dyZXNzaXZlV2F2ZWxldD90YWJsZV9uYW1lPSR7c3RvcmUuc3RhdGUuY29udHJvbFBhcmFtcy5jdXJyZW50VGFibGV9JmN1cnJlbnRfbGV2ZWw9JHtsZXZlbH0mc3RhcnRfdGltZT0ke3N0YXJ0fSZlbmRfdGltZT0ke2VuZH1gKTsKICAgIHJldHVybiBkYXRhOwogIH0KICAvLyB0aW1lQm94UXVlcnkoc3RhcnQ6IG51bWJlciwgZW5kOiBudW1iZXIsIG1pbjogbnVtYmVyLCBtYXg6IG51bWJlciwgY3VycmVudF9sZXZlbDogbnVtYmVyLCB2aXNSYW5nZTogQXJyYXk8bnVtYmVyPik6IGJvb2xlYW4gewogIC8vICAgICBjb25zdCBjaGVja1JhbmdlID0gW3Zpc1JhbmdlWzBdICsgc3RhcnQsIHZpc1JhbmdlWzBdICsgZW5kXTsKICAvLyAgICAgbGV0IHN0YXJ0TGV2ZWwgPSBjdXJyZW50X2xldmVsOwogIC8vICAgICBmb3IgKGxldCBpID0gY3VycmVudF9sZXZlbCAtIDE7IGkgPj0gMDsgaS0tKSB7CiAgLy8gICAgICAgICBpZiAoTWF0aC5mbG9vcihjaGVja1JhbmdlWzBdIC8gKDIgKiogKGN1cnJlbnRfbGV2ZWwgLSBpKSkpID09PSBNYXRoLmZsb29yKGNoZWNrUmFuZ2VbMV0gLyAoMiAqKiAoY3VycmVudF9sZXZlbCAtIGkpKSkpIHsKICAvLyAgICAgICAgICAgICBzdGFydExldmVsID0gaTsKICAvLyAgICAgICAgIH0KICAvLyAgICAgfQogIC8vICAgICBmb3IgKGxldCBpID0gc3RhcnRMZXZlbDsgaSA8IGN1cnJlbnRfbGV2ZWw7IGkrKykgewogIC8vICAgICAgICAgY29uc3QgcmVzdWx0ID0gdGhpcy5oYWFySW5kZXhPYmpzW2ldLnRpbWVCb3hRdWVyeShbTWF0aC5mbG9vcihjaGVja1JhbmdlWzBdIC8gKDIgKiogKGN1cnJlbnRfbGV2ZWwgLSBpKSkpLCBNYXRoLmZsb29yKGNoZWNrUmFuZ2VbMV0gLyAoMiAqKiAoY3VycmVudF9sZXZlbCAtIGkpKSldLCBbbWluLCBtYXhdKTsKICAvLyAgICAgICAgIGlmIChyZXN1bHQgPT09IDMpIHsKICAvLyAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgLy8gICAgICAgICB9IGVsc2UgaWYgKHJlc3VsdCA9PT0gMSkgewogIC8vICAgICAgICAgICAgIHJldHVybiB0cnVlOwogIC8vICAgICAgICAgfQogIC8vICAgICB9CiAgLy8gICAgIHJldHVybiBmYWxzZQogIC8vIH0KICBjaGVja0xvYWRlZERhdGFJblNpbmdhbExldmVsKGxvc2VkRGF0YUluZm8pIHsKICAgIGNvbnN0IGN1cnJlbnRMZXZlbExvc2VkUmFuZ2UgPSBbXTsKICAgIGZvciAobGV0IGogPSAwOyBqIDwgbG9zZWREYXRhSW5mby5sZW5ndGg7IGorKykgewogICAgICBjb25zdCBsZXZlbCA9IGxvc2VkRGF0YUluZm9bal1bMF07CiAgICAgIGNvbnN0IHN0YXJ0ID0gbG9zZWREYXRhSW5mb1tqXVsxXTsKICAgICAgY29uc3QgZW5kID0gbG9zZWREYXRhSW5mb1tqXVsyXTsKICAgICAgaWYgKHRoaXMuaGFhckluZGV4T2Jqc1tsZXZlbF0pIHsKICAgICAgICBjb25zdCBoYXNEYXRhID0gdGhpcy5oYWFySW5kZXhPYmpzW2xldmVsXS5oYXNEYXRhRm9yUmFuZ2Uoc3RhcnQsIGVuZCk7CiAgICAgICAgaWYgKCFoYXNEYXRhLmhhcykgewogICAgICAgICAgY29uc3QgbG9zZWRSYW5nZSA9IGhhc0RhdGEucmFuZ2U7CiAgICAgICAgICBsb3NlZFJhbmdlLmZvckVhY2gocmFuZ2UgPT4gewogICAgICAgICAgICByYW5nZS51bnNoaWZ0KGxldmVsKTsKICAgICAgICAgICAgY3VycmVudExldmVsTG9zZWRSYW5nZS5wdXNoKHJhbmdlKTsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBjdXJyZW50TGV2ZWxMb3NlZFJhbmdlLnB1c2goW2xldmVsLCBzdGFydCwgZW5kXSk7CiAgICAgIH0KICAgIH0KICAgIHJldHVybiBjdXJyZW50TGV2ZWxMb3NlZFJhbmdlOwogIH0KICBjb3VudE5vZGVOdW0oKSB7CiAgICBsZXQgc3VtID0gMDsKICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5oYWFySW5kZXhPYmpzLmxlbmd0aDsgaSsrKSB7CiAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgdGhpcy5oYWFySW5kZXhPYmpzW2ldLmxvYWRlZERhdGFSYW5nZS5sZW5ndGg7IGorKykgewogICAgICAgIHN1bSArPSB0aGlzLmhhYXJJbmRleE9ianNbaV0ubG9hZGVkRGF0YVJhbmdlW2pdWzFdIC0gdGhpcy5oYWFySW5kZXhPYmpzW2ldLmxvYWRlZERhdGFSYW5nZVtqXVswXSArIDE7CiAgICAgIH0KICAgIH0KICAgIGNvbnNvbGUubG9nKCJhbGxOb2RlTnVtIiwgc3VtKTsKICB9Cn0="},{"version":3,"names":["HaarIndexObj","axios","store","HaarTree","HaarDataManager","constructor","haarIndexObjs","dataName","maxLevel","state","controlParams","tableMaxLevel","realDataRowNum","getDataMockServer","info","internalLevel","level","outterLevel","nextLevel","Error","width","Math","ceil","log2","offset","end","start","focusPoint","nextStart","nextEnd","data","getData","noRet","lastFullLevel","i","floor","isFull","losedDataInfo","checkLoadedDataInSingalLevel","batchLoadDataForRangeLevel","l","extraDataLevel","curExtraLevel","fakeRowNum","lastIndex","getDataByIndex","getDataV1","hasData","hasDataForRange","has","losedRange","range","length","losedDataOtherLevel","levelHasData","push","loadDataForRangeLevel","forEach","unshift","getLoadedData","batchLoadDataForRangeWithCheck","checkRes","difVals","batchLoadDifWidthPost","count","levelRange","startNode","getTreeNodeStartIndex","p","newTreeNode","j","_p","index","difference","dif","a","value","b","firstNode","secondNode","nextSibling","_p2","console","log","previousSibling","addLoadedDataRange","difVal","loadDif","_p3","_p4","batchLoadDif","get","currentTable","result","resultArray","post","table_name","JSON","stringify","currentLevelLosedRange","countNodeNum","sum","loadedDataRange"],"sources":["/ai/didi01/zhanglingyu/om3-extend/om3-client/node_modules/eslint-loader/index.js??ref--14-0!/ai/didi01/zhanglingyu/om3-extend/om3-client/src/model/haar-data-manager.ts"],"sourcesContent":["import HaarIndexObj from \"./haar-index-obj\";\nimport axios from \"axios\";\nimport TrendTree from \"@/helper/tend-query-tree\";\nimport store from \"@/store\";\nimport * as d3 from 'd3';\nimport { canCut, checkSetType, computeLosedDataRange, computeTimeSE } from \"@/helper/util\";\nimport { ElNotification } from 'element-plus'\n// import { NoUniformColObj } from \"./non-uniform-col-obj\";\nimport HaarTree from \"@/helper/haar-tree\";\n\nexport default class HaarDataManager {\n    haarIndexObjs: Array<HaarIndexObj>\n    maxLevel: number\n    realDataRowNum: number\n    dataName: string\n    \n    constructor(haarIndexObjs: Array<HaarIndexObj>, dataName: string,maxLevel?:number) {\n        this.haarIndexObjs = haarIndexObjs;\n        this.maxLevel = maxLevel?maxLevel:store.state.controlParams.tableMaxLevel;\n        this.realDataRowNum = 7193200;\n        this.dataName = dataName;\n        \n    }\n\n    async getDataMockServer(info: { level: number, start: number, end: number, offset: number, width: number }) {\n        const internalLevel = this.maxLevel - info.level;\n        const outterLevel = info.level;\n        const nextLevel = internalLevel;\n        if (nextLevel < 1) {\n            throw new Error(\"level out of range\")\n        }\n        const width = 2 ** Math.ceil(Math.log2(info.width));\n        let offset = info.offset\n\n        let end = info.end;\n        let start = info.start;\n        let focusPoint = start + offset;\n        let nextStart = focusPoint - width / 4;\n        let nextEnd = focusPoint + width / 4;\n\n\n        if (nextStart <= start) {\n            nextStart = start;\n            nextEnd = start + width / 2 - 1;\n        }\n        if (nextEnd >= end) {\n            nextEnd = end;\n            nextStart = end - width / 2 + 1;\n        }\n        const data = await this.getData(outterLevel + 1, nextStart * 2, nextStart * 2 + width - 1);\n        return [[offset, 2 * nextStart], data];\n    }\n    async getData(level: number, start: number, end: number, noRet?: boolean) {\n        if (level > this.maxLevel) {\n            return []\n        }\n        let lastFullLevel = 2;\n        let nextStart = start;\n        let nextEnd = end;\n        for (let i = level - 1; i > 2; i--) {\n            nextStart = Math.floor(nextStart / 2);\n            nextEnd = Math.floor(nextEnd / 2);\n            if (this.haarIndexObjs[i] && this.haarIndexObjs[i].isFull) {\n                lastFullLevel = i;\n                break;\n            }\n        }\n        for (let i = lastFullLevel + 1; i <= level; i++) {\n            nextStart = nextStart * 2;\n            nextEnd = nextEnd * 2 + 1;\n            const losedDataInfo = this.checkLoadedDataInSingalLevel([[i, nextStart, nextEnd]]);\n            await this.batchLoadDataForRangeLevel(losedDataInfo);\n        }\n        if (this.haarIndexObjs[level]) {\n            if (noRet) {\n                return {data:[],start:0,end:0,l:0}\n            } else {\n                if (this.dataName === 'sensor8') {\n                    const extraDataLevel = Math.ceil(Math.log2(2 ** this.maxLevel - this.realDataRowNum));\n                    if (level >= this.maxLevel - extraDataLevel) {\n                        const curExtraLevel = level - (this.maxLevel - extraDataLevel);\n                        const fakeRowNum = 2 ** curExtraLevel;\n                        if (end >= 2 ** level - fakeRowNum) {\n                            end = 2 ** level - fakeRowNum - 1;\n                        }\n                    }\n                    let lastIndex = this.realDataRowNum - 1;\n                    for (let i = this.maxLevel; i >= level; i--) {\n                        lastIndex = Math.floor(lastIndex / 2);\n                    }\n                    if (end < start) {\n                        return [];\n                    }\n                    return this.haarIndexObjs[level].getDataByIndex(start, end);\n                } else {\n                    return this.haarIndexObjs[level].getDataByIndex(start, end);\n                }\n            }\n        } else {\n            return {data:[],start:0,end:0,l:0}\n            //throw new Error(\"cannot get data from data manager\");\n        }\n\n    }\n    async getDataV1(level: number, start: number, end: number, noRet?: boolean) {\n        if (level > this.maxLevel) {\n            return [];\n        }\n        if (this.haarIndexObjs[level]) {\n\n            const hasData = this.haarIndexObjs[level].hasDataForRange(start, end);\n            if (hasData.has) {\n                return this.haarIndexObjs[level].getDataByIndex(start, end);\n            } else {\n                const losedRange = hasData.range;\n\n                for (let i = 0; i < losedRange.length; i++) {\n                    let l = level - 1;\n                    const losedDataOtherLevel = [];\n                    for (; l >= 0; l--) {\n                        if (this.haarIndexObjs[l].isFull) {\n                            break;\n                        }\n                        const levelHasData = this.haarIndexObjs[l].hasDataForRange(Math.floor(losedRange[i][0] / (2 ** (level - l))), Math.floor(losedRange[i][1] / (2 ** (level - l))));\n                        if (levelHasData.has) {\n                            break;\n                        }\n                        losedDataOtherLevel.push([l, Math.floor(losedRange[i][0] / (2 ** (level - l))), Math.floor(losedRange[i][1] / (2 ** (level - l)))]);\n                    }\n                    await this.loadDataForRangeLevel(losedDataOtherLevel);\n                }\n                losedRange.forEach(range => {\n                    range.unshift(level);\n                });\n                await this.loadDataForRangeLevel(losedRange);\n            }\n        } else {\n            let l = level - 1;\n            const losedDataOtherLevel = [];\n            for (; l >= 0; l--) {\n                if (this.haarIndexObjs[l] && this.haarIndexObjs[l].isFull) {\n                    break;\n                }\n                if (this.haarIndexObjs[l]) {\n                    const levelHasData = this.haarIndexObjs[l].hasDataForRange(Math.floor(start / (2 ** (level - l))), Math.floor(end / (2 ** (level - l))));\n                    if (levelHasData.has) {\n                        break;\n                    }\n                }\n                losedDataOtherLevel.push([l, Math.floor(start / (2 ** (level - l))), Math.floor(end / (2 ** (level - l)))]);\n            }\n            losedDataOtherLevel.unshift([level, start, end]);\n            await this.loadDataForRangeLevel(losedDataOtherLevel);\n        }\n        if (this.haarIndexObjs[level]) {\n            if (noRet) {\n                return []\n            } else {\n                if (this.dataName === 'sensor8') {\n                    const extraDataLevel = Math.ceil(Math.log2(2 ** this.maxLevel - this.realDataRowNum));\n                    if (level >= this.maxLevel - extraDataLevel) {\n                        const curExtraLevel = level - (this.maxLevel - extraDataLevel);\n                        const fakeRowNum = 2 ** curExtraLevel;\n                        if (end >= 2 ** level - fakeRowNum) {\n                            end = 2 ** level - fakeRowNum - 1;\n                        }\n                    }\n                    let lastIndex = this.realDataRowNum - 1;\n                    for (let i = this.maxLevel; i >= level; i--) {\n                        lastIndex = Math.floor(lastIndex / 2);\n                    }\n                    if (end < start) {\n                        return [];\n                    }\n                    return this.haarIndexObjs[level].getDataByIndex(start, end);\n                } else {\n                    return this.haarIndexObjs[level].getDataByIndex(start, end);\n                }\n            }\n        } else {\n            throw new Error(\"cannot get data from data manager\");\n        }\n    }\n    getLoadedData(level: number, start: number, end: number) {\n        if (this.haarIndexObjs[level]) {\n            if (this.dataName === 'sensor8') {\n                const extraDataLevel = Math.ceil(Math.log2(2 ** this.maxLevel - this.realDataRowNum));\n                if (level >= this.maxLevel - extraDataLevel) {\n                    const curExtraLevel = level - (this.maxLevel - extraDataLevel);\n                    const fakeRowNum = 2 ** curExtraLevel;\n                    if (end >= 2 ** level - fakeRowNum) {\n                        end = 2 ** level - fakeRowNum - 1;\n                    }\n                }\n                if (end < start) {\n                    return [];\n                }\n                return this.haarIndexObjs[level].getDataByIndex(start, end);\n            } else {\n                return this.haarIndexObjs[level].getDataByIndex(start, end);\n            }\n\n        } else {\n            throw new Error(\"cannot get data from data manager\");\n        }\n    }\n\n    async batchLoadDataForRangeWithCheck(losedRange: Array<Array<number>>) {\n        for (let i = 0; i < losedRange.length; i++) {\n            const checkRes = this.checkLoadedDataInSingalLevel([[losedRange[i][0] - 1, Math.floor(losedRange[i][1] / 2), Math.floor(losedRange[i][2] / 2)]]);\n            if (checkRes.length !== 0) {\n                await this.getData(losedRange[i][0] - 1, Math.floor(losedRange[i][1] / 2), Math.floor(losedRange[i][2] / 2));\n            }\n        }\n        await this.batchLoadDataForRangeLevel(losedRange);\n        return\n    }\n\n    async batchLoadDataForRangeLevel(losedRange: Array<Array<number>>) {\n        const difVals = await this.batchLoadDifWidthPost(losedRange);\n        let count = 0;\n        for (let i = 0; i < losedRange.length; i++) {\n            const levelRange = losedRange[i];\n\n            const startNode = this.haarIndexObjs[losedRange[i][0] - 1].getTreeNodeStartIndex(Math.floor(losedRange[i][1] / 2));\n            let p = startNode;\n            const newTreeNode = [];\n            for (let j = Math.floor(losedRange[i][1] / 2); j <= Math.floor(losedRange[i][2] / 2); j++) {\n                if (p?.index === j && j === difVals[count].i && p.level === difVals[count].l) {\n                   \n                    p.difference = difVals[count].dif;\n                    const a=(2*p.value+difVals[count].dif)/2;\n                    const b=(2*p.value-difVals[count].dif)/2;\n                    const firstNode = new HaarTree(p, true, p.index, a);\n                    const secondNode = new HaarTree(p, false, p.index, b);\n                    newTreeNode.push(firstNode);\n                    newTreeNode.push(secondNode);\n                    p = p.nextSibling;\n                    count++;\n                    if (p === null || count >= difVals.length) {\n                        break;\n                    }\n\n                } else {\n                    console.log(losedRange[i][0] - 1, Math.floor(losedRange[i][1] / 2))\n                    console.log(\"lose range:\", losedRange, p, p?.index, j);\n                    console.log(this.haarIndexObjs);\n                    debugger\n                    throw new Error(\"dif not match node\");\n                }\n            }\n            for (let j = 0; j < newTreeNode.length - 1; j++) {\n                newTreeNode[j].nextSibling = newTreeNode[j + 1];\n                newTreeNode[j + 1].previousSibling = newTreeNode[j];\n                if (newTreeNode[j].index != newTreeNode[j + 1].index - 1) {\n                    throw new Error(\"sibling index error\");\n                }\n            }\n            if (this.haarIndexObjs[losedRange[i][0]]) {\n                this.haarIndexObjs[losedRange[i][0]].addLoadedDataRange(newTreeNode[0], [newTreeNode[0].index, newTreeNode[newTreeNode.length - 1].index]);\n            } else {\n                this.haarIndexObjs[losedRange[i][0]] = new HaarIndexObj(losedRange[i][0], false);\n                this.haarIndexObjs[losedRange[i][0]].addLoadedDataRange(newTreeNode[0], [newTreeNode[0].index, newTreeNode[newTreeNode.length - 1].index]);\n            }\n        }\n    }\n\n\n\n    async loadDataForRangeLevel(losedRange: Array<Array<number>>) {\n        if (losedRange.length <= 0) {\n            return\n        }\n        //await this.batchLoadDataForRangeLevel(losedRange)\n        for (let i = losedRange.length - 1; i >= 0; i--) {\n            const levelRange = losedRange[i];\n            const difVal = await this.loadDif(losedRange[i][0] - 1, Math.floor(losedRange[i][1] / 2), Math.floor(losedRange[i][2] / 2));\n\n            const startNode = this.haarIndexObjs[losedRange[i][0] - 1].getTreeNodeStartIndex(Math.floor(losedRange[i][1] / 2));\n            let p = startNode;\n            const newTreeNode = [];\n            let count = 0;\n            for (let j = Math.floor(losedRange[i][1] / 2); j <= Math.floor(losedRange[i][2] / 2); j++) {\n                if (p?.index === j) {\n                    //@ts-ignore\n\n\n                    p.difference = difVal[count].dif;\n                    const a=(2*p.value+difVal[count].dif)/2;\n                    const b=(2*p.value-difVal[count].dif)/2;\n                    const firstNode = new HaarTree(p, true, p.index, a);\n                    const secondNode = new HaarTree(p, false, p.index, b);\n                    newTreeNode.push(firstNode);\n                    newTreeNode.push(secondNode);\n                    p = p.nextSibling;\n                    if (p === null) {\n                        break;\n                    }\n                    count++;\n                } else {\n                    console.log(losedRange[i][0] - 1, Math.floor(losedRange[i][1] / 2))\n                    console.log(\"lose range:\", losedRange, p, p?.index, j);\n                    console.log(this.haarIndexObjs);\n                    debugger\n                    throw new Error(\"dif not match node\");\n                }\n            }\n            for (let j = 0; j < newTreeNode.length - 1; j++) {\n                newTreeNode[j].nextSibling = newTreeNode[j + 1];\n                if (newTreeNode[j].index != newTreeNode[j + 1].index - 1) {\n                    throw new Error(\"sibling index error\");\n                }\n                newTreeNode[j + 1].previousSibling = newTreeNode[j];            }\n            if (this.haarIndexObjs[losedRange[i][0]]) {\n                this.haarIndexObjs[losedRange[i][0]].addLoadedDataRange(newTreeNode[0], [newTreeNode[0].index, newTreeNode[newTreeNode.length - 1].index]);\n            } else {\n                this.haarIndexObjs[losedRange[i][0]] = new HaarIndexObj(losedRange[i][0], false);\n                this.haarIndexObjs[losedRange[i][0]].addLoadedDataRange(newTreeNode[0], [newTreeNode[0].index, newTreeNode[newTreeNode.length - 1].index]);\n            }\n        }\n    }\n\n    async batchLoadDif(losedDataInfo: Array<Array<number>>) {\n        if (losedDataInfo.length === 0) {\n            return [];\n        }\n        const { data } = await axios.get(`postgres/line_chart/batchLevelDataProgressiveWavelet?table_name=${store.state.controlParams.currentTable}&losedDataInfo[]=${losedDataInfo}`);\n        const result = data.data;\n        const resultArray = [];\n        if (result && result[0] && result[0].length > 0) {\n            for (let i = 0; i < result[0].length; i++) {\n                resultArray.push({ l: this.maxLevel - result[0][i], i: result[1][i], dif: [result[2][i], result[3][i], result[4][i], result[5][i]] });\n            }\n        }\n\n        return resultArray;\n    }\n    async batchLoadDifWidthPost(losedDataInfo: Array<Array<number>>) {\n        if (losedDataInfo.length === 0) {\n            return [];\n        }\n        const { data } = await axios.post(`postgres/line_chart/batchLevelDataProgressiveWavelet`, {\n            table_name: store.state.controlParams.currentTable,\n            losedDataInfo: JSON.stringify({ data: losedDataInfo }),\n        });\n        const result = data.data;\n        const resultArray = [];\n        if (result && result[0] && result[0].length > 0) {\n            for (let i = 0; i < result[0].length; i++) {\n                resultArray.push({ l: this.maxLevel - result[0][i], i: result[1][i], dif: result[2][i] });\n            }\n        }\n\n        return resultArray;\n    }\n    async loadDif(level: number, start: number, end: number) {\n\n        //@ts-ignore\n        const { data } = await axios.get(`postgres/line_chart/trendQueryProgressiveWavelet?table_name=${store.state.controlParams.currentTable}&current_level=${level}&start_time=${start}&end_time=${end}`);\n        return data;\n    }\n\n   \n\n \n\n    // timeBoxQuery(start: number, end: number, min: number, max: number, current_level: number, visRange: Array<number>): boolean {\n    //     const checkRange = [visRange[0] + start, visRange[0] + end];\n    //     let startLevel = current_level;\n    //     for (let i = current_level - 1; i >= 0; i--) {\n    //         if (Math.floor(checkRange[0] / (2 ** (current_level - i))) === Math.floor(checkRange[1] / (2 ** (current_level - i)))) {\n    //             startLevel = i;\n    //         }\n    //     }\n    //     for (let i = startLevel; i < current_level; i++) {\n    //         const result = this.haarIndexObjs[i].timeBoxQuery([Math.floor(checkRange[0] / (2 ** (current_level - i))), Math.floor(checkRange[1] / (2 ** (current_level - i)))], [min, max]);\n    //         if (result === 3) {\n    //             return false;\n    //         } else if (result === 1) {\n    //             return true;\n    //         }\n    //     }\n    //     return false\n    // }\n    \n   \n\n   \n   \n\n  \n\n   \n\n\n    checkLoadedDataInSingalLevel(losedDataInfo: Array<Array<number>>) {\n        const currentLevelLosedRange = [];\n        for (let j = 0; j < losedDataInfo.length; j++) {\n            const level = losedDataInfo[j][0]\n            const start = losedDataInfo[j][1]\n            const end = losedDataInfo[j][2];\n            if (this.haarIndexObjs[level]) {\n\n                const hasData = this.haarIndexObjs[level].hasDataForRange(start, end);\n                if (!hasData.has) {\n                    const losedRange = hasData.range;\n                    losedRange.forEach(range => {\n                        range.unshift(level);\n                        currentLevelLosedRange.push(range);\n                    });\n                }\n            } else {\n                currentLevelLosedRange.push([level, start, end]);\n            }\n        }\n        return currentLevelLosedRange\n    }\n    countNodeNum(){\n        let sum=0;\n        for(let i=0;i<this.haarIndexObjs.length;i++){\n            for(let j=0;j<this.haarIndexObjs[i].loadedDataRange.length;j++){\n                sum+=this.haarIndexObjs[i].loadedDataRange[j][1]-this.haarIndexObjs[i].loadedDataRange[j][0]+1\n            }\n        }\n        console.log(\"allNodeNum\",sum);\n    }\n\n}"],"mappings":"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","ignoreList":[]}]}