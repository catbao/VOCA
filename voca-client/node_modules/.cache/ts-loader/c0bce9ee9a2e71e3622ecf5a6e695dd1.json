{"remainingRequest":"/Users/apple/Desktop/om3-extend/om3-client/node_modules/babel-loader/lib/index.js!/Users/apple/Desktop/om3-extend/om3-client/node_modules/ts-loader/index.js??ref--15-2!/Users/apple/Desktop/om3-extend/om3-client/node_modules/eslint-loader/index.js??ref--14-0!/Users/apple/Desktop/om3-extend/om3-client/src/model/haar-index-obj.ts","dependencies":[{"path":"/Users/apple/Desktop/om3-extend/om3-client/src/model/haar-index-obj.ts","mtime":1732546288000},{"path":"/Users/apple/Desktop/om3-extend/om3-client/babel.config.js","mtime":1732546288000},{"path":"/Users/apple/Desktop/om3-extend/om3-client/node_modules/cache-loader/dist/cjs.js","mtime":1732627998000},{"path":"/Users/apple/Desktop/om3-extend/om3-client/node_modules/babel-loader/lib/index.js","mtime":1732627998000},{"path":"/Users/apple/Desktop/om3-extend/om3-client/node_modules/ts-loader/index.js","mtime":1732627997000},{"path":"/Users/apple/Desktop/om3-extend/om3-client/node_modules/eslint-loader/index.js","mtime":1732627997000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["computeNeedLoadDataRange","isIntersect","HaarIndexObj","constructor","level","isFull","loadedDataRange","firstNodes","isSelfCheck","addLoadedDataRange","firstNode","range","length","push","loadedDataRangeLen","isMerge","needCheckIndex","i","intersectRes","pos","lastNode","p","nextSibling","index","Math","min","max","minHead","console","log","Error","selfCheck","a","tempIndexs","map","v","reCheckIntersect","getDataByIndex","start","end","data","value","l","hasDataForRange","has","needDataRange","getTreeNodeStartIndex","root","needCheckedNodeIndex","needDeleteNodeIndex","nextCheckNodeIndex","j","splice","idx"],"sources":["/Users/apple/Desktop/om3-extend/om3-client/node_modules/eslint-loader/index.js??ref--14-0!/Users/apple/Desktop/om3-extend/om3-client/src/model/haar-index-obj.ts"],"sourcesContent":["import HaarTree from \"@/helper/haar-tree\"\nimport { checkSetType, computeNeedLoadDataRange, isIntersect } from \"../helper/util\"\nexport default class HaarIndexObj {\n    level: number;\n    isFull: boolean;\n    loadedDataRange: Array<Array<number>>;\n    firstNodes: Array<HaarTree>;\n    isSelfCheck: boolean;\n    constructor(level: number, isFull = false) {\n        this.level = level;\n        this.isFull = isFull;\n        this.loadedDataRange = [];\n        this.firstNodes = [];\n        this.isSelfCheck = false;\n    }\n\n    addLoadedDataRange(firstNode: HaarTree, range: Array<number>) {\n        if (this.loadedDataRange.length === 0) {\n            this.loadedDataRange.push(range);\n            this.firstNodes.push(firstNode);\n            return\n        }\n        const loadedDataRangeLen = this.loadedDataRange.length;\n        let isMerge = false;\n        const needCheckIndex = [];\n        for (let i = 0; i < loadedDataRangeLen; i++) {\n            const intersectRes = isIntersect(this.loadedDataRange[i], range);\n            if (intersectRes.isIntersect) {\n                isMerge = true;\n                if (intersectRes.pos === 'second') {\n                    const lastNode = this.firstNodes[i];\n                    this.firstNodes[i] = firstNode;\n                    let p = firstNode;\n\n                    while (p.nextSibling) {\n                        if (p.nextSibling.index === lastNode.index) {\n                            p.nextSibling = lastNode;\n                            break;\n                        }\n                        p = p.nextSibling;\n                    }\n                } else {\n                    let p = this.firstNodes[i];\n                    while (p.nextSibling) {\n                        if (p.nextSibling.index === firstNode.index) {\n                            p.nextSibling = firstNode;\n                            break;\n                        }\n                        p = p.nextSibling;\n                    }\n                }\n                needCheckIndex.push(i);\n                this.loadedDataRange[i][0] = Math.min(this.loadedDataRange[i][0], range[0]);\n                this.loadedDataRange[i][1] = Math.max(this.loadedDataRange[i][1], range[1]);\n                //break\n            } else {\n                const minHead = Math.min(this.loadedDataRange[i][0], range[0]);\n                if (minHead === this.loadedDataRange[i][0] && (this.loadedDataRange[i][1] + 1 === range[0])) {\n                    isMerge = true;\n                    let p = this.firstNodes[i];\n                    while (p.nextSibling) {\n                        p = p.nextSibling;\n                    }\n                    if (p.index !== firstNode.index - 1) {\n                        console.log(p, firstNode);\n                        debugger\n                        throw new Error(\"index error\")\n                    }\n                    p.nextSibling = firstNode;\n\n                    this.loadedDataRange[i][1] = range[1];\n                    needCheckIndex.push(i);\n                    //break\n                } else if (minHead === range[0] && (range[1] + 1 === this.loadedDataRange[i][0])) {\n                    isMerge = true;\n                    let p = firstNode;\n                    while (p.nextSibling) {\n                        p = p.nextSibling;\n                    }\n                    p.nextSibling = this.firstNodes[i];\n                    this.firstNodes[i] = firstNode;\n                    this.loadedDataRange[i][0] = range[0];\n                    needCheckIndex.push(i);\n                    //break\n                }\n            }\n        }\n        if (this.isSelfCheck) {\n            this.selfCheck()\n        }\n        let a=false;\n        let tempIndexs=[]\n        if(needCheckIndex.length>2){\n          tempIndexs=  needCheckIndex.map(v=>{\n                return v\n            })\n            a=true\n            //debugger\n        }\n        if (needCheckIndex.length > 0) {\n            this.reCheckIntersect(needCheckIndex);\n        }\n        if(a){\n            debugger\n        }\n        if (this.isSelfCheck) {\n            this.selfCheck()\n        }\n        if (!isMerge) {\n            this.loadedDataRange.push(range);\n            this.firstNodes.push(firstNode);\n        }\n        if (this.firstNodes.length === 1 && (this.loadedDataRange[0][1] - this.loadedDataRange[0][0] + 1) === 2 ** this.level) {\n            this.isFull = true;\n        }\n    }\n\n\n    getDataByIndex(start: number, end: number) {\n        const data:Array<number> = [];\n        for (let i = 0; i < this.firstNodes.length; i++) {\n            if (this.loadedDataRange[i][0] <= start && this.loadedDataRange[i][1] >= end) {\n                let p = this.firstNodes[i];\n                while (p) {\n                    if (p.index >= start && p.index <= end) {\n                        data.push(p.value);\n                    }\n                    if (p.index > end) {\n                        break;\n                    }\n                    //@ts-ignore\n                    p = p.nextSibling;\n                }\n            }\n        }\n        return {data,start,end,l:this.level};\n    }\n    hasDataForRange(start: number, end: number) {\n        if (this.isFull) {\n            return {\n                has: true,\n                range: [],\n            }\n        }\n        const needDataRange = computeNeedLoadDataRange([start, end], this.loadedDataRange);\n        if (needDataRange.length === 0) {\n            return {\n                has: true,\n                range: [],\n            }\n        } else {\n            return {\n                has: false,\n                range: needDataRange\n            }\n        }\n    }\n    // fillLevel(){\n    //     const needDataRes=this.hasDataForRange(0,2**this.level);\n    //     if(needDataRes.has){\n    //         return\n    //     }\n\n    // }\n    getTreeNodeStartIndex(start: number) {\n        for (let i = 0; i < this.firstNodes.length; i++) {\n            if (this.loadedDataRange[i][0] <= start && this.loadedDataRange[i][1] >= start) {\n                let root = this.firstNodes[i];\n                while (root) {\n\n                    if (root.index === start) {\n                        return root\n                    }\n                    //@ts-ignore\n                    root = root.nextSibling;\n                }\n            }\n        }\n        return null;\n    }\n\n    reCheckIntersect(needCheckedNodeIndex: Array<number>) {\n        if (needCheckedNodeIndex.length > 2) {\n           // throw new Error(\"check intersect error\");\n           console.log(\"..................................\");\n        }\n        let needDeleteNodeIndex = [];\n        while (needCheckedNodeIndex.length > 0) {\n            let nextCheckNodeIndex = [];\n            for (let i = 0; i < needCheckedNodeIndex.length; i++) {\n                for (let j = 0; j < this.loadedDataRange.length; j++) {\n                    if (needCheckedNodeIndex[i] === j) {\n                        continue;\n                    }\n                    const intersectRes = isIntersect(this.loadedDataRange[j], this.loadedDataRange[needCheckedNodeIndex[i]]);\n                    if (intersectRes.isIntersect) {\n                        if (j === needCheckedNodeIndex[needCheckedNodeIndex.length - 1]) {\n                            needCheckedNodeIndex.splice(needCheckedNodeIndex.length - 1, 1);\n                        }\n                        if (intersectRes.pos === 'second') {\n\n                            needDeleteNodeIndex.push(j);\n\n                            const lastNode = this.firstNodes[j];\n                            const firstNode = this.firstNodes[needCheckedNodeIndex[i]];\n                            let p = firstNode;\n\n                            while (p.nextSibling) {\n                                if (p.nextSibling.index === lastNode.index) {\n                                    p.nextSibling = lastNode;\n                                    break;\n                                }\n                                p = p.nextSibling;\n                            }\n\n                            this.loadedDataRange[needCheckedNodeIndex[i]][0] = Math.min(this.loadedDataRange[j][0], this.loadedDataRange[needCheckedNodeIndex[i]][0]);\n                            this.loadedDataRange[needCheckedNodeIndex[i]][1] = Math.max(this.loadedDataRange[j][1], this.loadedDataRange[needCheckedNodeIndex[i]][1]);\n                            nextCheckNodeIndex.push(needCheckedNodeIndex[i]);\n                        } else {\n\n                            needDeleteNodeIndex.push(needCheckedNodeIndex[i]);\n\n                            let p = this.firstNodes[j];\n                            while (p.nextSibling) {\n                                if (p.nextSibling.index === this.firstNodes[needCheckedNodeIndex[i]].index) {\n                                    p.nextSibling = this.firstNodes[needCheckedNodeIndex[i]];\n                                    break;\n                                }\n                                p = p.nextSibling;\n                            }\n                            this.loadedDataRange[j][0] = Math.min(this.loadedDataRange[j][0], this.loadedDataRange[needCheckedNodeIndex[i]][0]);\n                            this.loadedDataRange[j][1] = Math.max(this.loadedDataRange[j][1], this.loadedDataRange[needCheckedNodeIndex[i]][1]);\n                            nextCheckNodeIndex.push(j);\n                        }\n                    } else {\n\n                        const minHead = Math.min(this.loadedDataRange[j][0], this.loadedDataRange[needCheckedNodeIndex[i]][0]);\n                        if (minHead === this.loadedDataRange[j][0] && (this.loadedDataRange[j][1] + 1 === this.loadedDataRange[needCheckedNodeIndex[i]][0])) {\n                            needDeleteNodeIndex.push(needCheckedNodeIndex[i])\n                            let p = this.firstNodes[j];\n                            while (p.nextSibling) {\n                                p = p.nextSibling;\n                            }\n                            p.nextSibling = this.firstNodes[needCheckedNodeIndex[i]];\n\n                            this.loadedDataRange[j][1] = this.loadedDataRange[needCheckedNodeIndex[i]][1];\n                            nextCheckNodeIndex.push(j)\n                        } else if (minHead === this.loadedDataRange[needCheckedNodeIndex[i]][0] && (this.loadedDataRange[needCheckedNodeIndex[i]][1] + 1 === this.loadedDataRange[j][0])) {\n                            needDeleteNodeIndex.push(j);\n                            let p = this.firstNodes[needCheckedNodeIndex[i]];\n                            while (p.nextSibling) {\n                                p = p.nextSibling;\n                            }\n                            p.nextSibling = this.firstNodes[j];\n\n                            this.loadedDataRange[needCheckedNodeIndex[i]][1] = this.loadedDataRange[j][1];\n                            nextCheckNodeIndex.push(needCheckedNodeIndex[i]);\n                        }\n\n                    }\n\n\n                }\n            }\n            for (let i = 0; i < needDeleteNodeIndex.length; i++) {\n                const idx = needDeleteNodeIndex[i];\n                for (let j = 0; j < nextCheckNodeIndex.length; j++) {\n                    if (nextCheckNodeIndex[j] > idx) {\n                        nextCheckNodeIndex[j]--;\n                    }\n                }\n                this.loadedDataRange.splice(idx, 1);\n                this.firstNodes.splice(idx, 1);\n            }\n            needDeleteNodeIndex = [];\n            needCheckedNodeIndex = nextCheckNodeIndex;\n            nextCheckNodeIndex = [];\n        }\n    }\n\n    selfCheck() {\n        if (this.loadedDataRange.length != this.firstNodes.length) {\n            console.log(this);\n            throw new Error(\"loadedDataRange len not match firtnodes\")\n        }\n        for (let i = 0; i < this.loadedDataRange.length; i++) {\n            if (this.loadedDataRange[i][0] !== this.firstNodes[i].index) {\n                console.log(this);\n                throw new Error(\"range not match node index\");\n            }\n        }\n        for (let i = 0; i < this.loadedDataRange.length; i++) {\n            let p = this.firstNodes[i];\n            let index = this.loadedDataRange[i][0];\n            while (p && index <= this.loadedDataRange[i][1]) {\n                if (p.index === index) {\n                    p = p.nextSibling!;\n                    index++;\n                } else {\n                    console.log(this);\n                    throw new Error(\"range not match node index\");\n                }\n            }\n        }\n    }\n\n    // timeBoxQuery(checkRange: Array<number>, minMax: Array<number>) {\n    //     for (let i = 0; i < this.loadedDataRange.length; i++) {\n    //         if (this.loadedDataRange[i][0] <= checkRange[0] && this.loadedDataRange[i][1] >= checkRange[1]) {\n    //             let p = this.firstNodes[i];\n    //             let hasType3 = false;\n    //             while (p && p.index <= checkRange[1]) {\n    //                 if (p.index >= checkRange[0]) {\n    //                     const type = checkSetType(minMax, [p.yArray[1], p.yArray[2]])\n    //                     if (type === 3) {\n    //                         hasType3 = true;\n    //                     }\n    //                     if (type === 2) {\n    //                         return 2\n    //                     }\n    //                 }\n    //                 p = p.nextSibling as HaarTree;\n    //             }\n    //             if (hasType3) {\n    //                 return 3;\n    //             } else {\n    //                 return 1;\n    //             }\n    //         }\n    //     }\n    //     throw new Error(\"error\");\n    // }\n}"],"mappings":";;AACA,SAAuBA,wBAAwB,EAAEC,WAAW,QAAQ,gBAAgB;AACpF,eAAc,MAAOC,YAAY;EAM7BC,YAAYC,KAAa,EAAEC,MAAM,GAAG,KAAK;IACrC,IAAI,CAACD,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,eAAe,GAAG,EAAE;IACzB,IAAI,CAACC,UAAU,GAAG,EAAE;IACpB,IAAI,CAACC,WAAW,GAAG,KAAK;EAC5B;EAEAC,kBAAkBA,CAACC,SAAmB,EAAEC,KAAoB;IACxD,IAAI,IAAI,CAACL,eAAe,CAACM,MAAM,KAAK,CAAC,EAAE;MACnC,IAAI,CAACN,eAAe,CAACO,IAAI,CAACF,KAAK,CAAC;MAChC,IAAI,CAACJ,UAAU,CAACM,IAAI,CAACH,SAAS,CAAC;MAC/B;;IAEJ,MAAMI,kBAAkB,GAAG,IAAI,CAACR,eAAe,CAACM,MAAM;IACtD,IAAIG,OAAO,GAAG,KAAK;IACnB,MAAMC,cAAc,GAAG,EAAE;IACzB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,kBAAkB,EAAEG,CAAC,EAAE,EAAE;MACzC,MAAMC,YAAY,GAAGjB,WAAW,CAAC,IAAI,CAACK,eAAe,CAACW,CAAC,CAAC,EAAEN,KAAK,CAAC;MAChE,IAAIO,YAAY,CAACjB,WAAW,EAAE;QAC1Bc,OAAO,GAAG,IAAI;QACd,IAAIG,YAAY,CAACC,GAAG,KAAK,QAAQ,EAAE;UAC/B,MAAMC,QAAQ,GAAG,IAAI,CAACb,UAAU,CAACU,CAAC,CAAC;UACnC,IAAI,CAACV,UAAU,CAACU,CAAC,CAAC,GAAGP,SAAS;UAC9B,IAAIW,CAAC,GAAGX,SAAS;UAEjB,OAAOW,CAAC,CAACC,WAAW,EAAE;YAClB,IAAID,CAAC,CAACC,WAAW,CAACC,KAAK,KAAKH,QAAQ,CAACG,KAAK,EAAE;cACxCF,CAAC,CAACC,WAAW,GAAGF,QAAQ;cACxB;;YAEJC,CAAC,GAAGA,CAAC,CAACC,WAAW;;SAExB,MAAM;UACH,IAAID,CAAC,GAAG,IAAI,CAACd,UAAU,CAACU,CAAC,CAAC;UAC1B,OAAOI,CAAC,CAACC,WAAW,EAAE;YAClB,IAAID,CAAC,CAACC,WAAW,CAACC,KAAK,KAAKb,SAAS,CAACa,KAAK,EAAE;cACzCF,CAAC,CAACC,WAAW,GAAGZ,SAAS;cACzB;;YAEJW,CAAC,GAAGA,CAAC,CAACC,WAAW;;;QAGzBN,cAAc,CAACH,IAAI,CAACI,CAAC,CAAC;QACtB,IAAI,CAACX,eAAe,CAACW,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGO,IAAI,CAACC,GAAG,CAAC,IAAI,CAACnB,eAAe,CAACW,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEN,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3E,IAAI,CAACL,eAAe,CAACW,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGO,IAAI,CAACE,GAAG,CAAC,IAAI,CAACpB,eAAe,CAACW,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEN,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3E;OACH,MAAM;QACH,MAAMgB,OAAO,GAAGH,IAAI,CAACC,GAAG,CAAC,IAAI,CAACnB,eAAe,CAACW,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEN,KAAK,CAAC,CAAC,CAAC,CAAC;QAC9D,IAAIgB,OAAO,KAAK,IAAI,CAACrB,eAAe,CAACW,CAAC,CAAC,CAAC,CAAC,CAAC,IAAK,IAAI,CAACX,eAAe,CAACW,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAKN,KAAK,CAAC,CAAC,CAAE,EAAE;UACzFI,OAAO,GAAG,IAAI;UACd,IAAIM,CAAC,GAAG,IAAI,CAACd,UAAU,CAACU,CAAC,CAAC;UAC1B,OAAOI,CAAC,CAACC,WAAW,EAAE;YAClBD,CAAC,GAAGA,CAAC,CAACC,WAAW;;UAErB,IAAID,CAAC,CAACE,KAAK,KAAKb,SAAS,CAACa,KAAK,GAAG,CAAC,EAAE;YACjCK,OAAO,CAACC,GAAG,CAACR,CAAC,EAAEX,SAAS,CAAC;YACzB;YACA,MAAM,IAAIoB,KAAK,CAAC,aAAa,CAAC;;UAElCT,CAAC,CAACC,WAAW,GAAGZ,SAAS;UAEzB,IAAI,CAACJ,eAAe,CAACW,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGN,KAAK,CAAC,CAAC,CAAC;UACrCK,cAAc,CAACH,IAAI,CAACI,CAAC,CAAC;UACtB;SACH,MAAM,IAAIU,OAAO,KAAKhB,KAAK,CAAC,CAAC,CAAC,IAAKA,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAACL,eAAe,CAACW,CAAC,CAAC,CAAC,CAAC,CAAE,EAAE;UAC9EF,OAAO,GAAG,IAAI;UACd,IAAIM,CAAC,GAAGX,SAAS;UACjB,OAAOW,CAAC,CAACC,WAAW,EAAE;YAClBD,CAAC,GAAGA,CAAC,CAACC,WAAW;;UAErBD,CAAC,CAACC,WAAW,GAAG,IAAI,CAACf,UAAU,CAACU,CAAC,CAAC;UAClC,IAAI,CAACV,UAAU,CAACU,CAAC,CAAC,GAAGP,SAAS;UAC9B,IAAI,CAACJ,eAAe,CAACW,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGN,KAAK,CAAC,CAAC,CAAC;UACrCK,cAAc,CAACH,IAAI,CAACI,CAAC,CAAC;UACtB;;;;IAIZ,IAAI,IAAI,CAACT,WAAW,EAAE;MAClB,IAAI,CAACuB,SAAS,EAAE;;IAEpB,IAAIC,CAAC,GAAC,KAAK;IACX,IAAIC,UAAU,GAAC,EAAE;IACjB,IAAGjB,cAAc,CAACJ,MAAM,GAAC,CAAC,EAAC;MACzBqB,UAAU,GAAGjB,cAAc,CAACkB,GAAG,CAACC,CAAC,IAAE;QAC7B,OAAOA,CAAC;MACZ,CAAC,CAAC;MACFH,CAAC,GAAC,IAAI;MACN;;IAEJ,IAAIhB,cAAc,CAACJ,MAAM,GAAG,CAAC,EAAE;MAC3B,IAAI,CAACwB,gBAAgB,CAACpB,cAAc,CAAC;;IAEzC,IAAGgB,CAAC,EAAC;MACD;;IAEJ,IAAI,IAAI,CAACxB,WAAW,EAAE;MAClB,IAAI,CAACuB,SAAS,EAAE;;IAEpB,IAAI,CAAChB,OAAO,EAAE;MACV,IAAI,CAACT,eAAe,CAACO,IAAI,CAACF,KAAK,CAAC;MAChC,IAAI,CAACJ,UAAU,CAACM,IAAI,CAACH,SAAS,CAAC;;IAEnC,IAAI,IAAI,CAACH,UAAU,CAACK,MAAM,KAAK,CAAC,IAAK,IAAI,CAACN,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAACA,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAM,CAAC,IAAI,IAAI,CAACF,KAAK,EAAE;MACnH,IAAI,CAACC,MAAM,GAAG,IAAI;;EAE1B;EAGAgC,cAAcA,CAACC,KAAa,EAAEC,GAAW;IACrC,MAAMC,IAAI,GAAiB,EAAE;IAC7B,KAAK,IAAIvB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACV,UAAU,CAACK,MAAM,EAAEK,CAAC,EAAE,EAAE;MAC7C,IAAI,IAAI,CAACX,eAAe,CAACW,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIqB,KAAK,IAAI,IAAI,CAAChC,eAAe,CAACW,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIsB,GAAG,EAAE;QAC1E,IAAIlB,CAAC,GAAG,IAAI,CAACd,UAAU,CAACU,CAAC,CAAC;QAC1B,OAAOI,CAAC,EAAE;UACN,IAAIA,CAAC,CAACE,KAAK,IAAIe,KAAK,IAAIjB,CAAC,CAACE,KAAK,IAAIgB,GAAG,EAAE;YACpCC,IAAI,CAAC3B,IAAI,CAACQ,CAAC,CAACoB,KAAK,CAAC;;UAEtB,IAAIpB,CAAC,CAACE,KAAK,GAAGgB,GAAG,EAAE;YACf;;UAEJ;UACAlB,CAAC,GAAGA,CAAC,CAACC,WAAW;;;;IAI7B,OAAO;MAACkB,IAAI;MAACF,KAAK;MAACC,GAAG;MAACG,CAAC,EAAC,IAAI,CAACtC;IAAK,CAAC;EACxC;EACAuC,eAAeA,CAACL,KAAa,EAAEC,GAAW;IACtC,IAAI,IAAI,CAAClC,MAAM,EAAE;MACb,OAAO;QACHuC,GAAG,EAAE,IAAI;QACTjC,KAAK,EAAE;OACV;;IAEL,MAAMkC,aAAa,GAAG7C,wBAAwB,CAAC,CAACsC,KAAK,EAAEC,GAAG,CAAC,EAAE,IAAI,CAACjC,eAAe,CAAC;IAClF,IAAIuC,aAAa,CAACjC,MAAM,KAAK,CAAC,EAAE;MAC5B,OAAO;QACHgC,GAAG,EAAE,IAAI;QACTjC,KAAK,EAAE;OACV;KACJ,MAAM;MACH,OAAO;QACHiC,GAAG,EAAE,KAAK;QACVjC,KAAK,EAAEkC;OACV;;EAET;EACA;EACA;EACA;EACA;EACA;EAEA;EACAC,qBAAqBA,CAACR,KAAa;IAC/B,KAAK,IAAIrB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACV,UAAU,CAACK,MAAM,EAAEK,CAAC,EAAE,EAAE;MAC7C,IAAI,IAAI,CAACX,eAAe,CAACW,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIqB,KAAK,IAAI,IAAI,CAAChC,eAAe,CAACW,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIqB,KAAK,EAAE;QAC5E,IAAIS,IAAI,GAAG,IAAI,CAACxC,UAAU,CAACU,CAAC,CAAC;QAC7B,OAAO8B,IAAI,EAAE;UAET,IAAIA,IAAI,CAACxB,KAAK,KAAKe,KAAK,EAAE;YACtB,OAAOS,IAAI;;UAEf;UACAA,IAAI,GAAGA,IAAI,CAACzB,WAAW;;;;IAInC,OAAO,IAAI;EACf;EAEAc,gBAAgBA,CAACY,oBAAmC;IAChD,IAAIA,oBAAoB,CAACpC,MAAM,GAAG,CAAC,EAAE;MAClC;MACAgB,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;;IAEpD,IAAIoB,mBAAmB,GAAG,EAAE;IAC5B,OAAOD,oBAAoB,CAACpC,MAAM,GAAG,CAAC,EAAE;MACpC,IAAIsC,kBAAkB,GAAG,EAAE;MAC3B,KAAK,IAAIjC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+B,oBAAoB,CAACpC,MAAM,EAAEK,CAAC,EAAE,EAAE;QAClD,KAAK,IAAIkC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC7C,eAAe,CAACM,MAAM,EAAEuC,CAAC,EAAE,EAAE;UAClD,IAAIH,oBAAoB,CAAC/B,CAAC,CAAC,KAAKkC,CAAC,EAAE;YAC/B;;UAEJ,MAAMjC,YAAY,GAAGjB,WAAW,CAAC,IAAI,CAACK,eAAe,CAAC6C,CAAC,CAAC,EAAE,IAAI,CAAC7C,eAAe,CAAC0C,oBAAoB,CAAC/B,CAAC,CAAC,CAAC,CAAC;UACxG,IAAIC,YAAY,CAACjB,WAAW,EAAE;YAC1B,IAAIkD,CAAC,KAAKH,oBAAoB,CAACA,oBAAoB,CAACpC,MAAM,GAAG,CAAC,CAAC,EAAE;cAC7DoC,oBAAoB,CAACI,MAAM,CAACJ,oBAAoB,CAACpC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC;;YAEnE,IAAIM,YAAY,CAACC,GAAG,KAAK,QAAQ,EAAE;cAE/B8B,mBAAmB,CAACpC,IAAI,CAACsC,CAAC,CAAC;cAE3B,MAAM/B,QAAQ,GAAG,IAAI,CAACb,UAAU,CAAC4C,CAAC,CAAC;cACnC,MAAMzC,SAAS,GAAG,IAAI,CAACH,UAAU,CAACyC,oBAAoB,CAAC/B,CAAC,CAAC,CAAC;cAC1D,IAAII,CAAC,GAAGX,SAAS;cAEjB,OAAOW,CAAC,CAACC,WAAW,EAAE;gBAClB,IAAID,CAAC,CAACC,WAAW,CAACC,KAAK,KAAKH,QAAQ,CAACG,KAAK,EAAE;kBACxCF,CAAC,CAACC,WAAW,GAAGF,QAAQ;kBACxB;;gBAEJC,CAAC,GAAGA,CAAC,CAACC,WAAW;;cAGrB,IAAI,CAAChB,eAAe,CAAC0C,oBAAoB,CAAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGO,IAAI,CAACC,GAAG,CAAC,IAAI,CAACnB,eAAe,CAAC6C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC7C,eAAe,CAAC0C,oBAAoB,CAAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACzI,IAAI,CAACX,eAAe,CAAC0C,oBAAoB,CAAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGO,IAAI,CAACE,GAAG,CAAC,IAAI,CAACpB,eAAe,CAAC6C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC7C,eAAe,CAAC0C,oBAAoB,CAAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACzIiC,kBAAkB,CAACrC,IAAI,CAACmC,oBAAoB,CAAC/B,CAAC,CAAC,CAAC;aACnD,MAAM;cAEHgC,mBAAmB,CAACpC,IAAI,CAACmC,oBAAoB,CAAC/B,CAAC,CAAC,CAAC;cAEjD,IAAII,CAAC,GAAG,IAAI,CAACd,UAAU,CAAC4C,CAAC,CAAC;cAC1B,OAAO9B,CAAC,CAACC,WAAW,EAAE;gBAClB,IAAID,CAAC,CAACC,WAAW,CAACC,KAAK,KAAK,IAAI,CAAChB,UAAU,CAACyC,oBAAoB,CAAC/B,CAAC,CAAC,CAAC,CAACM,KAAK,EAAE;kBACxEF,CAAC,CAACC,WAAW,GAAG,IAAI,CAACf,UAAU,CAACyC,oBAAoB,CAAC/B,CAAC,CAAC,CAAC;kBACxD;;gBAEJI,CAAC,GAAGA,CAAC,CAACC,WAAW;;cAErB,IAAI,CAAChB,eAAe,CAAC6C,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG3B,IAAI,CAACC,GAAG,CAAC,IAAI,CAACnB,eAAe,CAAC6C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC7C,eAAe,CAAC0C,oBAAoB,CAAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACnH,IAAI,CAACX,eAAe,CAAC6C,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG3B,IAAI,CAACE,GAAG,CAAC,IAAI,CAACpB,eAAe,CAAC6C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC7C,eAAe,CAAC0C,oBAAoB,CAAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACnHiC,kBAAkB,CAACrC,IAAI,CAACsC,CAAC,CAAC;;WAEjC,MAAM;YAEH,MAAMxB,OAAO,GAAGH,IAAI,CAACC,GAAG,CAAC,IAAI,CAACnB,eAAe,CAAC6C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC7C,eAAe,CAAC0C,oBAAoB,CAAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtG,IAAIU,OAAO,KAAK,IAAI,CAACrB,eAAe,CAAC6C,CAAC,CAAC,CAAC,CAAC,CAAC,IAAK,IAAI,CAAC7C,eAAe,CAAC6C,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC7C,eAAe,CAAC0C,oBAAoB,CAAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,EAAE;cACjIgC,mBAAmB,CAACpC,IAAI,CAACmC,oBAAoB,CAAC/B,CAAC,CAAC,CAAC;cACjD,IAAII,CAAC,GAAG,IAAI,CAACd,UAAU,CAAC4C,CAAC,CAAC;cAC1B,OAAO9B,CAAC,CAACC,WAAW,EAAE;gBAClBD,CAAC,GAAGA,CAAC,CAACC,WAAW;;cAErBD,CAAC,CAACC,WAAW,GAAG,IAAI,CAACf,UAAU,CAACyC,oBAAoB,CAAC/B,CAAC,CAAC,CAAC;cAExD,IAAI,CAACX,eAAe,CAAC6C,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC7C,eAAe,CAAC0C,oBAAoB,CAAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cAC7EiC,kBAAkB,CAACrC,IAAI,CAACsC,CAAC,CAAC;aAC7B,MAAM,IAAIxB,OAAO,KAAK,IAAI,CAACrB,eAAe,CAAC0C,oBAAoB,CAAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAK,IAAI,CAACX,eAAe,CAAC0C,oBAAoB,CAAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAACX,eAAe,CAAC6C,CAAC,CAAC,CAAC,CAAC,CAAE,EAAE;cAC9JF,mBAAmB,CAACpC,IAAI,CAACsC,CAAC,CAAC;cAC3B,IAAI9B,CAAC,GAAG,IAAI,CAACd,UAAU,CAACyC,oBAAoB,CAAC/B,CAAC,CAAC,CAAC;cAChD,OAAOI,CAAC,CAACC,WAAW,EAAE;gBAClBD,CAAC,GAAGA,CAAC,CAACC,WAAW;;cAErBD,CAAC,CAACC,WAAW,GAAG,IAAI,CAACf,UAAU,CAAC4C,CAAC,CAAC;cAElC,IAAI,CAAC7C,eAAe,CAAC0C,oBAAoB,CAAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAACX,eAAe,CAAC6C,CAAC,CAAC,CAAC,CAAC,CAAC;cAC7ED,kBAAkB,CAACrC,IAAI,CAACmC,oBAAoB,CAAC/B,CAAC,CAAC,CAAC;;;;;MAQhE,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgC,mBAAmB,CAACrC,MAAM,EAAEK,CAAC,EAAE,EAAE;QACjD,MAAMoC,GAAG,GAAGJ,mBAAmB,CAAChC,CAAC,CAAC;QAClC,KAAK,IAAIkC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,kBAAkB,CAACtC,MAAM,EAAEuC,CAAC,EAAE,EAAE;UAChD,IAAID,kBAAkB,CAACC,CAAC,CAAC,GAAGE,GAAG,EAAE;YAC7BH,kBAAkB,CAACC,CAAC,CAAC,EAAE;;;QAG/B,IAAI,CAAC7C,eAAe,CAAC8C,MAAM,CAACC,GAAG,EAAE,CAAC,CAAC;QACnC,IAAI,CAAC9C,UAAU,CAAC6C,MAAM,CAACC,GAAG,EAAE,CAAC,CAAC;;MAElCJ,mBAAmB,GAAG,EAAE;MACxBD,oBAAoB,GAAGE,kBAAkB;MACzCA,kBAAkB,GAAG,EAAE;;EAE/B;EAEAnB,SAASA,CAAA;IACL,IAAI,IAAI,CAACzB,eAAe,CAACM,MAAM,IAAI,IAAI,CAACL,UAAU,CAACK,MAAM,EAAE;MACvDgB,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;MACjB,MAAM,IAAIC,KAAK,CAAC,yCAAyC,CAAC;;IAE9D,KAAK,IAAIb,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACX,eAAe,CAACM,MAAM,EAAEK,CAAC,EAAE,EAAE;MAClD,IAAI,IAAI,CAACX,eAAe,CAACW,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAACV,UAAU,CAACU,CAAC,CAAC,CAACM,KAAK,EAAE;QACzDK,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;QACjB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;;;IAGrD,KAAK,IAAIb,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACX,eAAe,CAACM,MAAM,EAAEK,CAAC,EAAE,EAAE;MAClD,IAAII,CAAC,GAAG,IAAI,CAACd,UAAU,CAACU,CAAC,CAAC;MAC1B,IAAIM,KAAK,GAAG,IAAI,CAACjB,eAAe,CAACW,CAAC,CAAC,CAAC,CAAC,CAAC;MACtC,OAAOI,CAAC,IAAIE,KAAK,IAAI,IAAI,CAACjB,eAAe,CAACW,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QAC7C,IAAII,CAAC,CAACE,KAAK,KAAKA,KAAK,EAAE;UACnBF,CAAC,GAAGA,CAAC,CAACC,WAAY;UAClBC,KAAK,EAAE;SACV,MAAM;UACHK,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;UACjB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;;;;EAI7D","ignoreList":[]}]}