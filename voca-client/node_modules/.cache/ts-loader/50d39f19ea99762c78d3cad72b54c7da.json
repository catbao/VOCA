{"remainingRequest":"/Users/bao/Downloads/VOCA/voca-client/node_modules/babel-loader/lib/index.js!/Users/bao/Downloads/VOCA/voca-client/node_modules/ts-loader/index.js??ref--15-2!/Users/bao/Downloads/VOCA/voca-client/node_modules/eslint-loader/index.js??ref--14-0!/Users/bao/Downloads/VOCA/voca-client/src/store/mutations.ts","dependencies":[{"path":"/Users/bao/Downloads/VOCA/voca-client/src/store/mutations.ts","mtime":1737814587298},{"path":"/Users/bao/Downloads/VOCA/voca-client/babel.config.js","mtime":1732546288000},{"path":"/Users/bao/Downloads/VOCA/voca-client/node_modules/cache-loader/dist/cjs.js","mtime":1732627998000},{"path":"/Users/bao/Downloads/VOCA/voca-client/node_modules/babel-loader/lib/index.js","mtime":1732627998000},{"path":"/Users/bao/Downloads/VOCA/voca-client/node_modules/ts-loader/index.js","mtime":1732627997000},{"path":"/Users/bao/Downloads/VOCA/voca-client/node_modules/eslint-loader/index.js","mtime":1732627997000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["store","emitter","v4","uuidv4","d3","constructTrendTree","getLevelData","formatToRenderDataForTrend","formatNonPowDataForViewChange","formatDataForMultiM4","setFlagMap","formatData","data","params","tStart","Date","startTime","getTime","tEnd","endTime","timeRange","vMin","min","d","v","vMax","max","sortedArray","sort","a","b","t","forEach","item","x","Math","round","width","y","height","resultArray","algroithm","toLocaleLowerCase","threshold","state","rdpThreshold","val","addSimpleBrushLineChartObj","info","sampleBrushLineChartObj","id","random","rowData","algorithm","isSample","isChoosed","simpleBrushLineChartObjs","set","emit","updateBrushLineChartObj","addViewChangeQueryNoPowLineChartObj","nonUniformRenderData","dataManager","maxLevel","maxV","minV","Infinity","viewChangeQueryObj","historyQueryStack","levelIndexObjs","length","currentLevel","ceil","log2","isPow","nonUniformColObjs","maxLen","dataMaxLen","addTimeBoxQueryLineChartObjs","dataManagers","i","trendTree","renderData","minv","maxv","floor","firstNodes","push","timeBoxQueryObj","Error","addMultiTimeSeriesObj","multiTImeSeriesObj","columnInfos","isShow","dataName","pow","className","lineAmount","startTimeStamp","endTimeStamp","timeIntervalMs","line1","columnsColor","updateMultiTimeSeriesM4Obj","allRenderData","res","tn","alterAlgorithm","algoritem","currentAlgorithm","alterSampleMethod","method","controlParams","currentSampleMethod","alterMode","mode","currentMode","alterTable","table","currentTable","_value","splitArray","split","tableMaxLevel","tableMaxLevels","alterCustomTable","alterLineType","lineType","currentLineType","updateDisplayChanel","chanel","currentChanel","updateDenoiseMethod","currentDenoiseMethod","updateAllTables","allTables","tables","updateAllFlags","flags","console","log","updateMultiLineClassInfo","multiClassInfoMap","Map","allMultiLineClassInfoMap","allCustomMultiLineClassInfoMap","updateMultiLineClassAndLinesInfo","multiClassAndLinesInfoMap","tableArray","allMultiLineClassAndLinesMap","gettables","tablesMap","getcolumns","getaggregates","getfunctions","getexperiment","ColumnsChange","lineNames","value","currentMultiLineClassLines","alterCurrentMulitLineClass","currentMultiLineClass","alterCurrentMulitLineClassALine","lineName","currentMultiLineClassALine","alterCurrentMulitLineClassLines","alterSelectedOption","option","transform_symbol","alterSelectedExperiment","experiment","alterSelectedAggregate","aggregate","alterSelectedComputeOrShow","computeOrShow","updateCustomTableAndInfo","tableInfoMap","customTableInfo","customTableMap","allCustomTables","customTables","map","updateDefaultTableAndInfo","tableInfo","defaultTableMap","allDefaultTables","alterProgressive","progresive","progressive","setAllMultiLineClassAndLinesMap","linesMap","alterStopEarly","stopEarly","alterNoStopEarly"],"sources":["/Users/bao/Downloads/VOCA/voca-client/node_modules/eslint-loader/index.js??ref--14-0!/Users/bao/Downloads/VOCA/voca-client/src/store/mutations.ts"],"sourcesContent":["import store, { GlobalState, LineChartObj, emitter, SimpleLineChartObj, WaveletLineChartObj, SimpleBrushChartObj, TrendQueryLineChartObj, TimeBoxQueryLineChartObj, ViewChangeLineChartObj, AngularQueryLineChartObj, MultiTimeSeriesObj, MultiTimeSeriesM4Obj, MultiHaarTimeSeriesObj } from \".\";\nimport { v4 as uuidv4 } from 'uuid';\nimport * as d3 from 'd3';\n\nimport { constructTrendTree } from '../helper/wavlet-decoder'\nimport { getLevelData } from \"@/helper/util\";\nimport { formatToRenderDataForTrend, formatRenderDataForViewChange, formatNonPowDataForViewChange, formatDataForMultiM4 } from \"@/helper/format-data\";\nimport  NoUniformColObj  from \"@/model/non-uniform-col-obj\";\nimport LevelDataManager from \"@/model/level-data-manager\";\nimport TrendTree from \"@/helper/tend-query-tree\";\nimport { setFlagMap } from \"@/global_state/state\";\n\n\nfunction formatData(data: Array<any>, params: { startTime: string, endTime: string, width: number, height: number, algroithm: string }) {\n    const tStart = new Date(params.startTime).getTime();\n    const tEnd = new Date(params.endTime).getTime();\n    const timeRange = tEnd - tStart;\n\n    const vMin = d3.min(data, d => d.v);\n    const vMax = d3.max(data, d => d.v);\n    //const sortedArray=data;\n\n    const sortedArray = data.sort((a, b) => {\n        return new Date(a.t).getTime() - new Date(b.t).getTime();\n    });\n\n    sortedArray.forEach(item => {\n        item.x = Math.round(params.width * (new Date(item.t).getTime() - tStart) / timeRange),\n            item.y = Math.round(params.height * (item.v - vMin) / (vMax - vMin))\n    });\n    let resultArray = sortedArray;\n    if (params.algroithm.toLocaleLowerCase() === 'rdp') {\n        const threshold = store.state.rdpThreshold;\n        // resultArray = simple.simplify(sortedArray, threshold);\n\n    }\n    return {\n        val: resultArray, min: vMin, max: vMax\n    }\n}\n\n\nfunction addSimpleBrushLineChartObj(state: GlobalState, info: { data: Array<any>, rowData: Array<any>, url: string, startTime: number, endTime: number, algorithm: string, width: number, height: number }) {\n    const sampleBrushLineChartObj: SimpleBrushChartObj = {\n        id: uuidv4(),\n        width: info.width,\n        height: info.height,\n        x: Math.random() * 60,\n        y: Math.random() * 60,\n        data: { rowData: [[0, 0], ...info.rowData], val: info.data, min: d3.min(info.data, d => d.v), max: d3.max(info.data, d => d.v) },\n        timeRange: [info.startTime, info.endTime],\n        algorithm: info.algorithm,\n        isSample: true,\n        isChoosed: false,\n    }\n    //console.log(sampleBrushLineChartObj);\n    state.simpleBrushLineChartObjs.set(sampleBrushLineChartObj.id, sampleBrushLineChartObj);\n    emitter.emit(\"add_brush_line_chart_obj\", sampleBrushLineChartObj);\n}\n\nfunction updateBrushLineChartObj(state: GlobalState, info: SimpleBrushChartObj) {\n    state.simpleBrushLineChartObjs.set(info.id, info);\n}\n\n\n\nfunction addViewChangeQueryNoPowLineChartObj(state: GlobalState, info: { dataManager: LevelDataManager, trendTree: TrendTree, data: Array<NoUniformColObj>, url: string, startTime: number, endTime: number, algorithm: string, width: number, height: number }) {\n    const nonUniformRenderData = formatNonPowDataForViewChange(info.data, info.width, 2 ** info.dataManager.maxLevel, null);\n    let maxV = nonUniformRenderData[0].v;\n    let minV = nonUniformRenderData[0].v\n    nonUniformRenderData.forEach((v) => {\n        //@ts-ignore\n        maxV = Math.max((v.v === Infinity) ? maxV : v.v, maxV!);\n        //@ts-ignore\n        minV = Math.min((v.v === -Infinity) ? minV : v.v, minV!);\n    });\n    const viewChangeQueryObj: ViewChangeLineChartObj = {\n        id: uuidv4(),\n        width: info.width,\n        height: info.height,\n        x: Math.random() * 60,\n        y: Math.random() * 60,\n        // root: info.trendTree,\n        // data: { powRenderData: [], noPowRenderData: nonUniformRenderData, minv: minV!, maxv: maxV! },\n        timeRange: [0, info.width - 1],\n        // algorithm: info.algorithm,\n        // dataManager: info.dataManager,\n        // params: [0, 0],\n        minV: 0,\n        maxV: 0,\n        historyQueryStack: [[info.dataManager.levelIndexObjs.length - 1, 0, info.width - 1]],\n        currentLevel: Math.ceil(Math.log2(info.width)),\n        isPow: false,\n        nonUniformColObjs: info.data,\n        maxLen:0,\n        startTime:0,\n        endTime:0,\n        dataMaxLen:0,\n        // colorArray:[]\n    }\n    emitter.emit(\"add_view_change_query_obj\", viewChangeQueryObj);\n}\n\nfunction addTimeBoxQueryLineChartObjs(state: GlobalState, info: { data: Array<any>, url: string, startTime: number, endTime: number, algorithm: string, width: number, height: number }) {\n    const data = [];\n    const dataManagers = [];\n    for (let i = 0; i < info.data.length; i++) {\n        const { trendTree, dataManager } = constructTrendTree(info.data[i]);\n        const { renderData, minv, maxv } = formatToRenderDataForTrend([dataManager.maxLevel, Math.floor(Math.log2(info.width))], getLevelData(dataManager.levelIndexObjs[dataManager.levelIndexObjs.length - 1].firstNodes[0]), info.width);\n        data.push({ renderData, minv, maxv });\n        dataManagers.push(dataManager);\n    }\n    const timeBoxQueryObj: TimeBoxQueryLineChartObj = {\n        id: uuidv4(),\n        width: info.width,\n        height: info.height,\n        x: Math.random() * 60,\n        y: Math.random() * 60,\n        data,\n        timeRange: [0, info.width - 1],\n        algorithm: info.algorithm,\n        dataManagers,\n        params: [0, 0],\n        historyQueryStack: [[dataManagers[0].levelIndexObjs.length - 1, 0, info.width - 1]],\n        currentLevel: dataManagers[0].levelIndexObjs.length\n    }\n    if (data.length > 0) {\n        emitter.emit(\"add_time_box_query_obj\", timeBoxQueryObj);\n    } else {\n        throw new Error(\"cannot load time box data from server\");\n    }\n}\n\nfunction addMultiTimeSeriesObj(state: GlobalState, info: {\n    className: string,\n    lineAmount: number,\n    startTimeStamp: number,\n    endTimeStamp: number,\n    timeIntervalMs: number, \n    // dataManagers: Array<LevelDataManager>, \n    // powRenderData: Array<{ renderData: Array<any>, minv: number, maxv: number }>, \n    columnInfos: Array<Array<any>>, \n    isShow: Array<boolean>,\n    dataName: Array<string>,\n    url: string, \n    startTime: number,\n    endTime: number, \n    algorithm: string, \n    width: number, \n    height: number, \n    pow: boolean, \n    minv: number, \n    maxv: number, \n    maxLevel: number,\n    line1: any,\n    columnsColor: Array<string>\n}) {\n    const multiTImeSeriesObj: MultiTimeSeriesObj = {\n        id: uuidv4(),\n        width: info.width,\n        height: info.height,\n        x: Math.random() * 60,\n        y: Math.random() * 60,\n        // powRenderData: info.powRenderData,\n        columnInfos: info.columnInfos,\n        isShow: [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true],\n        dataName: [],\n        timeRange: [0, info.endTime],\n        algorithm: info.algorithm,\n        // dataManagers: info.dataManagers,\n        params: [0, 0],\n        currentLevel: Math.ceil(Math.log2(info.width)),\n        pow: info.pow,\n        minv: info.minv,\n        maxv: info.maxv,\n        maxLevel: info.maxLevel,\n        className: info.className,\n        lineAmount: info.lineAmount,\n        startTimeStamp: info.startTimeStamp,\n        endTimeStamp: info.endTimeStamp,\n        timeIntervalMs: info.timeIntervalMs,\n        line1: info.line1,\n        columnsColor: info.columnsColor\n    }\n    if (info.columnInfos.length > 0) {\n        emitter.emit(\"add_multi_timeseries_obj\", multiTImeSeriesObj);\n    } else {\n        throw new Error(\"cannot load time box data from server\");\n    }\n}\n\n\nfunction updateMultiTimeSeriesM4Obj(state: GlobalState, info: { width: number, height: number, data: Array<{ tn: string, res: Array<{ t: number, v: number }> }>, maxLevel: number, type: string, timeRange: [number, number] }) {\n    const allRenderData = [];\n    let maxV = -Infinity;\n    let minV = Infinity;\n    for (let i = 0; i < info.data.length; i++) {\n        const { res, minv, maxv } = formatDataForMultiM4(info.data[i].res, info.width, 0, 2 ** info.maxLevel - 1);\n        allRenderData.push({ tn: info.data[i].tn, data: res });\n        maxV = Math.max(maxv, maxV);\n        minV = Math.min(minv, minV);\n    }\n    const multiTImeSeriesObj: MultiTimeSeriesM4Obj = {\n        id: uuidv4(),\n        width: info.width,\n        height: info.height,\n        x: Math.random() * 60,\n        y: Math.random() * 60,\n        timeRange: info.timeRange,\n        algorithm: \"multiTimeSeriesM4\",\n        renderData: allRenderData,\n        params: [0, 0],\n        minv: minV,\n        maxv: maxV,\n        maxLevel: info.maxLevel,\n    }\n    if (allRenderData.length > 0) {\n        emitter.emit(\"update_multi_timeseries_m4_obj\", multiTImeSeriesObj);\n    } else {\n        throw new Error(\"cannot get m4 time series data\");\n    }\n}\n\nfunction alterAlgorithm(state: GlobalState, algoritem: string) {\n    state.currentAlgorithm = algoritem;\n}\n\nfunction alterSampleMethod(state: GlobalState, method: string) {\n    state.controlParams.currentSampleMethod = method;\n}\n\n\n\nfunction alterMode(state: GlobalState, mode: 'Default' | 'Custom') {\n    state.controlParams.currentMode = mode\n}\n\nfunction alterTable(state: GlobalState, table: string) {\n    //@ts-ignore\n    state.controlParams.currentTable = table._value;\n\n    //@ts-ignore\n    const splitArray = table._value.split(\"_\")\n    state.controlParams.tableMaxLevel = store.state.tableMaxLevels[splitArray[splitArray.length - 1]];\n}\n\nfunction alterCustomTable(state: GlobalState, table: string){\n\n    state.controlParams.currentTable = table;\n    const splitArray = table.split(\"_\")\n    state.controlParams.tableMaxLevel = store.state.tableMaxLevels[splitArray[splitArray.length - 1]];\n}\n\nfunction alterLineType(state: GlobalState, lineType: 'Single' | 'Multi') {\n    state.controlParams.currentLineType = lineType;\n}\n\n\n\n\n\nfunction updateDisplayChanel(state: GlobalState, chanel: string) {\n    state.controlParams.currentChanel = chanel;\n}\nfunction updateDenoiseMethod(state: GlobalState, method: string) {\n    state.controlParams.currentDenoiseMethod = method;\n}\n\nfunction updateAllTables(state: GlobalState, info: { tables: Array<string> }) {\n    state.allTables = info.tables;\n    if (info.tables.length > 0) {\n        state.controlParams.currentTable = info.tables[0];\n    }\n}\n\nfunction updateAllFlags(state: GlobalState, info: { flags: any }) {\n    // state.allFlags = info.flags;\n    setFlagMap(info.flags)\n    console.log(info.flags);\n    console.log(\"load flags finish\");\n}\n\nfunction updateMultiLineClassInfo(state: GlobalState, info: { info: any }) {\n    const multiClassInfoMap = new Map<string, any>();\n    for (let i = 0; i < info.info['data'].length; i++) {\n        multiClassInfoMap.set(info.info['data'][i]['name'], info.info['data'][i]);\n    }\n    if(state.controlParams.currentMode==='Default'){\n        state.allMultiLineClassInfoMap = multiClassInfoMap;\n    }else{\n        state.allCustomMultiLineClassInfoMap=multiClassInfoMap;\n    }\n    // console.log(\"allCustomMultiLineClassInfoMap:\", state.allCustomMultiLineClassInfoMap);\n}\n\nfunction updateMultiLineClassAndLinesInfo(state: GlobalState, info: { info: any }){\n    const multiClassAndLinesInfoMap = new Map<string, any>();\n    let tableArray : Array<string> = [];\n    for (let i = 0; i < info.info['data'].length; i++) {\n        tableArray.push(info.info['data'][i]['table_fullname']);\n        // console.log(info.info['data'][i]['table_fullname']);\n    }\n    multiClassAndLinesInfoMap.set(\"mock\", tableArray);\n    if(state.controlParams.currentMode==='Default'){\n        state.allMultiLineClassAndLinesMap = multiClassAndLinesInfoMap;\n    }else{\n        state.allMultiLineClassAndLinesMap = multiClassAndLinesInfoMap;\n    }\n    // console.log(\"allCustomMultiLineClassAndLinesInfoMap:\", state.allMultiLineClassAndLinesMap);\n}\n\nfunction gettables(state: GlobalState, info: { info: any }){\n    const tablesMap = new Map<string, any>();\n    let tableArray : Array<string> = [];\n    console.log(info)\n    for (let i = 0; i < info.info['tables'].length; i++) {\n        tableArray.push(info.info['tables'][i]);\n    }\n    tablesMap.set(\"tables\", tableArray);\n    state.allMultiLineClassAndLinesMap = tablesMap\n\n}\n\nfunction getcolumns(state: GlobalState, info: { info: any }){\n    const tablesMap = new Map<string, any>();\n    let tableArray : Array<string> = [];\n    //console.log(info)\n    for (let i = 0; i < info.info['columns'].length; i++) {\n        tableArray.push(info.info['columns'][i]);\n    }\n    // tableArray.push('all');\n    tablesMap.set(\"columns\", tableArray);\n    state.allMultiLineClassAndLinesMap = tablesMap\n\n}\n\nfunction getaggregates(state: GlobalState, info: { info: any }){\n    const tablesMap = new Map<string, any>();\n    let tableArray : Array<string> = [];\n    //console.log(info)\n    for (let i = 0; i < info.info['aggregates'].length; i++) {\n        tableArray.push(info.info['aggregates'][i]);\n    }\n    tablesMap.set(\"aggregates\", tableArray);\n    state.allMultiLineClassAndLinesMap = tablesMap\n\n}\n\nfunction getfunctions(state: GlobalState, info: { info: any }){\n    const tablesMap = new Map<string, any>();\n    let tableArray : Array<string> = [];\n    //console.log(info)\n    for (let i = 0; i < info.info['functions'].length; i++) {\n        tableArray.push(info.info['functions'][i]);\n    }\n    tablesMap.set(\"functions\", tableArray);\n    state.allMultiLineClassAndLinesMap = tablesMap\n\n}\n\nfunction getexperiment(state: GlobalState, info: { info: any }){\n    const tablesMap = new Map<string, any>();\n    let tableArray : Array<string> = [];\n    //console.log(info)\n    for (let i = 0; i < info.info['experiments'].length; i++) {\n        tableArray.push(info.info['experiments'][i]);\n    }\n    tablesMap.set(\"experiments\", tableArray);\n    state.allMultiLineClassAndLinesMap = tablesMap\n\n}\n\nfunction ColumnsChange(state: GlobalState, lineNames: any) {\n    if(lineNames.value){\n        console.log(\"lineNames:\", lineNames.value);\n        state.controlParams.currentMultiLineClassLines = lineNames.value\n    }\n    else{\n        console.log(\"lineNames:\", lineNames);\n        state.controlParams.currentMultiLineClassLines = lineNames\n    }\n}\n\nfunction alterCurrentMulitLineClass(state: GlobalState, className: string) {\n    state.controlParams.currentMultiLineClass = className\n    console.log(\"alterCurrentMulitLineClass\",className);\n}\n\nfunction alterCurrentMulitLineClassALine(state: GlobalState, lineName: string) {\n    state.controlParams.currentMultiLineClassALine = lineName\n}\n\nfunction alterCurrentMulitLineClassLines(state: GlobalState, lineNames: Array<string>) {\n    state.controlParams.currentMultiLineClassLines = lineNames\n}\n\n\n\nfunction alterSelectedOption(state: GlobalState, option: string){\n    state.controlParams.transform_symbol = option;\n}\n\nfunction alterSelectedExperiment(state: GlobalState, option: string){\n    state.controlParams.experiment = option;\n}\n\nfunction alterSelectedAggregate(state: GlobalState, option: string){\n    state.controlParams.aggregate = option;\n}\n\nfunction alterSelectedComputeOrShow(state: GlobalState, option: string){\n    state.controlParams.computeOrShow = option;\n}\n\nfunction updateCustomTableAndInfo(state: GlobalState, info: { customTables: Array<string>,customTableInfo:Array<any> }){\n    const tableInfoMap=new Map<string,any>()\n    for(let i=0;i<info.customTableInfo.length;i++){\n        tableInfoMap.set(info.customTableInfo[i]['name'],info.customTableInfo[i]);\n    }\n    state.customTableMap=tableInfoMap;\n    state.allCustomTables=info.customTables.map(v=>v.split(\".\")[1]);\n}\n\nfunction updateDefaultTableAndInfo(state: GlobalState, info: { tables: Array<string>,tableInfo:Array<any> }){\n    const tableInfoMap=new Map<string,any>()\n    for(let i=0;i<info.tableInfo.length;i++){\n        tableInfoMap.set(info.tableInfo[i]['name'],info.tableInfo[i]);\n    }\n    state.defaultTableMap=tableInfoMap;\n    state.allDefaultTables=info.tables.map(v=>v.split(\".\")[1]);\n    if(state.allDefaultTables.length>0){\n        state.controlParams.currentTable=state.allDefaultTables[0];\n    }\n    \n}\n\nfunction alterProgressive(state: GlobalState, progresive: boolean){\n    state.controlParams.progressive=progresive;\n}\n\nfunction setAllMultiLineClassAndLinesMap(state: GlobalState, linesMap: any){\n    console.log(\"lineMap:\", linesMap);\n    state.allMultiLineClassAndLinesMap = linesMap;\n}\n\nfunction alterStopEarly(state: GlobalState, stopEarly: boolean){\n    state.controlParams.stopEarly = true;\n}\n\nfunction alterNoStopEarly(state: GlobalState, stopEarly: boolean){\n    state.controlParams.stopEarly = false;\n}\n\nexport {\n    alterAlgorithm,\n    alterMode,\n    alterLineType,\n    alterSampleMethod,\n    alterTable,\n    updateDisplayChanel,\n    updateDenoiseMethod,\n    addSimpleBrushLineChartObj,\n    updateBrushLineChartObj,\n    addTimeBoxQueryLineChartObjs,\n    updateAllTables,\n    addViewChangeQueryNoPowLineChartObj,\n    addMultiTimeSeriesObj,\n    updateMultiTimeSeriesM4Obj,\n    updateAllFlags,\n    updateMultiLineClassInfo,\n    updateMultiLineClassAndLinesInfo,\n    \n    gettables,\n    getcolumns,\n    getfunctions,\n    getaggregates,\n    getexperiment,\n\n    ColumnsChange,\n    alterCurrentMulitLineClass,\n    alterCurrentMulitLineClassALine,\n    alterCurrentMulitLineClassLines,\n    alterCustomTable,\n    updateCustomTableAndInfo,\n    updateDefaultTableAndInfo,\n    alterProgressive,\n    setAllMultiLineClassAndLinesMap,\n    alterSelectedOption,\n    alterSelectedExperiment,\n    alterSelectedAggregate,\n    alterSelectedComputeOrShow,\n    alterStopEarly,\n    alterNoStopEarly,\n}\n\n"],"mappings":"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","ignoreList":[]}]}