{"remainingRequest":"/ai/didi01/zhanglingyu/om3-extend/om3-client/node_modules/babel-loader/lib/index.js!/ai/didi01/zhanglingyu/om3-extend/om3-client/node_modules/ts-loader/index.js??ref--15-2!/ai/didi01/zhanglingyu/om3-extend/om3-client/node_modules/eslint-loader/index.js??ref--14-0!/ai/didi01/zhanglingyu/om3-extend/om3-client/src/store/mutations.ts","dependencies":[{"path":"/ai/didi01/zhanglingyu/om3-extend/om3-client/src/store/mutations.ts","mtime":1737621068969},{"path":"/ai/didi01/zhanglingyu/om3-extend/om3-client/babel.config.js","mtime":1732546288000},{"path":"/ai/didi01/zhanglingyu/om3-extend/om3-client/node_modules/cache-loader/dist/cjs.js","mtime":1732627998000},{"path":"/ai/didi01/zhanglingyu/om3-extend/om3-client/node_modules/babel-loader/lib/index.js","mtime":1732627998000},{"path":"/ai/didi01/zhanglingyu/om3-extend/om3-client/node_modules/ts-loader/index.js","mtime":1732627997000},{"path":"/ai/didi01/zhanglingyu/om3-extend/om3-client/node_modules/eslint-loader/index.js","mtime":1732627997000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["store","emitter","v4","uuidv4","d3","constructTrendTree","getLevelData","formatToRenderDataForTrend","formatNonPowDataForViewChange","formatDataForMultiM4","setFlagMap","formatData","data","params","tStart","Date","startTime","getTime","tEnd","endTime","timeRange","vMin","min","d","v","vMax","max","sortedArray","sort","a","b","t","forEach","item","x","Math","round","width","y","height","resultArray","algroithm","toLocaleLowerCase","threshold","state","rdpThreshold","val","addSimpleBrushLineChartObj","info","sampleBrushLineChartObj","id","random","rowData","algorithm","isSample","isChoosed","simpleBrushLineChartObjs","set","emit","updateBrushLineChartObj","addViewChangeQueryNoPowLineChartObj","nonUniformRenderData","dataManager","maxLevel","maxV","minV","Infinity","viewChangeQueryObj","historyQueryStack","levelIndexObjs","length","currentLevel","ceil","log2","isPow","nonUniformColObjs","maxLen","addTimeBoxQueryLineChartObjs","dataManagers","i","trendTree","renderData","minv","maxv","floor","firstNodes","push","timeBoxQueryObj","Error","addMultiTimeSeriesObj","multiTImeSeriesObj","columnInfos","isShow","dataName","pow","className","lineAmount","startTimeStamp","endTimeStamp","timeIntervalMs","line1","updateMultiTimeSeriesM4Obj","allRenderData","res","tn","alterAlgorithm","algoritem","currentAlgorithm","alterSampleMethod","method","controlParams","currentSampleMethod","alterMode","mode","currentMode","alterTable","table","currentTable","_value","splitArray","split","tableMaxLevel","tableMaxLevels","alterCustomTable","alterLineType","lineType","currentLineType","updateDisplayChanel","chanel","currentChanel","updateDenoiseMethod","currentDenoiseMethod","updateAllTables","allTables","tables","updateAllFlags","flags","console","log","updateMultiLineClassInfo","multiClassInfoMap","Map","allMultiLineClassInfoMap","allCustomMultiLineClassInfoMap","updateMultiLineClassAndLinesInfo","multiClassAndLinesInfoMap","tableArray","allMultiLineClassAndLinesMap","gettables","tablesMap","getcolumns","getaggregates","getfunctions","getexperiment","ColumnsChange","lineNames","currentMultiLineClassLines","alterCurrentMulitLineClass","currentMultiLineClass","alterCurrentMulitLineClassALine","lineName","currentMultiLineClassALine","alterCurrentMulitLineClassLines","alterSelectedOption","option","transform_symbol","alterSelectedExperiment","experiment","alterSelectedComputeOrShow","computeOrShow","updateCustomTableAndInfo","tableInfoMap","customTableInfo","customTableMap","allCustomTables","customTables","map","updateDefaultTableAndInfo","tableInfo","defaultTableMap","allDefaultTables","alterProgressive","progresive","progressive","setAllMultiLineClassAndLinesMap","linesMap","alterStopEarly","stopEarly","alterNoStopEarly"],"sources":["/ai/didi01/zhanglingyu/om3-extend/om3-client/node_modules/eslint-loader/index.js??ref--14-0!/ai/didi01/zhanglingyu/om3-extend/om3-client/src/store/mutations.ts"],"sourcesContent":["import store, { GlobalState, LineChartObj, emitter, SimpleLineChartObj, WaveletLineChartObj, SimpleBrushChartObj, TrendQueryLineChartObj, TimeBoxQueryLineChartObj, ViewChangeLineChartObj, AngularQueryLineChartObj, MultiTimeSeriesObj, MultiTimeSeriesM4Obj, MultiHaarTimeSeriesObj } from \".\";\nimport { v4 as uuidv4 } from 'uuid';\nimport * as d3 from 'd3';\n\nimport { constructTrendTree } from '../helper/wavlet-decoder'\nimport { getLevelData } from \"@/helper/util\";\nimport { formatToRenderDataForTrend, formatRenderDataForViewChange, formatNonPowDataForViewChange, formatDataForMultiM4 } from \"@/helper/format-data\";\nimport  NoUniformColObj  from \"@/model/non-uniform-col-obj\";\nimport LevelDataManager from \"@/model/level-data-manager\";\nimport TrendTree from \"@/helper/tend-query-tree\";\nimport { setFlagMap } from \"@/global_state/state\";\n\n\nfunction formatData(data: Array<any>, params: { startTime: string, endTime: string, width: number, height: number, algroithm: string }) {\n    const tStart = new Date(params.startTime).getTime();\n    const tEnd = new Date(params.endTime).getTime();\n    const timeRange = tEnd - tStart;\n\n    const vMin = d3.min(data, d => d.v);\n    const vMax = d3.max(data, d => d.v);\n    //const sortedArray=data;\n\n    const sortedArray = data.sort((a, b) => {\n        return new Date(a.t).getTime() - new Date(b.t).getTime();\n    });\n\n    sortedArray.forEach(item => {\n        item.x = Math.round(params.width * (new Date(item.t).getTime() - tStart) / timeRange),\n            item.y = Math.round(params.height * (item.v - vMin) / (vMax - vMin))\n    });\n    let resultArray = sortedArray;\n    if (params.algroithm.toLocaleLowerCase() === 'rdp') {\n        const threshold = store.state.rdpThreshold;\n        // resultArray = simple.simplify(sortedArray, threshold);\n\n    }\n    return {\n        val: resultArray, min: vMin, max: vMax\n    }\n}\n\n\nfunction addSimpleBrushLineChartObj(state: GlobalState, info: { data: Array<any>, rowData: Array<any>, url: string, startTime: number, endTime: number, algorithm: string, width: number, height: number }) {\n    const sampleBrushLineChartObj: SimpleBrushChartObj = {\n        id: uuidv4(),\n        width: info.width,\n        height: info.height,\n        x: Math.random() * 60,\n        y: Math.random() * 60,\n        data: { rowData: [[0, 0], ...info.rowData], val: info.data, min: d3.min(info.data, d => d.v), max: d3.max(info.data, d => d.v) },\n        timeRange: [info.startTime, info.endTime],\n        algorithm: info.algorithm,\n        isSample: true,\n        isChoosed: false,\n    }\n    //console.log(sampleBrushLineChartObj);\n    state.simpleBrushLineChartObjs.set(sampleBrushLineChartObj.id, sampleBrushLineChartObj);\n    emitter.emit(\"add_brush_line_chart_obj\", sampleBrushLineChartObj);\n}\n\nfunction updateBrushLineChartObj(state: GlobalState, info: SimpleBrushChartObj) {\n    state.simpleBrushLineChartObjs.set(info.id, info);\n}\n\n\n\nfunction addViewChangeQueryNoPowLineChartObj(state: GlobalState, info: { dataManager: LevelDataManager, trendTree: TrendTree, data: Array<NoUniformColObj>, url: string, startTime: number, endTime: number, algorithm: string, width: number, height: number }) {\n    const nonUniformRenderData = formatNonPowDataForViewChange(info.data, info.width, 2 ** info.dataManager.maxLevel, null);\n    let maxV = nonUniformRenderData[0].v;\n    let minV = nonUniformRenderData[0].v\n    nonUniformRenderData.forEach((v) => {\n        //@ts-ignore\n        maxV = Math.max((v.v === Infinity) ? maxV : v.v, maxV!);\n        //@ts-ignore\n        minV = Math.min((v.v === -Infinity) ? minV : v.v, minV!);\n    });\n    const viewChangeQueryObj: ViewChangeLineChartObj = {\n        id: uuidv4(),\n        width: info.width,\n        height: info.height,\n        x: Math.random() * 60,\n        y: Math.random() * 60,\n        // root: info.trendTree,\n        // data: { powRenderData: [], noPowRenderData: nonUniformRenderData, minv: minV!, maxv: maxV! },\n        timeRange: [0, info.width - 1],\n        // algorithm: info.algorithm,\n        // dataManager: info.dataManager,\n        // params: [0, 0],\n        minV: 0,\n        maxV: 0,\n        historyQueryStack: [[info.dataManager.levelIndexObjs.length - 1, 0, info.width - 1]],\n        currentLevel: Math.ceil(Math.log2(info.width)),\n        isPow: false,\n        nonUniformColObjs: info.data,\n        maxLen:0,\n        startTime:0,\n        endTime:0\n    }\n    emitter.emit(\"add_view_change_query_obj\", viewChangeQueryObj);\n}\n\nfunction addTimeBoxQueryLineChartObjs(state: GlobalState, info: { data: Array<any>, url: string, startTime: number, endTime: number, algorithm: string, width: number, height: number }) {\n    const data = [];\n    const dataManagers = [];\n    for (let i = 0; i < info.data.length; i++) {\n        const { trendTree, dataManager } = constructTrendTree(info.data[i]);\n        const { renderData, minv, maxv } = formatToRenderDataForTrend([dataManager.maxLevel, Math.floor(Math.log2(info.width))], getLevelData(dataManager.levelIndexObjs[dataManager.levelIndexObjs.length - 1].firstNodes[0]), info.width);\n        data.push({ renderData, minv, maxv });\n        dataManagers.push(dataManager);\n    }\n    const timeBoxQueryObj: TimeBoxQueryLineChartObj = {\n        id: uuidv4(),\n        width: info.width,\n        height: info.height,\n        x: Math.random() * 60,\n        y: Math.random() * 60,\n        data,\n        timeRange: [0, info.width - 1],\n        algorithm: info.algorithm,\n        dataManagers,\n        params: [0, 0],\n        historyQueryStack: [[dataManagers[0].levelIndexObjs.length - 1, 0, info.width - 1]],\n        currentLevel: dataManagers[0].levelIndexObjs.length\n    }\n    if (data.length > 0) {\n        emitter.emit(\"add_time_box_query_obj\", timeBoxQueryObj);\n    } else {\n        throw new Error(\"cannot load time box data from server\");\n    }\n}\n\nfunction addMultiTimeSeriesObj(state: GlobalState, info: {\n    className: string,\n    lineAmount: number,\n    startTimeStamp: number,\n    endTimeStamp: number,\n    timeIntervalMs: number, \n    // dataManagers: Array<LevelDataManager>, \n    // powRenderData: Array<{ renderData: Array<any>, minv: number, maxv: number }>, \n    columnInfos: Array<Array<any>>, \n    isShow: Array<boolean>,\n    dataName: Array<string>,\n    url: string, \n    startTime: number,\n    endTime: number, \n    algorithm: string, \n    width: number, \n    height: number, \n    pow: boolean, \n    minv: number, \n    maxv: number, \n    maxLevel: number,\n    line1: any\n}) {\n    const multiTImeSeriesObj: MultiTimeSeriesObj = {\n        id: uuidv4(),\n        width: info.width,\n        height: info.height,\n        x: Math.random() * 60,\n        y: Math.random() * 60,\n        // powRenderData: info.powRenderData,\n        columnInfos: info.columnInfos,\n        isShow: [true, true, true, true, true, true, true, true, true, true],\n        dataName: [],\n        timeRange: [0, info.endTime],\n        algorithm: info.algorithm,\n        // dataManagers: info.dataManagers,\n        params: [0, 0],\n        currentLevel: Math.ceil(Math.log2(info.width)),\n        pow: info.pow,\n        minv: info.minv,\n        maxv: info.maxv,\n        maxLevel: info.maxLevel,\n        className: info.className,\n        lineAmount: info.lineAmount,\n        startTimeStamp: info.startTimeStamp,\n        endTimeStamp: info.endTimeStamp,\n        timeIntervalMs: info.timeIntervalMs,\n        line1: info.line1\n    }\n    if (info.columnInfos.length > 0) {\n        emitter.emit(\"add_multi_timeseries_obj\", multiTImeSeriesObj);\n    } else {\n        throw new Error(\"cannot load time box data from server\");\n    }\n}\n\n\nfunction updateMultiTimeSeriesM4Obj(state: GlobalState, info: { width: number, height: number, data: Array<{ tn: string, res: Array<{ t: number, v: number }> }>, maxLevel: number, type: string, timeRange: [number, number] }) {\n    const allRenderData = [];\n    let maxV = -Infinity;\n    let minV = Infinity;\n    for (let i = 0; i < info.data.length; i++) {\n        const { res, minv, maxv } = formatDataForMultiM4(info.data[i].res, info.width, 0, 2 ** info.maxLevel - 1);\n        allRenderData.push({ tn: info.data[i].tn, data: res });\n        maxV = Math.max(maxv, maxV);\n        minV = Math.min(minv, minV);\n    }\n    const multiTImeSeriesObj: MultiTimeSeriesM4Obj = {\n        id: uuidv4(),\n        width: info.width,\n        height: info.height,\n        x: Math.random() * 60,\n        y: Math.random() * 60,\n        timeRange: info.timeRange,\n        algorithm: \"multiTimeSeriesM4\",\n        renderData: allRenderData,\n        params: [0, 0],\n        minv: minV,\n        maxv: maxV,\n        maxLevel: info.maxLevel,\n    }\n    if (allRenderData.length > 0) {\n        emitter.emit(\"update_multi_timeseries_m4_obj\", multiTImeSeriesObj);\n    } else {\n        throw new Error(\"cannot get m4 time series data\");\n    }\n}\n\nfunction alterAlgorithm(state: GlobalState, algoritem: string) {\n    state.currentAlgorithm = algoritem;\n}\n\nfunction alterSampleMethod(state: GlobalState, method: string) {\n    state.controlParams.currentSampleMethod = method;\n}\n\n\n\nfunction alterMode(state: GlobalState, mode: 'Default' | 'Custom') {\n    state.controlParams.currentMode = mode\n}\n\nfunction alterTable(state: GlobalState, table: string) {\n    //@ts-ignore\n    state.controlParams.currentTable = table._value;\n\n    //@ts-ignore\n    const splitArray = table._value.split(\"_\")\n    state.controlParams.tableMaxLevel = store.state.tableMaxLevels[splitArray[splitArray.length - 1]];\n}\n\nfunction alterCustomTable(state: GlobalState, table: string){\n\n    state.controlParams.currentTable = table;\n    const splitArray = table.split(\"_\")\n    state.controlParams.tableMaxLevel = store.state.tableMaxLevels[splitArray[splitArray.length - 1]];\n}\n\nfunction alterLineType(state: GlobalState, lineType: 'Single' | 'Multi') {\n    state.controlParams.currentLineType = lineType;\n}\n\n\n\n\n\nfunction updateDisplayChanel(state: GlobalState, chanel: string) {\n    state.controlParams.currentChanel = chanel;\n}\nfunction updateDenoiseMethod(state: GlobalState, method: string) {\n    state.controlParams.currentDenoiseMethod = method;\n}\n\nfunction updateAllTables(state: GlobalState, info: { tables: Array<string> }) {\n    state.allTables = info.tables;\n    if (info.tables.length > 0) {\n        state.controlParams.currentTable = info.tables[0];\n    }\n}\n\nfunction updateAllFlags(state: GlobalState, info: { flags: any }) {\n    // state.allFlags = info.flags;\n    setFlagMap(info.flags)\n    console.log(info.flags);\n    console.log(\"load flags finish\");\n}\n\nfunction updateMultiLineClassInfo(state: GlobalState, info: { info: any }) {\n    const multiClassInfoMap = new Map<string, any>();\n    for (let i = 0; i < info.info['data'].length; i++) {\n        multiClassInfoMap.set(info.info['data'][i]['name'], info.info['data'][i]);\n    }\n    if(state.controlParams.currentMode==='Default'){\n        state.allMultiLineClassInfoMap = multiClassInfoMap;\n    }else{\n        state.allCustomMultiLineClassInfoMap=multiClassInfoMap;\n    }\n    // console.log(\"allCustomMultiLineClassInfoMap:\", state.allCustomMultiLineClassInfoMap);\n}\n\nfunction updateMultiLineClassAndLinesInfo(state: GlobalState, info: { info: any }){\n    const multiClassAndLinesInfoMap = new Map<string, any>();\n    let tableArray : Array<string> = [];\n    for (let i = 0; i < info.info['data'].length; i++) {\n        tableArray.push(info.info['data'][i]['table_fullname']);\n        // console.log(info.info['data'][i]['table_fullname']);\n    }\n    multiClassAndLinesInfoMap.set(\"mock\", tableArray);\n    if(state.controlParams.currentMode==='Default'){\n        state.allMultiLineClassAndLinesMap = multiClassAndLinesInfoMap;\n    }else{\n        state.allMultiLineClassAndLinesMap = multiClassAndLinesInfoMap;\n    }\n    // console.log(\"allCustomMultiLineClassAndLinesInfoMap:\", state.allMultiLineClassAndLinesMap);\n}\n\nfunction gettables(state: GlobalState, info: { info: any }){\n    const tablesMap = new Map<string, any>();\n    let tableArray : Array<string> = [];\n    console.log(info)\n    for (let i = 0; i < info.info['tables'].length; i++) {\n        tableArray.push(info.info['tables'][i]);\n    }\n    tablesMap.set(\"tables\", tableArray);\n    state.allMultiLineClassAndLinesMap = tablesMap\n\n}\n\nfunction getcolumns(state: GlobalState, info: { info: any }){\n    const tablesMap = new Map<string, any>();\n    let tableArray : Array<string> = [];\n    //console.log(info)\n    for (let i = 0; i < info.info['columns'].length; i++) {\n        tableArray.push(info.info['columns'][i]);\n    }\n    tablesMap.set(\"columns\", tableArray);\n    state.allMultiLineClassAndLinesMap = tablesMap\n\n}\n\nfunction getaggregates(state: GlobalState, info: { info: any }){\n    const tablesMap = new Map<string, any>();\n    let tableArray : Array<string> = [];\n    //console.log(info)\n    for (let i = 0; i < info.info['aggregates'].length; i++) {\n        tableArray.push(info.info['aggregates'][i]);\n    }\n    tablesMap.set(\"functions\", tableArray);\n    state.allMultiLineClassAndLinesMap = tablesMap\n\n}\n\nfunction getfunctions(state: GlobalState, info: { info: any }){\n    const tablesMap = new Map<string, any>();\n    let tableArray : Array<string> = [];\n    //console.log(info)\n    for (let i = 0; i < info.info['functions'].length; i++) {\n        tableArray.push(info.info['functions'][i]);\n    }\n    tablesMap.set(\"functions\", tableArray);\n    state.allMultiLineClassAndLinesMap = tablesMap\n\n}\n\nfunction getexperiment(state: GlobalState, info: { info: any }){\n    const tablesMap = new Map<string, any>();\n    let tableArray : Array<string> = [];\n    //console.log(info)\n    for (let i = 0; i < info.info['experiments'].length; i++) {\n        tableArray.push(info.info['experiments'][i]);\n    }\n    tablesMap.set(\"experiments\", tableArray);\n    state.allMultiLineClassAndLinesMap = tablesMap\n\n}\n\n\n\nfunction ColumnsChange(state: GlobalState, lineNames: Array<string>) {\n    state.controlParams.currentMultiLineClassLines = lineNames\n}\n\nfunction alterCurrentMulitLineClass(state: GlobalState, className: string) {\n    state.controlParams.currentMultiLineClass = className\n    console.log(\"alterCurrentMulitLineClass\",className);\n}\n\nfunction alterCurrentMulitLineClassALine(state: GlobalState, lineName: string) {\n    state.controlParams.currentMultiLineClassALine = lineName\n}\n\nfunction alterCurrentMulitLineClassLines(state: GlobalState, lineNames: Array<string>) {\n    state.controlParams.currentMultiLineClassLines = lineNames\n}\n\n\n\nfunction alterSelectedOption(state: GlobalState, option: string){\n    state.controlParams.transform_symbol = option;\n}\n\nfunction alterSelectedExperiment(state: GlobalState, option: string){\n    state.controlParams.experiment = option;\n}\n\nfunction alterSelectedComputeOrShow(state: GlobalState, option: string){\n    state.controlParams.computeOrShow = option;\n}\n\nfunction updateCustomTableAndInfo(state: GlobalState, info: { customTables: Array<string>,customTableInfo:Array<any> }){\n    const tableInfoMap=new Map<string,any>()\n    for(let i=0;i<info.customTableInfo.length;i++){\n        tableInfoMap.set(info.customTableInfo[i]['name'],info.customTableInfo[i]);\n    }\n    state.customTableMap=tableInfoMap;\n    state.allCustomTables=info.customTables.map(v=>v.split(\".\")[1]);\n}\n\nfunction updateDefaultTableAndInfo(state: GlobalState, info: { tables: Array<string>,tableInfo:Array<any> }){\n    const tableInfoMap=new Map<string,any>()\n    for(let i=0;i<info.tableInfo.length;i++){\n        tableInfoMap.set(info.tableInfo[i]['name'],info.tableInfo[i]);\n    }\n    state.defaultTableMap=tableInfoMap;\n    state.allDefaultTables=info.tables.map(v=>v.split(\".\")[1]);\n    if(state.allDefaultTables.length>0){\n        state.controlParams.currentTable=state.allDefaultTables[0];\n    }\n    \n}\n\nfunction alterProgressive(state: GlobalState, progresive: boolean){\n    state.controlParams.progressive=progresive;\n}\n\nfunction setAllMultiLineClassAndLinesMap(state: GlobalState, linesMap: any){\n    console.log(\"lineMap:\", linesMap);\n    state.allMultiLineClassAndLinesMap = linesMap;\n}\n\nfunction alterStopEarly(state: GlobalState, stopEarly: boolean){\n    state.controlParams.stopEarly = true;\n}\n\nfunction alterNoStopEarly(state: GlobalState, stopEarly: boolean){\n    state.controlParams.stopEarly = false;\n}\n\nexport {\n    alterAlgorithm,\n    alterMode,\n    alterLineType,\n    alterSampleMethod,\n    alterTable,\n    updateDisplayChanel,\n    updateDenoiseMethod,\n    addSimpleBrushLineChartObj,\n    updateBrushLineChartObj,\n    addTimeBoxQueryLineChartObjs,\n    updateAllTables,\n    addViewChangeQueryNoPowLineChartObj,\n    addMultiTimeSeriesObj,\n    updateMultiTimeSeriesM4Obj,\n    updateAllFlags,\n    updateMultiLineClassInfo,\n    updateMultiLineClassAndLinesInfo,\n    \n    gettables,\n    getcolumns,\n    getfunctions,\n    getexperiment,\n\n    ColumnsChange,\n    alterCurrentMulitLineClass,\n    alterCurrentMulitLineClassALine,\n    alterCurrentMulitLineClassLines,\n    alterCustomTable,\n    updateCustomTableAndInfo,\n    updateDefaultTableAndInfo,\n    alterProgressive,\n    setAllMultiLineClassAndLinesMap,\n    alterSelectedOption,\n    alterSelectedExperiment,\n    alterSelectedComputeOrShow,\n    alterStopEarly,\n    alterNoStopEarly,\n}\n\n"],"mappings":"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","ignoreList":[]}]}