{"remainingRequest":"/Users/bao/Downloads/om3-extend/om3-client/node_modules/babel-loader/lib/index.js!/Users/bao/Downloads/om3-extend/om3-client/node_modules/vue-loader-v16/dist/templateLoader.js??ref--7!/Users/bao/Downloads/om3-extend/om3-client/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/bao/Downloads/om3-extend/om3-client/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/bao/Downloads/om3-extend/om3-client/src/components/DisplayContentPanel.vue?vue&type=template&id=fd978b26&scoped=true","dependencies":[{"path":"/Users/bao/Downloads/om3-extend/om3-client/src/components/DisplayContentPanel.vue","mtime":1732546288000},{"path":"/Users/bao/Downloads/om3-extend/om3-client/babel.config.js","mtime":1732546288000},{"path":"/Users/bao/Downloads/om3-extend/om3-client/node_modules/cache-loader/dist/cjs.js","mtime":1732627998000},{"path":"/Users/bao/Downloads/om3-extend/om3-client/node_modules/babel-loader/lib/index.js","mtime":1732627998000},{"path":"/Users/bao/Downloads/om3-extend/om3-client/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1732627997000},{"path":"/Users/bao/Downloads/om3-extend/om3-client/node_modules/cache-loader/dist/cjs.js","mtime":1732627998000},{"path":"/Users/bao/Downloads/om3-extend/om3-client/node_modules/vue-loader-v16/dist/index.js","mtime":1732627996000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBjcmVhdGVFbGVtZW50Vk5vZGUgYXMgX2NyZWF0ZUVsZW1lbnRWTm9kZSwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrIH0gZnJvbSAidnVlIjsKY29uc3QgX2hvaXN0ZWRfMSA9IHsKICBjbGFzczogImRpc3BsYXktY29udGVudC1wYW5lbCBtcy0xIgp9OwpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIGNvbnN0IF9jb21wb25lbnRfZGV2aWNlX2NvbnRyb2xfcGFuZWwgPSBfcmVzb2x2ZUNvbXBvbmVudCgiZGV2aWNlLWNvbnRyb2wtcGFuZWwiKTsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBfaG9pc3RlZF8xLCBbX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZGV2aWNlX2NvbnRyb2xfcGFuZWwpLCBfY2FjaGVbMF0gfHwgKF9jYWNoZVswXSA9IF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIHsKICAgIGlkOiAiY29udGVudC1jb250YWluZXIiCiAgfSwgbnVsbCwgLTEgLyogSE9JU1RFRCAqLykpXSk7Cn0="},{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_device_control_panel","_createElementVNode","id"],"sources":["/Users/bao/Downloads/om3-extend/om3-client/src/components/DisplayContentPanel.vue"],"sourcesContent":["<template>\n  <div class=\"display-content-panel ms-1\">\n    <device-control-panel></device-control-panel>\n    <div id=\"content-container\"></div>\n  </div>\n</template>\n<script>\nimport { defineComponent, onMounted, ref, watch } from \"vue\";\nimport DeviceControlPanel from \"./DeviceControlPanel.vue\";\nimport * as d3 from \"d3\";\nimport store, { LineChartObj, emitter } from \"../store\";\nimport {drawWaveletContent,drawOrdinaryWaveletContent} from '../application/draw-svg-panel';\nimport {drawViewChangeLineChart} from \"../application/line-interaction\";\nimport {drawMultiTimeSeries as drawStocksTimeSeries} from \"../application/multi-interaction\"\nimport {drawMultiTimeSeriesM4} from \"../application/m4interaction\";\nimport {drawMultiHaarTimeSeries} from \"../application/haarinteraction\";\n\nexport default defineComponent({\n  components: { DeviceControlPanel },\n  setup() {\n    function drawContent(lineChartObj) {\n      console.log(lineChartObj);\n    \n      let interactiveInfo = {\n        startX: 0,\n        startY: 0,\n        offsetX: 0,\n        offsetY: 0,\n        isMouseDown: false,\n        isMove: false,\n      };\n      const pading = { top: 20, bottom: 20, left: 40, right: 20 };\n      const svg = d3.select(\"#content-container\").append(\"svg\");\n      document\n        .getElementById(\"content-container\")\n        .addEventListener(\"mouseup\", () => {\n          interactiveInfo.isMouseDown = false;\n        });\n      svg\n        .attr(\"width\", lineChartObj.width + pading.left + pading.right)\n        .attr(\"height\", lineChartObj.height + pading.top + pading.bottom)\n        .attr(\"transform\", `translate(${lineChartObj.x},${lineChartObj.y})`)\n        .on(\"mousedown\", function (e) {\n          interactiveInfo.isMouseDown = true;\n          interactiveInfo.startX = e.x;\n          interactiveInfo.startY = e.y;\n        })\n        .on(\"mousemove\", function (e) {\n          if (interactiveInfo.isMouseDown) {\n            interactiveInfo.offsetX = e.x - interactiveInfo.startX;\n            interactiveInfo.offsetY = e.y - interactiveInfo.startY;\n            d3.select(this).attr(\n              \"transform\",\n              `translate(${lineChartObj.x + interactiveInfo.offsetX},${\n                lineChartObj.y + interactiveInfo.offsetY\n              })`\n            );\n            interactiveInfo.isMove = true;\n          }\n        })\n        .on(\"mouseup\", function () {\n          if (interactiveInfo.isMouseDown) {\n            lineChartObj.x += interactiveInfo.offsetX;\n            lineChartObj.y += interactiveInfo.offsetY;\n            interactiveInfo.isMouseDown = false;\n            // interactiveInfo.isMove=false;\n          }\n        })\n        .on(\"click\", function (e) {\n          if (!interactiveInfo.isMove) {\n            if (lineChartObj.isChoosed) {\n              d3.select(this)\n                .style(\"border\", \"solid\")\n                .style(\"border-width\", \"1px\")\n                .style(\"border-color\", \"#fff\");\n              lineChartObj.isChoosed = false;\n            } else {\n              d3.select(this)\n                .style(\"border\", \"solid\")\n                .style(\"border-width\", \"1px\")\n                .style(\"border-color\", \"#84fcb6\");\n              lineChartObj.isChoosed = true;\n            }\n          } else {\n            interactiveInfo.isMove = false;\n          }\n        })\n        .style(\"background-color\", \"#fff\");\n      let xScale = null;\n      if (lineChartObj.isSample) {\n\n        if(lineChartObj.algorithm==='haar'){\n          xScale = d3\n          .scaleLinear()\n          .domain([0, lineChartObj.width*4])\n          .range([0, lineChartObj.width]);\n        }else{\n          xScale = d3\n          .scaleLinear()\n          .domain([0, lineChartObj.width])\n          .range([0, lineChartObj.width]);\n        }\n        \n      } else {\n        xScale = d3\n          .scaleTime()\n          .domain([lineChartObj.timeRange[0], lineChartObj.timeRange[1]])\n          .range([0, lineChartObj.width]);\n      }\n      const yScale = d3\n        .scaleLinear()//lineChartObj.data.min, lineChartObj.data.max\n        .domain([lineChartObj.data.min, lineChartObj.data.max])\n        .range([lineChartObj.height, 0]);\n\n      const xAxis = d3.axisBottom(xScale);\n      const yAxis = d3.axisLeft(yScale);\n      xAxis.ticks(0)\n      yAxis.ticks(0)\n\n      const xAxisG = svg\n        .append(\"g\")\n        .attr(\n          \"transform\",\n          `translate(${pading.left},${lineChartObj.height + pading.top})`\n        )\n        .call(xAxis);\n      const yAxisG = svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(${pading.left},${pading.top})`)\n        .call(yAxis);\n      const lineG = svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(${pading.left},${pading.top})`);\n      let line = null;\n      if (lineChartObj.isSample) {\n        line = d3\n          .line()\n          .x((d, i) => xScale(d.x))\n          .y((d, i) => {\n            d.y=yScale(d.y);\n            return d.y;\n          });\n\n      } else {\n        line = d3\n          .line()\n          .x((d, i) => d.x)\n          .y((d, i) => lineChartObj.height-d.y);\n      }\n      console.log(lineChartObj.data.val)\n      lineG\n        .append(\"path\")\n        .datum(lineChartObj.data.val)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"steelblue\")\n        .attr(\"stroke-width\", 1.5)\n        .attr(\"d\", line);\n\n      // svg\n      //   .append(\"text\")\n      //   .text(\n      //     lineChartObj.isSample\n      //       ? `${lineChartObj.algorithm} size:${lineChartObj.data.val.length}`\n      //       : `${lineChartObj.algorithm} size:${lineChartObj.data.val.length} ${lineChartObj.timeRange[0]\n      //           .toISOString()\n      //           .replace(/[TZ]/, \" \")}-${lineChartObj.timeRange[1]\n      //           .toISOString()\n      //           .replace(/[TZ]/, \" \")}`\n      //   )\n      //   .attr(\"x\", lineChartObj.width / 2 + pading.left)\n      //   .attr(\"y\", pading.top)\n      //   .attr(\"text-anchor\", \"middle\")\n      //   .attr(\"font-size\", 10);\n\n      svg\n        .style(\"border\", \"solid\")\n        .style(\"border-width\", \"1px\")\n        .style(\"border-color\", \"#fff\");\n        svg.on(\"click\",()=>{\n          const payload={\n            width:500\n          }\n          store.dispatch(\"loadDataForSampleByM41\",payload)\n        })\n    }\n\n    emitter.on(\"add_line_chart_obj\", drawContent);\n    emitter.on(\"add_wavelet_chart_obj\",drawWaveletContent);\n    emitter.on(\"add_view_change_query_obj\",drawViewChangeLineChart);\n    emitter.on(\"add_multi_timeseries_obj\",drawStocksTimeSeries);\n    emitter.on(\"add_multi_timeseries_m4_obj\",drawMultiTimeSeriesM4);\n    emitter.on(\"add_multi_haar_timeseries_obj\",drawMultiHaarTimeSeries)\n    //#e5e5e5\n  }\n});\n</script>\n<style scoped>\n.display-content-panel {\n  height: 100%;\n  flex-grow: 1;\n  background-color:\"#fff\" ;\n}\n\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAA4B;;;uBAAvCC,mBAAA,CAGM,OAHNC,UAGM,GAFJC,YAAA,CAA6CC,+BAAA,G,0BAC7CC,mBAAA,CAAkC;IAA7BC,EAAE,EAAC;EAAmB,4B","ignoreList":[]}]}